(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    561097,       9968]
NotebookOptionsPosition[    550010,       9721]
NotebookOutlinePosition[    550480,       9739]
CellTagsIndexPosition[    550437,       9736]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "PenduloComPolia`Importador`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "PenduloComPolia`ModeloEDO`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "PenduloComPolia`ModeloGeometrico`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "PenduloComPolia`CalcularPeriodo`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "DerivadaDiscreta`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "RotCircle`"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"67fcddf1-8b08-4271-9901-f50c57e3b182"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tomada", " ", "=", " ", "3"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e9a14551-9629-4379-b3f2-b4970701a507"],

Cell[CellGroupData[{

Cell["Por que linearizar \[Theta][\[Phi]] \[EAcute] v\[AAcute]lido", "Section",
 CellChangeTimes->{{3.701075720091448*^9, 3.7010757290020337`*^9}, {
  3.701187060786439*^9, 
  3.7011870683905134`*^9}},ExpressionUUID->"6a22543b-03c3-4cef-a6b2-\
3b34f8d9bbc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[Phi]", ",", "thetaParaPhi", ",", "lista", ",", "modeloLinear"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", "\[Theta]_", "]"}], "=", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"r", ",", " ", "L0", ",", " ", "\[Theta]"}], "]"}], ",", 
       RowBox[{"Y", "[", 
        RowBox[{"r", ",", "L0", ",", "\[Theta]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thetaParaPhi", "[", "theta_", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"theta", "*", 
        FractionBox["\[Pi]", "180"]}], "]"}], "/", "Degree"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lista", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"thetaParaPhi", "[", "i", "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "45"}], ",", 
         RowBox[{"+", "45"}], ",", "0.1"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"modeloLinear", "[", 
      RowBox[{"raio_", ",", " ", "comprimento_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "theta", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearModelFit", "[", 
        RowBox[{
         RowBox[{"lista", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "\[Rule]", "raio"}], ",", 
            RowBox[{"L0", "\[Rule]", "comprimento"}]}], "}"}]}], ",", " ", 
         "theta", ",", "theta"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"thetaParaPhi", "[", "theta", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", "\[Rule]", "raio"}], ",", 
             RowBox[{"L0", "\[Rule]", "comprimento"}]}], "}"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"theta", ",", 
            RowBox[{"-", "45"}], ",", "45"}], "}"}], ",", " ", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Theta] (\[Degree])\>\"", ",", 
             "\"\<\[Phi] (\[Degree])\>\""}], "}"}]}], ",", " ", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{
           "{", "\"\<Rela\[CCedilla]\[ATilde]o precisa\>\"", "}"}]}]}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"modeloLinear", "[", 
            RowBox[{"raio", ",", "comprimento"}], "]"}], "[", "theta", "]"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"theta", ",", " ", 
            RowBox[{"-", "45"}], ",", "45"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<fit linear\>\"", "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"raio", ",", "0.0755", ",", "1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"comprimento", ",", "0.4284", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",\
ExpressionUUID->"db1efe68-3300-4fc3-b16a-f13ff000b461"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`comprimento$$ = 
    0.4284, $CellContext`raio$$ = 0.0755, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`raio$$], 0.0755, 1}, {
      Hold[$CellContext`comprimento$$], 0.4284, 1}}, Typeset`size$$ = {
    638., {139., 144.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`raio$9268$$ = 
    0, $CellContext`comprimento$9269$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`comprimento$$ = 
        0.4284, $CellContext`raio$$ = 0.0755}, "ControllerVariables" :> {
        Hold[$CellContext`raio$$, $CellContext`raio$9268$$, 0], 
        Hold[$CellContext`comprimento$$, $CellContext`comprimento$9269$$, 0]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[
         ReplaceAll[
          $CellContext`thetaParaPhi$9266[$CellContext`theta], {$CellContext`r -> \
$CellContext`raio$$, $CellContext`L0 -> $CellContext`comprimento$$}], \
{$CellContext`theta, -45, 45}, 
         AxesLabel -> {"\[Theta] (\[Degree])", "\[Phi] (\[Degree])"}, 
         PlotLegends -> {"Rela\[CCedilla]\[ATilde]o precisa"}], 
        Plot[
         $CellContext`modeloLinear$9266[$CellContext`raio$$, \
$CellContext`comprimento$$][$CellContext`theta], {$CellContext`theta, -45, 
          45}, PlotStyle -> {Dashed, Red}, PlotLegends -> {"fit linear"}]], 
      "Specifications" :> {{$CellContext`raio$$, 0.0755, 
         1}, {$CellContext`comprimento$$, 0.4284, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{695., {204., 210.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",ExpressionUUID->"29b63d20-\
8fa2-44c6-b875-a101bbb38f1a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Theta][t] te\[OAcute]rico e experimental", "Section",
 CellChangeTimes->{{3.700848571760006*^9, 3.7008485786656857`*^9}, {
  3.700850395712558*^9, 3.700850402516103*^9}, {3.7011872361814394`*^9, 
  3.701187242300514*^9}, {3.7014540453581686`*^9, 
  3.701454051437744*^9}},ExpressionUUID->"3c0ff842-bd95-477d-ab2b-\
9e01c4467e5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Theta]", ",", " ", "indiceTempoInicial", ",", " ", "tempoInicial", 
       ",", " ", "thetaInicial"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"indiceTempoInicial", " ", "=", " ", "1"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tempoInicial", " ", "=", " ", 
       RowBox[{
        RowBox[{"Listar", "[", 
         RowBox[{"tomada", ",", " ", "\"\<t\>\""}], "]"}], "[", 
        RowBox[{"[", "indiceTempoInicial", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"thetaInicial", " ", "=", " ", 
       RowBox[{
        RowBox[{"Listar", "[", 
         RowBox[{"tomada", ",", " ", "\"\<\[Theta]\>\""}], "]"}], "[", 
        RowBox[{"[", "indiceTempoInicial", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "tempo_", "]"}], "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ReplaceAll", "[", 
           RowBox[{
            RowBox[{"SolucaoNumerica", "[", 
             RowBox[{"tomada", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[CapitalTheta]", "[", "tempoInicial", "]"}], 
                 "\[Equal]", " ", "thetaInicial"}], ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[CapitalTheta]", "'"}], "[", "tempoInicial", 
                  "]"}], "\[Equal]", "omegaInicial"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "tempo"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           FractionBox["180", "\[Pi]"], 
           RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "8"}], "}"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<Te\[OAcute]rico\>\"", "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               FractionBox["180", "\[Pi]"], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Listar", "[", 
             RowBox[{"tomada", ",", "\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], 
             "]"}], ")"}]}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<Experimental\>\"", "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<tempo(s)\>\"", ",", " ", "\"\<\[Theta] (\[Degree])\>\""}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Background", "\[Rule]", "Automatic"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"omegaInicial", ",", " ", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"e6aeceb5-eea2-4978-817d-509164f0260a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`omegaInicial$$ = -0.3999999999999999, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`omegaInicial$$], -2, 2}}, Typeset`size$$ = {
    869., {209., 214.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`omegaInicial$11271$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`omegaInicial$$ = -2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`omegaInicial$$, $CellContext`omegaInicial$11271$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Theta]$, $CellContext`indiceTempoInicial$, \
$CellContext`tempoInicial$, $CellContext`thetaInicial$}, \
$CellContext`indiceTempoInicial$ = 1; $CellContext`tempoInicial$ = Part[
           
           Importador`Listar[$CellContext`tomada, 
            "t"], $CellContext`indiceTempoInicial$]; \
$CellContext`thetaInicial$ = Part[
           
           Importador`Listar[$CellContext`tomada, 
            "\[Theta]"], $CellContext`indiceTempoInicial$]; $CellContext`\
\[Theta]$[
           Pattern[$CellContext`tempo$, 
            Blank[]]] = Quiet[
           Module[{$CellContext`t$}, 
            ReplaceAll[
             
             ModeloEDO`SolucaoNumerica[$CellContext`tomada, {$CellContext`\
\[CapitalTheta][$CellContext`tempoInicial$] == $CellContext`thetaInicial$, 
               Derivative[
                1][$CellContext`\[CapitalTheta]][$CellContext`tempoInicial$] == \
$CellContext`omegaInicial$$}, {$CellContext`t$, 0, 
               8}], {$CellContext`t$ -> $CellContext`tempo$}]]]; Show[
          Plot[(180/
            Pi) $CellContext`\[Theta]$[$CellContext`t], {$CellContext`t, 0, 
            8}, PlotStyle -> Blue, PlotLegends -> {"Te\[OAcute]rico"}], 
          ListPlot[
           Map[{
             Part[#, 1], (180/Pi) Part[#, 2]}& , 
            Importador`Listar[$CellContext`tomada, "t", "\[Theta]"]], 
           PlotStyle -> Red, PlotLegends -> {"Experimental"}], 
          AxesLabel -> {"tempo(s)", "\[Theta] (\[Degree])"}, PlotRange -> All,
           Background -> Automatic, ImageSize -> Large]], 
      "Specifications" :> {{$CellContext`omegaInicial$$, -2, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{926., {275., 281.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",ExpressionUUID->"cd9803e5-\
35e0-498b-8a01-c0b68737b01e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,62,12,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"4e6c9a5f-b0c5-42a8-bb2a-6f17f50b4872"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,62,13,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"99394ee9-e69f-4a6f-b6ad-cb3a9a8d4d28"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,62,14,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"dd29f151-78fc-4b51-aa34-9030b5478f8f"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,62,15,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"7cd8e719-1f58-4bfb-9c66-d384b52b7e64"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,62,16,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"556e461e-a284-48b2-a83b-3af040d9f778"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,62,17,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"c056e65f-519a-4991-b71b-4feb67372a1a"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,62,18,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"fccd66d6-f9fa-4c69-82b7-c218f578ea5b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,62,19,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"ab19b867-8f20-4610-9586-c309a0e64f79"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,24,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"3b1d2771-e06c-4ab9-b9f4-d10b644f9f35"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,25,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"89fb8545-fa4d-475a-b127-7fe4b0d3aa4e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,26,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"b416c683-85e6-4aa1-aeed-bf4a85e62146"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,27,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"1e09c1e4-a64d-4f1b-95f3-9745cd633bd5"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,28,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"b8aa62a9-a565-4a19-b5f5-f59d33d3c73d"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,88,29,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"0ae871a9-e509-48bf-ae59-b8531ef23934"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,30,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"4a741b38-c6c2-484c-88ab-12f0206970f2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,31,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"b6b5da1a-fc38-45a6-98e8-1dfe814806bc"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,32,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"a524c74a-be83-4801-b893-72b9a4b7f828"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,33,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"acc21926-5daa-489b-a7db-2dbe4bfb2058"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,34,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"bd3b6184-e45a-4ebf-9c82-7a4a83bb4347"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,35,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"b063ec77-e983-4a91-9d6e-0f09b4e39a9b"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,36,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"ad7b7275-0b70-42aa-971f-40454812329a"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,88,37,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"17610a5d-3765-4eea-956d-c6b07ec83648"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,38,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"a7159a7b-3060-435f-817d-a3a6192e906a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,39,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"4349427d-bd41-4476-b4a1-49310794c7c8"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,40,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"c3026452-de0e-4294-8844-c945213bf145"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,41,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"729bdddb-1eb2-4702-8b7b-0551cce7554e"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,88,42,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"d7e0030d-c16d-4b6a-863f-f8c7eeeecb0e"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,43,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"1b690d74-9e7a-4843-8d5a-6c0d71a6246e"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,44,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"1b2d78a3-051e-4f04-894c-56c78cc944d9"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,88,45,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"7d55ba2b-e991-4e5d-ae29-1cca5843b847"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,88,46,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"b1ba0a18-d72e-466a-872a-58795f9b6f2d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,88,47,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"db188ae9-4b17-4018-b315-93bf06ff6e61"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
   2,127,70,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"6b0de8f9-65dc-4f03-892c-1bffdad535bd"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
   2,127,71,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"3edf6f07-51ab-4e01-b643-3cfa5b19147b"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
   2,127,72,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"76488792-2a33-46d9-b9b3-103ff9873f46"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,127,73,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"d144c364-2399-4c09-9ce9-ab4ed008d6e7"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"Select\\\", \\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\
\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,127,74,24289481778431858975,
   "Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"f4bb11a0-92ba-4344-84d0-8ea26d866ff1"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}]}], \\\
\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\
\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \
\\\"}\\\"}]\\) is not a valid Association or a list of rules.\"",2,127,75,
   24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"35077e5d-dadf-44c6-a9f0-405cb29471a3"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"Select\\\", \\\
\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,127,76,24289481778431858975,
   "Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"e159ec97-ba9b-430b-adb3-c651fd8a4deb"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,127,77,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"e940d6e6-f0ec-485d-9703-5f4b27cf7de3"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"",2,127,78,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"d72ebdf7-eff8-4cb4-8d9b-3ea46b29e061"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"",2,127,79,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"53121bdd-6a88-48df-8d25-c1fc0a84a6dc"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Select\\\", \\\"[\\\", \\\"]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"",2,127,80,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"127d5890-5a85-4681-a538-0fa33b3e1871"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,127,81,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"7ed37ab4-3f76-46f3-a5f4-006c787f16e8"],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", RowBox[{GraphicsBox[List[List[], \
List[], List[]], List[Rule[DisplayFunction, Identity], Rule[Ticks, \
List[Automatic, Automatic]], Rule[AxesOrigin, List[0, 0]], Rule[FrameTicks, \
List[List[Automatic, Charting`ScaledFrameTicks[List[Skeleton[2]]]], \
List[Automatic, Charting`ScaledFrameTicks[List[Skeleton[2]]]]]], \
Rule[GridLines, List[None, None]], Rule[DisplayFunction, Identity], \
Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.05`], Scaled[0.05`]]]], Rule[PlotRangeClipping, True], \
Rule[ImagePadding, All], Rule[DisplayFunction, Identity], Rule[AspectRatio, \
NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], Rule[Axes, List[True, \
True]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, List[0, 0]], \
Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"]]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], Rule[\\\"DefaultMeshStyle\
\\\", AbsolutePointSize[6]], Rule[\\\"ScalingFunctions\\\", None], \
Rule[\\\"CoordinatesToolOptions\\\", List[Rule[Skeleton[2]], \
Rule[Skeleton[2]]]]]], Rule[PlotRange, List[List[0, 8], List[0.`, 0.`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.02`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \\\",\\\", \
RowBox[{\\\"ListPlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Select\\\", \
\\\"[\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotStyle\\\", \
\\\"\[Rule]\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[1, 0, \
0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\",\\\", \
RowBox[{\\\"PlotLegends\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
\\\"\\\\\\\"Experimental\\\\\\\"\\\", \\\"}\\\"}]}]}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"AxesLabel\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"tempo(s)\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"\[Theta] (\
\[Degree])\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"PlotRange\\\", \\\"\[Rule]\\\", \\\"All\\\"}], \\\",\\\", \
RowBox[{\\\"Background\\\", \\\"\[Rule]\\\", \\\"Automatic\\\"}], \\\",\\\", \
RowBox[{\\\"ImageSize\\\", \\\"\[Rule]\\\", \\\"Large\\\"}]}], \
\\\"]\\\"}]\\).\"",2,127,82,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"93abf763-3c28-4da9-90ec-957eb89bfb6d"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,159,87,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"0cae0f86-d7a8-4be3-b38a-424dfbe97ef7"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,159,88,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"9fe85414-fe65-41f9-b0c3-0331fdab48bd"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,159,89,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"8b44e058-8037-4943-812c-367e3b75e857"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,159,90,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"feddc32b-1eae-456d-977b-ca6c55be88ef"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,159,91,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"236eca6c-21e7-4fe2-ba86-7bd86e245dea"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,159,92,24289481778431858975,
   "Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"01ff2fa7-f41a-4afc-82b1-4b03a47706da"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,159,93,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"2243e863-eac9-4fba-88b8-55586b1b2f14"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,159,94,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"66345a47-e62a-4255-b8b6-e8ff7647f84c"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,191,95,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"7a6a4cfd-6279-4cce-8d9b-fd4fb1ba33ce"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,191,96,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"9bd464d0-f605-4f6e-9f55-18f0b7f0e264"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"",2,191,97,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"00d38876-6ee4-44bb-91ee-7dbe2251b858"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,191,98,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"4e1afd4f-5fbd-4aa9-b079-e9330c2ec8c4"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\
\"\[RightSkeleton]\\\"}], Derivative], Rule[MultilineFunction, None]], \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,191,99,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"55f47651-cd37-4185-a1de-4b3764b49c4d"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \
\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\
\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.00016342857142857142`\\\", \
\\\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \\\
\"0.00016342857142857142`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", RowBox[{RowBox[{\
\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\
\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"7\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \
\\\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", \\\"}\\\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\
\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \
RowBox[{\\\"-\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a \
valid Association or a list of rules.\"",2,191,100,24289481778431858975,
   "Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"c77ffa85-5c0c-41d3-8bae-2c22250f2ae3"],

Cell[BoxData[
 TemplateBox[{
  "Values","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.4284`\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Cos\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"-\\\", RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1\\\", \\\"\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], \
Derivative], Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \
\\\")\\\"}]}], \\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\
\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \
\\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.606608`\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"Private`\[Theta]\\\", \\\"[\\\", \\\"0.16342873469387753`\\\", \\\
\"]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Private`T\\\", \\\"[\\\", \
\\\"0.16342873469387753`\\\", \\\"]\\\"}]}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"0.062`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"0.4284`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{SuperscriptBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], TagBox[RowBox[{\\\"(\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\\\"}], Derivative], \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"-\\\", RowBox[{\\\"0.0755`\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\")\
\\\"}]}]}], \\\")\\\"}]}], \\\"\[Equal]\\\", RowBox[{RowBox[{\\\"-\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{SuperscriptBox[\\\"Private`\[Theta]\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"}\\\
\"}], \\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"-\
\\\", \\\"0.3999999999999999`\\\"}]}]}], \\\"}\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,191,101,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"0e7114f4-1b73-47ec-b7ba-3b6836cefffd"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Values\\\", \\\"::\\\", \
\\\"invrl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,191,102,24289481778431858975,"Local"},
  "MessageTemplate"]], "Message", \
"MSG",ExpressionUUID->"cde097a7-1669-4a9f-a713-f95b4bed0914"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gr\[AAcute]fico est\[AAcute]tico (posi\[CCedilla]\[OTilde]es)", \
"Section",
 CellChangeTimes->{{3.7008459763075514`*^9, 3.700845978222788*^9}, {
  3.7009183578980274`*^9, 3.7009183586480656`*^9}, {3.7014540971068797`*^9, 
  3.7014541048145366`*^9}},ExpressionUUID->"60e5b18f-123c-4259-ac40-\
0670d47c472e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"omegas", "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"thetaExp", ",", " ", "omegas", ",", "t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", " ", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"QuantasTomadas", "[", "]"}]}], ",", " ", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"thetaExp", "[", "i", "]"}], " ", "=", " ", 
          RowBox[{"Listar", "[", 
           RowBox[{"i", ",", "\"\<t\>\"", ",", "\"\<\[Theta]\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"omegas", "[", "i", "]"}], "=", 
          RowBox[{"DerivadaDiscreta", "[", 
           RowBox[{"thetaExp", "[", "i", "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "omegas"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7011872449853044`*^9, 3.701187351424263*^9}, {
   3.7011880617662497`*^9, 3.701188104619189*^9}, {3.701188643144639*^9, 
   3.7011887480419245`*^9}, {3.701188971169177*^9, 3.701188975044411*^9}, {
   3.701189008777149*^9, 3.7011890275808153`*^9}, {3.701189099377514*^9, 
   3.701189102837807*^9}, 3.7011891599862704`*^9, {3.7011892012871184`*^9, 
   3.7011892240873213`*^9}, 3.7011898911812863`*^9, {3.7011916179974527`*^9, 
   3.7011916943090916`*^9}, {3.7011917262265935`*^9, 
   3.7011917263828716`*^9}, {3.7011917725126705`*^9, 3.701191778973895*^9}, 
   3.7011918194161415`*^9, 3.7014505099321327`*^9, {3.701450544121349*^9, 
   3.7014505472933846`*^9}, {3.7015293532028685`*^9, 
   3.701529365007715*^9}},ExpressionUUID->"8420ad2f-1786-449e-9430-\
89dfe6eb3138"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fits", " ", "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fit", ",", "i", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{"QuantasTomadas", "[", "]"}]}], ",", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"fit", "[", "i", "]"}], "=", 
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"omegas", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"b", "*", "t"}], "+", "c"}], "]"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", 
                FractionBox[
                 RowBox[{"2", "\[Pi]"}], "1"]}], "}"}], ",", "c"}], "}"}], 
            ",", "t", ",", " ", 
            RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "fit"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7011916690429783`*^9, 3.701191788010994*^9}, {
   3.7011919043764353`*^9, 3.7011919172057743`*^9}, {3.7011921493523617`*^9, 
   3.701192199961157*^9}, {3.7011924328854017`*^9, 3.701192509672365*^9}, {
   3.701192542040736*^9, 3.701192585072481*^9}, {3.701192635513796*^9, 
   3.7011926487964764`*^9}, {3.7011927115854177`*^9, 3.7011927457209377`*^9}, 
   3.701192805358018*^9, {3.701192842384311*^9, 3.7011928666105766`*^9}, {
   3.7011929379002547`*^9, 3.7011929813584366`*^9}, {3.7011931100200367`*^9, 
   3.70119313134388*^9}, {3.7011932179822283`*^9, 3.7011932232287836`*^9}, {
   3.7011932682792177`*^9, 3.7011934189285984`*^9}, {3.701193495281371*^9, 
   3.7011935229234524`*^9}, {3.701193563044297*^9, 3.701193710940072*^9}, {
   3.7011937518276052`*^9, 3.7011937520776157`*^9}, {3.7011938047377005`*^9, 
   3.7011938373719053`*^9}, 3.7014505129791403`*^9, 
   3.7014505513404293`*^9},ExpressionUUID->"ce1c3599-822e-4680-b229-\
8b76881758f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", "tempo_", "]"}], "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "tempoInicial", ",", " ", "indiceVelocidade"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"i", "-", 
        RowBox[{
        "\[EAcute]simo", " ", "tempo", " ", "marcado", " ", "pelo", " ", 
         "Tracker"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"indiceVelocidade", " ", "=", " ", "10"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tempoInicial", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"omegas", "[", "tomada", "]"}], "[", 
          RowBox[{"[", "indiceVelocidade", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{
         RowBox[{"SolucaoNumerica", "[", 
          RowBox[{"tomada", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\[CapitalTheta]", "[", "tempoInicial", "]"}], 
              "\[Equal]", " ", 
              RowBox[{
               RowBox[{"Listar", "[", 
                RowBox[{"tomada", ",", " ", "\"\<\[Theta]\>\""}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"indiceVelocidade", "+", "1"}], "]"}], "]"}]}], ",", 
             " ", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalTheta]", "'"}], "[", "tempoInicial", "]"}], 
              "\[Equal]", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"omegas", "[", "tomada", "]"}], "[", 
                RowBox[{"[", "indiceVelocidade", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", " ", "0", ",", " ", "8"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "tempo"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funcaoX", "[", "tempo_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"X", "[", 
     RowBox[{
      RowBox[{"Pegar", "[", 
       RowBox[{"tomada", ",", "\"\<raio da polia\>\""}], "]"}], ",", 
      RowBox[{"Pegar", "[", 
       RowBox[{"tomada", ",", "\"\<comprimento do fio\>\""}], "]"}], ",", 
      RowBox[{"theta", "[", "t", "]"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"theta", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[Theta]", "[", "tempo", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"funcaoY", "[", "tempo_", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{
      RowBox[{"Pegar", "[", 
       RowBox[{"tomada", ",", "\"\<raio da polia\>\""}], "]"}], ",", 
      RowBox[{"Pegar", "[", 
       RowBox[{"tomada", ",", "\"\<comprimento do fio\>\""}], "]"}], ",", 
      RowBox[{"theta", "[", "t", "]"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"theta", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"\[Theta]", "[", "tempo", "]"}]}]}]}], ";"}]}], "Input",Expressio\
nUUID->"8a83c019-1227-443b-a586-529d021d6ef1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"funcaoX", "[", "tempo", "]"}], ",", 
         RowBox[{"funcaoY", "[", "tempo", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"tempo", ",", "0", ",", "8", ",", "0.001"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Listar", "[", 
      RowBox[{"tomada", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", 
          RowBox[{"-", "0.26"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.099"}], ",", 
          RowBox[{"-", "0.265"}]}], "}"}]}], "]"}], ",", "Black", ",", " ", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Erro m\[EAcute]dio (0.5cm)\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.07"}], ",", " ", 
          RowBox[{"-", "0.263"}]}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X(m)\>\"", ",", " ", "\"\<Y(m)\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"b2d0df55-d8c7-496b-\
84e3-421e19062044"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {
       {RGBColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
        1.6], 
        StyleBox[PointBox[CompressedData["
1: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
tjTHOlc65Dv/1jqFNuu52pniToeLkXdd/j3A84/UT9meo0OovWhuKVqZaU/P
+gt0uP9SedwCrfsHzrZeosM91qpDXGg34/21Jr44HkEODU2luJ4Z59e88aOD
39LUgQvo9KdsTv9dRZuyfJZFv9p9C+4G4vMSducPlzDgwpxv++R1OuhWr/PP
QrvdFDknG0yHP5/kvczRq/UGmo6F0qEx+HOwCNpfae9Du3A67N1YVzNwnwHa
eh0aDpF0cPb9y52NtilROWscTQf9M2tC7dBDfSoqyjF0+F6tICWPNqVmxi3e
okOOffrITDGuHzvNwsrj6HBmX9DTFjRLl+NaswSM51/sb2PQiWYD28cTsX93
H+I/g141NzjglkyHbaePXFJGb9OvEnqbgvGRtIaJFf2fTs3QrjQ6KPSE1zHu
4XpTY6h6LZ0Ow9+zcirRqqdW8Vdn0CHloWxZLHoKHP3eZtJhfeXClDtapEba
5VsWzhe/HtujK+fv/kOOZ9Oh4KArkyJaLfvZ6/4cOnyTdenmQ9e98D1ZcZsO
r36498wXMWCLOYuJ/x06DGziYH2P1o6LeKOci/H+s9X1KZpar8LoRV89uJap
Bi2lomvtkEeH8BSbZwXoXkdh+xF0DrvAkxT0xz+inwzy6aDj7b8YuXJ+Tvfn
QnTBxWHra2idTa+dJ9DOx68v+KDTy/scpe7SYYE1nO6Ftn+aOKyDPnJA5Kk7
2vrA2FsjdJnDESY39CWndqNjaC4PGY8VJ0/I6u1Fb+Z5wOOJbhVVruVF62d3
jlxA761nv/cKn7dTwu2bH/qp2rxQOJpb1VY+GG1VYsIsg34q7591Cx33OtGj
Et+HPntZJwttqbTHTAnNp7BGvBRdfPZtWyr2x7MNI7LNaFNfhYcT2H9v+2Jd
etBad2bXq6AneQrffkHr3uXhtMP+ZtMoCmTC/vd77nj1Oo6H+C2Ok+LomDUs
F2/ieCmM7LZQQ+tyskyG4nju7b4ZZ4aeH0uZcsfxplScnvNDa8uuuqqN8UCU
jkdloy0L78auwni5fO+CAQW9jf5NoSIV54+dpMY4+kaUnZkhxlubLa+5EMab
2728tYwkOhT+Nr+jjbbMtTYzxng1sGTj90LLXrNVqYung0nI2gd30F4lodnc
GO9yzi5evegQ9pYcA5wPJUNTFuw4P76tEd5z9SauDxUhblposfF7LmlRdLC5
/e3OZfTezJJdeRF4/NjYQgXadcn5TnoYHZ47KXpPoc8FaJQEhtDBNdmeTwXn
azFHrpnRDTpMZGzuuoBmEpMo4cP53n+MqagaXTdoVNASgPGZH5D9G21+bPaw
pT/OtxK+Rwdwvcg36838cBnjOVPu7S30wLuubEsfOrzp2yLBQM95kSfgIsbr
vIWPHK5HT7ZxN/OfpwPTF74Pfuj84WsjJzxxPpHhDp3osV1elOtu2J+nv89u
xPWP2rzNIcuFDqX6bim+6OUt6zoKHHH9Hhc58BJtpPRgOssO5/tn1mV5XE9f
2wR+DrKmA6vzrpZwdP535fsnT9PhlOTtiE/opaHrmkLmdPAxUjL9D9drGWXi
HsWEDqkkTfY+2uHPqXHrE3R4uE99aQ2u/x+LKVxfj9Hh9s1Tnd7oDW8yeOz0
sb0Fb9KH0JqrVs/S/6PDi40XbA/jfpLtfYgmdgCf7/18YzV6wK0q1IrA+TEX
2bcZ96dfevV7YvbTwfj97oBkNKV24P39vXTItTotxI7729RkaWj1TjrUxfpk
XkXnh4zKP1bG++fMcc+gS/7p9KVux+v7dJzdcL/0Hi6M9JDF9eJBddFHdAb9
31GVzXRYHsh7Zov77Wih2ebRDXj9MYOX79AX5zoFg8XoYHZkqtwa92u+wQRp
vnV02GHd4jWMzmKdM4nhx3iPGGRzxP3ebLdZ2TwPrp+6zhe+ov3sVdQNOeig
nuvx+DzmCx5veRdSWOjAqz/ftIje5pH249lfGhQn/EsNxXzjXnaYzOQiDZT8
/dX5MT+5316a/2+WBnepxwvuoC1HZ87++0GDXjbLHmXMb+iHLYO/j9NAvs2r
pQ39vfTX9NNPNNC8bOF6CvOh44a/WpKHaWBc8aZzHB2tlP3jGEkDKcGcTzcw
n+KX1Y6ee4352BnzCjHMv+Y2maTc7KaBX0SJUjXa/ruNCF8nDbZ0bTc7gfla
fyuzSAiNBsdfusn9QP93ajLzI9DAq3Tidizme6c3TN/f1YD56F+FWmXMD0dC
JvQvVdHg1lyOZy96mzgjNPcR5muni1t8KSv5zTPrpmIanC4oLZLA/DPyw+f3
9HwapHD93URFy9zxWNuaTYOh6gkFT8xXeaXKZ++lYj7+tLFdBPPbZAuptGvx
eP6FotF29Btfzb8HommgOv4u7ALmw+EKd3cshNDgSFzsfSnMn4nvLPuyAjE/
/Pr6SA+aV1NeQvEyDcz7u+xDMN+2Vf45+vA8DQ4/Cp7ag/l55j3zFEk3GrzW
/zv5De1Z7LI/wIEG5yS0LPMxn1e8qzf01ArzV1U1JUvM93k6lENWm2K+rs9w
FsT6YJrz6m5VQxosf+RkeoHW90paNjiM+bdnwVwU1hM57MvDpjo0mDt1/cAh
rD8mNxh+M1TH9m1y/cSG9clze60tajtpYBO4pZ+GtuZISl6rQAM7w4tCEVjP
SMwo6r3ZQoMrnewZR7D+EXjATsRI0uB6dJLtGqyPJqVUbu5YR4PC+03OvejQ
0heqdF4aKA5L30vHekpuuzShz04DthRrSVust9SFbtQ3/6PC11kmmhzWZ1VB
FqVSC1SgcyRnzKCDdXdsuDRFBf6uzNRmrOce7S4Srx6jQr1GQm0U1nuaY54P
Pw9TYSJg4pcp1oMvmU8Nsb+lgtFvsZNbsX4MjyaqRXuoEBAaSp1Fc+rIE+uf
UoHrZPQhGtab4VNbwzjbqLBGKqI/FetR7U67hK91VDi686XXWaxXmRibztWX
UaH8Qhm3Jta3k4GUrVeKsd7MuVjEj/XvbGwNRS6XCiURZvu/oJU4Ig2fpFHh
mnAWrRnr5e72gTdmcVSQ0b+knYL1tNReB4f+cCq8M+C754n1tuTW3//+u0aF
DRezZ//D+lyB61ZtkQ8VlJ00tmzC+v2itkTKvAcVBi+s3bH8YaV/2+/ucaSC
Y5byugGs959EVk46n6bC+P3yF1WfsP45s/dGhDEVrNQKTyV+xnqZt9w5/QgV
ailCRee/YL7xM6skQ5sKL+vYGg3HsN4pija/uZcKHBS/OOWvDGjIkA3wVKKC
w7OzG/jGMV9S3bNJeysV8+Zu+2k0j2HiSRYJKuzjvG326hvWe13KG2sFqPCB
l/KregLjm10s/jQnFXqZZbQyvjNg5r9LFVP/2uFk9eOtgZMYv/Xeib7z7fDk
r/Z9ux+4Xm+4oPF9oh3a4mvb/5vC+Od93WTyoR1C+L97KUwz4PDfrVIP37YD
zbC2WGCGAfH7mS/Nv2yHXZfHXBfRHj/EKCr0dog9aFg6/JMB1eWaYlZN7ZC9
vdbtySzuN4+ORfpVtIOz/Fhe2RwDbpkdWh9e3A6OTPeOZswzQPSUFiP0djtQ
PKvtg39hfSNoPeCd3A5h+3pH3BcYOK/GpUyj22Hwv/r2U4s4n+KINrmgdhgp
2MyivcQA7tN99AmfdviV1JG57TcDyhb3Efnu7aAZZx4mvIz5zDURtSN27eA3
FNHM9AfjaYM8jJi2g3QTq9YEWmyHzqi7QTs8dgxgHviL9ei+I4+/6OD5Apmr
qP+w/v2ou+vU3nY4xsmuUcZEgvfaI9erFNrhUbZbcTYzCfuexd9mk26H+r1u
ulGrSDh5xi33sEg7RDrdZ/VlIaH4jU5SIA/2x8enX+1ZSXgglBlWwNwONaoe
E4ZsJKxz4AxvnqcA/FRm11xNQnam+t0n3yhAzFXu2sZOQk3g5DfaMAXsFFO9
RDhIkBb+c676NQWGGy5VsHKSYMZjtj/tGQVefRr7NY0uWcNu6w4UsN2UoP6e
iwTjDTsndlRRwISX3aeLmwTTXskf48UUWLzxMa+ehwTeK5v9UnMoQBuhNBat
IcH3c2XqrkQKUNr3NyfxklDgYGxJC6fAB+6vuUFrSVBcm9Z7+CoF2r452nny
kbBNS2UteFFA98ORRQt+EiYGP2yUc6SACEXV4T8BEmJfxguFmlNgW0lDhqog
CTrGKn96DSjAKhiYtkGIBGeL/q9COhRY/0LYjEuYhNUsteNHdlOgcMOmV3Po
DV3r+C7K4/2PaaweWUfC4TQjt1uSFFgrtPpbpwgJk097OLP5KXCtYENAjSgJ
3U0S/3LYKBBzT7Yqdz0JxxSeWSYttsGsFvVWtBgJ54qjFQO+t4EJewaLtzgJ
paxykeYjaHEDvjMSJFzsCL8q97oNukTCHulJkpARdU904kkbrJf+PqC4gYRy
wcLzd5vaoEhBOVp4Iwkjex4mHy9rg4bshaZltDr5L+X73Tb4d3nR/YMUCf7e
U2FBaW2w2eljwtNNJLRf/eLDfhOPPzgn/1iaBMGvDpeDr7UBQ8NIMXkzCR4P
lrOmL7RB5v0D6X5bSKiSsZ8zcWoDgV2rnay2knAw3yblgXkbGL8wiyVkSNjk
NHhr4WgbbJT/zSstS0JwxZspNaINdBRrRljksP8CznR7qraBQ6Qx8yf0CZUE
rbStbRBTn+NKkyeh4mzhsWrRNhjjPStQuI0Ek9uja59wt0FzQdRiyHZ8/ot7
aS//tkK004CovQIJ5rs8fnVOt4ITt6o7oUiC6FSrTvPHVgiSvvxNXImExxXG
UXf7W+HAmpjkX2itkrHha89aYXaPhV2vMgm9PFanDZtbYQN0GjxQIeE5JYVb
uKwVBhpenwjbQYIeTzxrd34r5O48535GlQSm/eYWQSmtIC6TkLxrJ8aHB5+k
TGQrrA0mnnDtwv7XnrZv82+FpO3XmYfR19KPahl7tkLMH8v9VbtJKDsUTRmw
aQX756PnI/aQkOy0k+WUcStE+m7PsdiL80/zg2DHwVZIP2zYuE2NBANxPQ7l
va1wMPEcfQmdwBCcjZFvhfflj+uf7iNBJUn827A4Pl+YiE9Tx3g7up95O28r
1O4z1HPcT8Ll+8767kytIFAm2qesQYKllmH1gU8AwhsYe5fQHuraMTlPAfgO
Dri3a+L4XBbR/fgQ4Nkqa/ebWiREagf+E0kE2B/dtMOYIOH8xv3f1XwBRr8c
bRDRxvUhSW3XIUuAmT3uTINo4ZLAP7paAFeLgv7d1iEhIHz3RQVpgKmgxQpb
XXzfb2WNLKsBonfpr9t0gASBdleWp19bIN1qcssw+nEB06WA5y1A7XRl5Bwk
4YbVkV0byltAN+2AqqUeCSKLuhceJbcAiwyfnPB/JMRzrjNR9GuBuisutS/Q
h3s42LNOtwB/3DgZfogEiZbrVb+0WkDzom6C5mESfPz/hR+QboGzR6RezaDf
LSvdv8bWAn9sNHOKjpDAl/ZW7/5YM9xVPf3NXB/7g3U6or2zGdgDDtRzHiWB
yzcu8/mjZrDSfbKqHi2Qv1jckdAM+Z/a250NSJAquv2u3LsZzPavXxA4hvNX
jtclxqwZfoxWZjWjKf0/Pc3Um8H6cmSJ83ES/n4V3SgoiddnJ0vxGuL7gVMR
/GsC9jXvFyvRQiEflM+MNsHfosuq5kYkJL5s/vKN2gRXr16mL6GjDQ4uud9r
AuYhpoqsEyRYGU0kDUU1gYIXMa1uTMKbC8Yj2h5NmGe4Bg2ga8+prU093gTl
UH/a+yQJbp+v6g+pNEGkXcB1XhMS5oyEWtcJ4nH7VWNF6BeHhHJ05xohiLU4
QfMUCUP9Jbx2/Y3wPOGVX+/K9wy9W3Qv1jdClOdchpMpCZJSk46+WY1Aboqc
nkeX8CQVeAY2QqYXX0C4GQltmW1K5jaNcMJaco+QOY53t/6OPTqNUGhwWCIX
PX9JmsG+uRHsOHZv32ZBApu6qdlz1ka4yJNoU4FuKeLpD//cAE4ZojVqljg/
YsIjdj1pgK9tMdub0eJqG9Pe3G8Aj8DmJuI0jt8dg12eNxvgaUOocyv6WdSd
WwseDfDmYsdWwoqEGGjv8TveADMNPr8a0Z93BClPKjdAan/0wJ4zuL/J1r42
528A+vE19MfoXEfnn3Uz9XBribdZxhrnh/m9Wt6+enAWf9iQhS5TenTCsroe
bp/ja+K1wf2uhDaVlVoP/ww9W66jf3EbUl9drgeZThaYRL8cofxmtqiHG/c3
Np62JWFtejldRr0ezG+IltHRNRxUE13xelhFO5GlbEdCU3rja5PlOrj3St0/
FW39zOuK9VAdbBYw1P+Njuzo8rJpqYOmf8Kc1vYk7O9/NWZ2pw6kD26uakH7
f88SOhxUBwbN645IOqDVjTer2NXByVvZtCvo4PXqeny6dWCyzVO2D73tUknJ
mHQd7PY55qHgSAI9hSe0nqUODnbyJgaj1zwaZA75WAuvBeJS36AvHS8x0aPV
wkBH3WU5JxJ+zoo+ZCqqhQiOkJ1+6LvU9/urw2tBsmC6g4auH6TvcHCphd9K
wjv5nUn4cKUIuA7XgiM/9yVL9LKLy7oHcrXwPPFPWB761FUWl0OctaD8abPb
Z/S31eGjg19rwF6FIinvgs+34W7weFYDUXfk75xFe+u2bPhVUgPyF+sm7qHv
7OrXCbiJ53MwWD+ib49lmyy718DgxOrPkq64Ht53jLxsUAM176ixp9DarYm8
kwp4P7LoTzS660WGqO2aGhDefmxHC/q49kL/8+/V4OfpJPcDrda199reF9Ug
VlgyInkW96f33zVyHlUDB/HptD5ak71J719sNZwW/5bijRYzM3p2xqsailPu
xGajXZIdl+sMq+Fz7M+DFLTArcY1/CrV0On3qfYT+kuzlIozXzUknbnxebUb
CYdeuqbUTVVB/ufhl1vR+oIXvTh6qkDLYfslXfS+n1umTpVXgdvLlJdW6Mba
i0fyEqpgjrT/6I0u/278cPxCFdDmR8ui0dQj7cdUjavgvJH3rttogU1PrPxU
q+D4SPC5x+g1ox48zQJVkHEu0roFPetKjWX6WQk1cTysnWjS4YvwgVeV8Ley
wPo1uu3ozKvQykqgys56DqEPe7L9piVVgqjogx0f0Mxyes2rvSvhaOrN+5/R
booMg0MmlXAly+b1F/S6pGkyYlclrOZhqV45bnu4MfuJUCWUNFgfXrk+Elzb
OOcqoMftbNzK/WVGFAKOvq6A+F7Z6JXn3+DW+HerugLOZT9Q+3/7+LsCelIq
gO+saNZK++OVhGTX+VZAZXdG+cr7+Q4fVbEyrYAXDp4BK+8f4nD/2d09FfCu
ZOj3Sv+05djJfV9XAVYyB1R80A66xVfVfpVD83FWsTNoprnH82H95XA8OaV+
pf9dr5Z0vq4tBy6bK2tl0Hu0OhTk0suhgEdbgh39+62KQaBfOdAnIoZXxnf4
/Bqr1+bloE78sVoZ/5kz12NV9pVDhqpl4kp8KI8VCsetx/t9cL6xEj+nzuds
nl4sgzDzxW0r8bUQHDBuyiiDc0FzcSvxx85qnN3aUAbXZI+VT2J8mlG2uitl
lUHQ/L+4ZvS00mJk7tUycPISV1yJ7/P8T2RFrMrgxnhDlAn69d2IK4kaZbAc
z35PAp3KuqVMQLIM7p1UCx/F+SO9bdVv5d+PQflLglwR+jrfrIxe02MYbXaO
c0EHnG475BT4GFKYRJpk0Exei63xWo/hbzhf2YeV+W0iNN/x7xHUPn/hcRv9
ZtJbn7vtEaRPM36aoge7PDadDn4EJx92/rcGLbtq37vaA49go6GeSxuuH+YB
fz9sYnsEEw8WTS+hdc/QUzLoD6FQpFhkM3oDw990Y+RD0DguWdqN61PQm/HI
yiMPgevKTsEAdOjY8zhT7ocQINN7Yiva+Vvbc47nD0CQmHTtwvVvweZw4bPY
B+C1EGV5AX2gu90v2+gBFHVUyQmhpdR9Sq4JPIAZ45uvq3B9FS8NzL7QVwpH
z+51OIk2Tx8p80kthd/LP179wPVZpiboyE3zUmjjXpSPRpe5CD+pECuFVwl3
XaTRHwN3x04MlsCXa8fi6nD9H5o3/qN2pwR0Su3uGqC/Njf5ptuVQHuXWdE7
3D/G3O+c5t5SAtPuVZnn0KlibGsSP9+HI/0cIcu4H1EHXn5TuH8fpHh+2kWi
Q35Vmw+634e2PEl1AbT4rE5VrhK6geDNxP2NL7rX2n+6GC7PS4xsRA/RMuvO
VhWDsX1Y9V3cH2mi+Zu8LhcDv/up2K1oA0/qYrR6MfQ+9zlXiPvrO42K3OY/
94A9ijTfjNYomvJhb7sH/z2PMLqD+3OJ5NsB19B7wP89wnw92mQoWW700D14
rjt3KQH397Cx9dRL3PdAdf1cITuadmg714aXRXA9s276KuYH4h3mFiOJReDY
EmA5iflEWuXftS2mRVC9N/qDNXopQy+mSqwIZux2xz/H/OPyamkF2rtCyFB6
56COfqlncmwqvxD+E5iyK8T85bKs67E9LoVQPD1yixfNX1EVlba9EER493zz
wfxHvsHCRmiqAHwnrgSSmC/t4NHc/rCqAA6r/3eYQFdSufTtrxRAQoOWYR7m
Vxvf7hLdpVUAPioCqczodTEz09IsBWBxxF/KFvMz2Q/ETuUnd6E7fP/MyveY
Y5JDey1u3QVtua1rRdEeSsdP5xnfhRNC/FcvYP53fCdjgV30LkhRPux7ivli
1ky0+62hfFCWjjHciF402s6rejcf1oeytF7C/HJ65uD+edd8MLtyLI6O+WgI
ddMxhlI+yLRfbhNBq93qzHk3mwcl6pmWLpi/znJyR7A05oFV7Rvrasx3vThc
7I/cyAO5OfNeZrRR6OaoskN5oOdvWm+A+fEcTdtkH28eNAXwiqZi/jwd7C/x
sS8XCjuezgxhvr2a6ZB6eVYubMhlHNuCnp94zZZnnwuc97MVz2J+XtzC218p
nwtA9U59gPn8gJ8Md9/IHXBn7YmZxHzfN/B6T8T5O/ArTk5YGT08dfJxyL/b
MBj5e+c5rA8WggjjJ7G34fZE7/dSrCeYGo+6mG64DWO+2ofGsN64WPQ9U+lR
DpiEvDu4Gf3AgSXjhFYOjE4afrPC+sTtRQ9P64ts4F8kiBSsZz6zrsrzt8kG
3y32el1Y79i73P53YyoLZoUvrlqF5juzvvfNjSwoCNt5dQ/WR8OnT7RdEcwC
6e0Xq85i/ZTJG+vjXpgJGjnMlVlYbxUdCEx9sDcTnqs0X+3CekxmWLlT81kG
5mERgstYr4n2r2vYeCYDYpePXt+GDt/CxHlyKh1knX63m2F9R+kSPDMQkg6b
uOM+h2A9GPSu27JMJB2O/l498QjrRW8eriKyNA0mVdzeDmA9ycMzMWKpnQYd
ofRKZnR+Hnu50utUYCpQCZLH+vOdomG1mVsqXJxsP2CE9WrxN4H4N/9S4NeJ
fBZfrGdfqP4ZKU1JgV1bZ6mZWO92tfAeHdieAmtXjcW0YD2svZTpZkVJhrI7
FbYjWC/HHD/4Xs0iGdY/iNVjQa/zW/jv3FQSWBc2aW/B+tq0YkLrT0QSiFQE
mx3EerwqNc/h88Yk4IpWiHPAev2v+0+jbXWJcNyf+/sNrOeHdcXynxolgsYh
X987WO+XRRZOU78mgA7rU5Umeaxvci6/lQhJAPVvjpsG5EgYP9c20yORABY7
y479lMX1V+Tv64818ZD9RbhxDdrgxqSY6Yl46Gli85KVwfZv2VZuMBAHql9+
ntPeivtxmL3+A944sPlh3mq+Bftv5LpCl14sDCWUu57fjOvlzQ03HgbeguNd
1zwjpDE+qVHnT9TEwJouvb6cTTgf2Cs21f+4CUfa4/IrpdA/pBs+yd+E9c1f
h55sxP1TfvHMgGM0rLvw8ebQBhJa3QeUE3OjIGSdUMW0JLbXb8RIaCgS/uzh
M2VD28oVD9uIRUJZ0KVAUQmM5yD5Pz7mEbAtnVTcLo7nj9MoZmnh0Dk55qEp
hvcLcDZY3R8G5i+0tA3XY3w+yqoMFgkDTuuQh7aiJKh8TOZ7YR4Kty/bNFwQ
IUFur7D/18wQCPe75hG8Dt9Hw5XtzVAwhArEPk0UJiH9nSk9eVMwfBDX6s8X
ImFKTeKljPMNkLHRzqoQxPwo1FLlVmkQnHI7LE4RwPfll5pJ+HAdqGe4z/Tw
Y/tcxTxrLlyDr42E8zAftk9R/GsUcyAkOedo/FiL73PjtT9v0lWwhaFPf3hJ
6M7etes/GX9QDW104UGriB/YsrPRD1JzZjrE1uD9jgiY9Z+4DHUTBI88D14f
m/d617gPvBG1U9/LjfPhC63wWKg37LUSMtfjwve/zP9ss9QlqDISdT/JifXZ
5kad+uYL8KRx+xU7Drz+dDgH35nzoGG5JtKLHftbqVjRZNkTyI6rOYGr8Xl8
B6kCuu7AXbUbbrJhPPobNtjcdIXQvsWZDFaMn7nLP7QGnCCoPFyrmAXvl3ZR
s0rOARjnM+/VrMLzLWmX2wNs4UHuzE4aMx5X3tQ/XHwafJgNvr5iwvaql7cE
2pgC3dD++eg/BmjP3N7qJHkCrq+Z+jT9lwFMkleXNGiHIFb/kRrzis1K86lN
6qDqb9LJt/L7sKvdt0OqomByL/2u1DI6mlbEzKNILN1S7lD5zYCgXl0H90Ad
otG1a7/OEh4n9MO/Fh8lNtRLsRsvMqB1QUunZtSYCF47qOSwgOf3Z/Nd+mpG
pPaW1nn/wuP1ezcXjFkROqv3l4TPMyD3i5PGpilbQlVAlTNjjgHD0sVxm10d
iM8Re8jS2ZX/DynJODXoRPB/H98KP9EvjX5UGrgSHOTkZO8MWp9z+/56N4Lj
wPv9X6axPeIfJr5s8iR2/GcqsDyF97v4nFET7kWsXx6/zI/mk/Yw6v15nvim
tuOi7A8GlP3XsGAqfZFYMq5frTXJgCltBuXL8UvEvy9r95/6ju3roPGGXPEm
uvOahTwnGKAiza4tm+9DVC/9lxH2De93r7+594kv4bVK4cXtcQYYKf+cCfl+
mfh8Zqyu7isDzn+fNtjHd4UYvvfT+tUYA2xrd2hMq/gTffZttMkveH30/M4S
w6uEJrTOcKHjL90ssfcIILbYWX2T/Yz383BYvz4ikNDYulSl9wmvl1b/03nn
GpH+acnE8SO2p2rXmys114kFzYbukA8McFVmTo53CiJaDGMVC0ax/6P+agxP
BhFRYR3naSN4vy3J27dfvkH8vFB258swvp/bk6Lzf28Q11VigQttW/Z3/nFo
MMEVkfta6T0DnoyxOY9xhhCLjzZ9OfmOAWOF8sT62BBir9h/i1eGGJDOf+Cl
Dn8o8XKvBn/eIL7P8FNHu6RQQlVNYddTkgF++z8ZXhYKIzb07HWZYWB77geM
BieHEQrM/o8l0GrfDp8PEQwn1r9aLXD4LQPM+4eP+yWEE+6y35K8B3D8Om68
tuWNIEymFdTz+7E9E61WGtERhF92J2fPGxzvhQQtLrZIwvYjsDOjpz5avHl6
LZJQS/utpvoa+7+e+Yb/r0hC2/xsvmMfA7q1OXPEvaKIV3YTh1f+P1ClLSP6
wacoQvyQ7Y7nvQyILE0vVTgdTXhWp9uyoJ/oNThkvUTvtiPVe7C/SpNEF3Rv
EmMTAUWXurE/y6/v0K2+STx+VER/+BLbm79H5IpMDOGTkKD99QW+/yvYmZ0a
Q+z4PiYqg5bjCJ8pYbtF8EkYmTg+Z8BhKY/Wgku3iCJ1+193u9D1I9xRw7cI
2pfy1Z868Xldvw6aGcQSSyxPw2XRU0d8hnhrYwnaebkA92cr7fl2+LFUHHH1
5aFvZU8ZsGDVubw3Ko44oJ0y8OsJ9meMxfniqTiCz8znsDZaQ2ULb9D2eIJR
e4CI7sDzr+trbrSOJ6bUTra9pjNgucsgZEd8PGF6/3uvNPrwifjbNW3xRHHy
Sb8LNOzv1RrHH83EE22rm6rbqAzYpaVrLLo5gdhhaBIniA7VdnOfNU4gfKkE
p0s7Hn9vcVo3OIFgjkiTbaLgeK+985G5PIGQOOg2KYDu+lj2TPV9AtEt0mTn
3obz+VB7Tx9PIjEgGBFGa2UAq0xNy5d9icQVx8Yzm9ALnJJm7s6JhIEkMXkN
sH899exsEhMJb65J9XctDFAQ0ixob04kym5kHCLQog4DX9LGEgn/nRyi+c0M
MKirmyUFkgih5bnHq9Gu7cbJcRpJRHaVoKBnEwP6hmbjK5zwOCu73utGBhxc
elZ9MDaJcNrndoRAC820v9CrSSLWpnVtLm3A+ZoXXFw9lEToeVf0i6Jj1rrw
JbMmE/5sKa6R9dh/H+P7hrclE/Wao29Xvn/waxhpzzJKJqrLlpU80X0X/j2k
+iQTrD773UdrGZhHmjqczkwmglaPJ1igl00lqm1akolXcoeLemsYUJV1wqdn
JJnY8Syq9BhaI4TqW8aaQjz6/KbgWTUDrLZz31qWSSH2Rh1NOYKOLPSJqT6c
QlRN/Lr+rArf15pfnzybQuyxGnY5hj7v/SjLMzqF4OD5Y9hbied3fjTzKEkh
3v7ct98CvRApYtr/NIUQfuyrMFqB8XfT7dyjsRTidmK4jCfa/GHjlenVqcTz
KhWFpZXvWT4Vn8jdkkq8pCprR6H9TqV1N+ikEq3vdjiJoYUc63q0rVOJXS4D
OQ/L8H3b/qqo+qcSF7bUTeiiJUyFO2NTUokRIwsTxmMc/zVOgaZlqYSez97+
S+jBQXGZqGepxGattstr0RL8qgUyH1OJbebmag8fYf9z2vUr/UklkkNPiB9D
c5hI5uYJpxFyebPSPx7i+G/IfH9NMY1ojgk4kbTyPaVN12X6wTRCco3I/X0r
x609j/qdTiN8aj9uH32A62HSvGbyhTRiZGaBjFmxV+5OsYg0gnnKonEf2pHq
wM+VnUaQqUxdY6XYvwcWmxzK0gibgIG1mWg5pbcSstQ0IrIfIo+hmVQ0RU36
0wj3cxFqLGiOHIm08a9pxImMGanGEgY07dwePP47jbimUXvABy2UPUg5uSad
GHgcmL8D3b3q7AGZDelEXP6w1sr3Wn2dzyftlNIJNV5PsXK0n1pD2WqtdOKQ
X/4eb/QDyWQfoWPphO+bmeR9aMfnYdtunk4nbhhS9jCjpfIjmt3OphPCa1wk
O4tx/G8el6z0TSeOX5bXT0Nz2OrucwxJJ64ZH2xxQkvdDWW+FpdOcOd89N+D
lmj65cyUlU58cJe/wYku9j1w+lthOkHr2dz7buX7SCN6t1ZZOjHH33+uBr2Q
ktewVJ9O3HRTM49f+b7SuZlnY3s6Ef9XKc4D3ZXS0ljamU78/JUktPL9ZPrO
5abcV+nEtlLVr9tXvteb8Fv9l5FOaD54smbtyveTrKvi2kfSCaoRW8jsyveS
I2rHp7+kE2LhUUcG0XLqQRoR39MJFpExOzpazX7MOGwmnbg4V9hVgQ66tu3m
t3l8f3316Dz0+bQn7+uX0omcn2uyEtFN2uwGU39W3vfqv7AVD4x1xjJlEMIv
XtZeRT/hUbBKWZVBrP1xmHoJrfDx+BILawYRuF9k6zm0hn1OAQPtEGHFWPk+
UsWK33I9WwbR0KTw8exK+/YcF2vF41XfbumufF85EPDg0wuWDOKfhN/cyvWH
o/Wa9fD+BlteL3ujPZT+5W/B5/NeCjIPRA++SMtwx/b1fP2PY+X7zmG/7AIx
bH8E0xfule8/k5/uebID368hht9h5ftQV2clzvLpdKK0+eya/38/+nvJI30i
nRjvD+V6tvL+/71Z/PI5nZCe/moxjObY/qLmznA6cfAB/++Fle85ZV+Xwtt0
4uyy03fBle9Zk0pHDvWmE9M3dFV2oMv+3bdTe5ZO5NnOUYzQs3vpuxPa8HoV
KLi4Mp72ha7GdenEnobevlS0lfIjtoBH6YRCrYlxM/owp/h63oJ0IuTWaYnP
aFZ5rjKOjHTCWPTHDn6Mr2E9xwH3WxhffJyJWuhZtrLcvTfSiceUlP3n0Ats
60U9vNOJ1F+XFHPRCtmBxzld0olvHd7OfeiqxACTtRbpRK/H6U9cK/H/JXj/
Nf10wl1gqPgAWq57QNh0fzrh+TD38TV0nU7KfOr2dCJmF7HQuDKfuL2ntcXT
CWeDgzd+o6eq3oiZcKUTfw2Ujmji/JTo7YnoXkgjNoqcO34DrXZO/XjN5zTi
91fnuI6V7yf9KkPZ+tIIvX3nuPhw/n980KDb0ppGDId1Nluiuz/ezh1+kEZU
xNbdu4fO7jSt9UhH/7ajz6MH/13PtQ9JI855fBE5jOsPdcbdl+KZRrSdOJ2Z
hV4eVTCJMUsjHnVQjk6jTQbzT7VqpxE0L+FtR3B9c2yITLOWTyOEDDR33kWH
Xri414U/jbB9tc7pH7psTe5JxkIqMVd6ofkMrp+HZ39y1b1PJdze8am3PFrJ
b/4FMNFTCfWKkgEpXH/7+vieVZamEv5RY6lh6OxHWoK98akEV7PzxQl003df
/9M+qcTZK1Wup3B9l2OKljaySCXO5J683Lqy3m9dr1ymkUpclqzPUsT9YWLy
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
n67fS/DSZjzWafOjxQnxoLvaQgU9CXPhzKaTJupNrjf+DTlMwmbs/kYtvULz
J+D1iR5REibFdNugnOCL1E+cz5OwGwx3TZ8gzmwYaw9WJ2G6fe6v5BHH9D+j
ojEiYZdmqWQpifEzo3zz1iTs+rLO3ve5aH+f5e+Xf0LC5KGKJwHxQa9L1Ys+
JEwpytL9DlGPsuM1/YFwEsa4J/yYHGK7+vUdUiIJEyZrs9EhZnJ/4hOYRcKC
B1s1R3NQPNpMej5WjDhr7Es14nG3hJ2MWhJmWZKTH4lYkUrv+/tWEubhu95N
5E+KSFsfNe0iYRdXS88R+ZPcVCxlhh9JmCfNi00RxOK5eiGNZBLm2OS8j4mo
T/h4LSvgOwlT371yd4Wop9jl/bd+koQVPC3n+oY4RuTaE715EpblrnL4LVEv
UciZx2iJhM0pyzqUE/mPIzD15i8Jkz27ykn066ZpSexN3CBhw9/+sBL9uimO
y/Z83kL7m+JvTvTrbv7nOepKkYBhjTt7iH7dueanKP13J2DfRJP+PSLqQfK8
kdqkTMDGXINUiH7dud9D7L5QJWBlG79+EvmRU78f1Rzak4A95xslE/mTinzc
dB1oXOqJGT+RX1nz5Zv1EPp+sbVNM/H9kq2+fn20ffzcbCnRD1yd/tOV8+j3
837WrhK/3yxD+hiI9u/tr6xIf8QVd0LsFND+78+09YxBPHSkT8AIHR+b7evm
DCJf8o/42sgiCTvYq6FbSdSX1JCa754jYVMXXpx7R+RPCnPR8aHzx31M/gmR
fzo4vKA/MkrC4iPSdq0R5yM8YJgKnf/Sa3LDzMT1GvDLjOonYW8WTOjEEVvz
SlcEdJKwWgHzgGtE/UnbcI7JFhIWMeSnY4/Y8Zvq18IaNH+YN2xjiXqTjh+p
vhWRsKjW8c/1iDW/mGU7ZpIwmV7j4HHEVBOrnY4JJOzDxL1gRjS/BuXNvb6F
krD1CNrP54h8XSX+T0XeJGxvmsA9G8RDrpaDU44kbEs+5VIK4ho+hsTgOyRs
s++/e/2Ix3/WnYg3IGGGq0MfadD8Ny4ZSKJTI2F8N7l9lIj6rWahO1PyJEyw
JO/RU8RzdBPWYiIkrDeLN6cWsf5SxOzwIRJ2x4zh0Drig7PLSav7SNhI3Nz7
s+j+HAg4Ee6yHo8pOYs3eSAWyqbBLSbjsYMvz820E/VkV07E1Q7EYxdo7mgy
oPvfOGr9i1NLPCb0Y3VBD/G5wfya1MJ47H2xcHsmYullSS2JhHiMJUy45w+R
L3lerF7ENx5Tf8xBdxHFH3ryX6Yo23iMS5DahYT42JkXD8z047FIzk22BcTn
4jbmEpXisUy7hZGLKL7FuJfnK5yIx7jHOwdSET/VPf9WnTkes2t+sLSJuG+1
6+br9Tjs7NkcWUOiP3eccljuaBzGVHY2tQ4xa5SC8983cdiP/GHhwyj+nhtg
PVdcEIftNJ8b8EYcI/Fjoz8yDrsbtZg0hTi3O+qz2ZM4rLU+xIPIl7eoH140
MozDrr6PcGlA3KFx0a7lfBzGHPMoSBitD9aUq4+jjsZhRfdSikiIp6Tx4727
47CI07Y/aNF6U3M2Pt9pPBY7cFtK0B2xTULs8ZDXsRhDh4TjEmJWCYY2+uxY
bKw8rfMuWr8UA/dmr/vFYqaf8wR/IK7478a6tmUs1u5l62eC1r+jqZ4/D/4X
iwVQbP/AiXrMli3xanyx2KnsW5gRWj8D1jnkZndiMPnG0JghxIM3Lv5ZHYrB
Xvk+Gb2F1l/9I4Mr9rUx2Nvj/45MIGaSk3xgEBuDKdUuX7NB67fdD2//IrsY
TMjsxIMVon70dsEje7UYrKXJyNELrf81f7XMXgqg9X1N/jYD0gsUUT1eSjvR
mEmtgxTRj/tc3SXKa4PR2PTx5HERpC/Er+VzdZVEY2U/LzsAYore5vXKgGhM
inF78DrSJ7nfDg0wmkZjF3Rl2GYI/aJDPzwoG40V37vJ74P0zcHXSeoHGKKx
HC7yziGi/vZytG7tWBR25DJVTjViIWs/sQ/VUdjNOWE2XaSfpHf1HDAIicJW
2MIuLSNm8kqV1jKNwgKnrE/HIv3VvLDdVysVhW1UTf44jfTZckzJ0WjqKCzb
QvTyUDNRj1jK5NtgJJYVom3qQ9QTr+loJ+VFYlHPLIVOIP132cIp4rVbJEZh
cC/5I8GabNvm6pGY41fDGo82Yj6pqzlyI30ZIeh8EunLKYukqr+zEdjj4bIv
XxEP1V70nK2LwLY08f5ApE8tPK9MaAdGYFcH7S3lkX6147gvLKqH9GuXQvAC
Yv3dEqGuxyKwf3MUihlviXg7mfVkLBzbevjA04DQy4/BbcQ1HLPdErt4AOnp
vuu/+MWZw7H49pmQTsTWDxmE7uaGYTnvZbX9CP29X4Ql+HwYNiKbGaGE9PlB
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
          "]],
         FontFamily->
          "Arial"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {
       {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6], 
        StyleBox[PointBox[CompressedData["
1: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

          "]],
         FontFamily->"Arial"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    {RGBColor[1, 0, 0], RectangleBox[{-0.1, -0.26}, {-0.099, -0.265}]}, 
    {GrayLevel[0], 
     InsetBox["\<\"Erro m\[EAcute]dio (0.5cm)\"\>", {-0.07, -0.263}]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"X(m)\"", TraditionalForm], 
    FormBox["\"Y(m)\"", TraditionalForm]},
  AxesOrigin->{0, -0.4158074274199361},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",ExpressionUUID->"ebd29520-f1ad-\
4911-a735-a8c8126234ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Semiper\[IAcute]odos te\[OAcute]ricos e experimentais", "Section",
 CellChangeTimes->{{3.7014540685558558`*^9, 3.701454076321851*^9}, {
  3.7015287308382187`*^9, 
  3.701528732502515*^9}},ExpressionUUID->"770142eb-6f07-4813-bf5d-\
5c29205f9f46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"SemiperiodosExp", "[", "tomada", "]"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Semiper\[IAcute]odos experimentais\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"SemiperiodosTeo", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Semiper\[IAcute]odos te\[OAcute]ricos\>\"", "}"}]}], 
     ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "8"}], "}"}], ",", "All"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<N\[UAcute]mero da oscila\[CCedilla]\[ATilde]o\>\"", ",", " ", 
      "\"\<Semiper\[IAcute]odo (s)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7014529095041275`*^9, 3.7014530644231763`*^9}, {
   3.701453112064211*^9, 3.7014531133611646`*^9}, {3.701453170635914*^9, 
   3.7014531921427236`*^9}, {3.701453572636262*^9, 3.7014536085129914`*^9}, {
   3.701453656417773*^9, 3.7014537096258817`*^9}, {3.7014537746888833`*^9, 
   3.7014538118392076`*^9}, {3.7014539275967903`*^9, 
   3.7014539816557274`*^9}, {3.7014540321835184`*^9, 3.701454032449156*^9}, 
   3.701454268543462*^9, {3.7014543808319597`*^9, 3.701454412981326*^9}, {
   3.7014545398975058`*^9, 3.7014545413507023`*^9}, {3.7014549418137383`*^9, 
   3.7014549739137707`*^9}, {3.7014550149033394`*^9, 
   3.7014550557632446`*^9}, {3.7015322259728303`*^9, 
   3.7015322742019186`*^9}, {3.701933924184369*^9, 3.7019339540519643`*^9}, {
   3.702364573462228*^9, 3.7023646409407225`*^9}, {3.7023646920542545`*^9, 
   3.7023647188116074`*^9}, {3.70236479862323*^9, 3.702364823355023*^9}, {
   3.702365950905135*^9, 3.702365953905312*^9}, {3.7023661459465356`*^9, 
   3.702366184867195*^9}, {3.702366243810582*^9, 3.7023662542317896`*^9}, {
   3.702366290940806*^9, 3.7023663019101286`*^9}, {3.7023664062210445`*^9, 
   3.7023664182245827`*^9}},ExpressionUUID->"0ce2ad2b-5643-4f79-8bb0-\
eec0f418e298"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", 
          RGBColor[1, 0, 0]], 
         PointBox[{{1., 0.6462499999999949}, {2., 0.6045833000000016}, {3., 
          0.6420832999999959}, {4., 0.6170833000000044}, {5., 
          0.6504167000000081}, {6., 0.6170833999999985}, {7., 
          0.6420833000000101}}]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, \
{{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", 
          RGBColor[0, 0, 1]], 
         PointBox[{{1., 0.6522}, {2., 0.6638}, {3., 0.6520999999999999}, {4., 
          0.6637}, {5., 0.6521000000000003}, {6., 0.6636999999999995}, {7., 
          0.6520999999999999}, {8., 0.6637000000000004}, {9., 
          0.6520999999999999}, {10., 0.6637000000000004}, {11., 
          0.6520999999999999}}]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
    PlotRange -> {{0, 8}, All}, AxesLabel -> {
       FormBox[
       "\"N\[UAcute]mero da oscila\[CCedilla]\[ATilde]o\"", TraditionalForm], 
       FormBox["\"Semiper\[IAcute]odo (s)\"", TraditionalForm]}, ImageSize -> 
     Large, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.6022916300000014}, 
     PlotRange -> {{0., 7.}, {0.6045833000000016, 0.6504167000000081}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0., 0.6022916300000014}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 7.}, {0.6045833000000016, 0.6504167000000081}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Semiper\[IAcute]odos experimentais\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Semiper\[IAcute]odos te\[OAcute]ricos\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",ExpressionU\
UID->"03cb1bcf-a8c6-4254-bd44-6a2dc6f66907"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"SemiperiodosExp", "[", "tomada", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.702366317639762*^9, 
  3.702366325079421*^9}},ExpressionUUID->"263c4d80-a91d-4d5d-848c-\
5e052488e31d"],

Cell[BoxData["0.01598127696963695`"], "Output",ExpressionUUID->"23caf3ae-0298-437a-a275-bfcb96ea1a0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energias mec\[AHat]nicas te\[OAcute]rica e experimental", "Section",
 CellChangeTimes->{{3.701529620932514*^9, 3.7015296325162125`*^9}, {
  3.7020391585879574`*^9, 
  3.7020391657039676`*^9}},ExpressionUUID->"aa2383e8-15ad-4314-beb4-\
ef167dbb31a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "vxExp", ",", " ", "vyExp", ",", "vxTeo", ",", "vyTeo", ",", "yTeo", ",", 
     " ", "energiaExp", ",", " ", "energiaTeo", ",", " ", "energiaMedia", ",",
      "i"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vxExp", " ", "=", " ", 
     RowBox[{"DerivadaDiscreta", "[", 
      RowBox[{"Listar", "[", 
       RowBox[{"tomada", ",", "\"\<t\>\"", ",", "\"\<x\>\""}], "]"}], "]"}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"vyExp", " ", "=", " ", 
     RowBox[{"DerivadaDiscreta", "[", 
      RowBox[{"Listar", "[", 
       RowBox[{"tomada", ",", " ", "\"\<t\>\"", ",", " ", "\"\<y\>\""}], 
       "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"energiaExp", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Pegar", "[", 
                RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                "]"}], "*", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], ",", 
           "vxExp"}], "]"}], "+", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Pegar", "[", 
                RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                "]"}], "*", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], ",", 
           "vyExp"}], "]"}]}], ")"}]}], "+", 
      RowBox[{"Rest", "[", 
       RowBox[{"Most", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Pegar", "[", 
               RowBox[{"tomada", ",", "\"\<massa oscilante\>\""}], "]"}], "*",
               "g", "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
          RowBox[{"Listar", "[", 
           RowBox[{"tomada", ",", "\"\<t\>\"", ",", "\"\<y\>\""}], "]"}]}], 
         "]"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vxTeo", "=", 
     RowBox[{"DerivadaDiscreta", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"funcaoX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "8", ",", "0.001"}], "}"}]}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vyTeo", "=", 
     RowBox[{"DerivadaDiscreta", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"funcaoY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "8", ",", "0.001"}], "}"}]}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"yTeo", "=", 
     RowBox[{"Rest", "[", 
      RowBox[{"Most", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"funcaoY", "[", "t", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "8", ",", "0.001"}], "}"}]}], "]"}], 
       "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"energiaTeo", "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Pegar", "[", 
                RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                "]"}], "*", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], ",", 
           "vxTeo"}], "]"}], "+", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Pegar", "[", 
                RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                "]"}], "*", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], ",", 
           "vyTeo"}], "]"}]}], ")"}]}], "+", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"Pegar", "[", 
             RowBox[{"tomada", ",", "\"\<massa oscilante\>\""}], "]"}], "*", 
            "g", "*", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", "yTeo"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"energiaMedia", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", " ", 
      RowBox[{"i", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "energiaExp", "]"}]}], ",", 
      RowBox[{"i", "=", 
       RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"energiaMedia", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"energiaExp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
             RowBox[{"Take", "[", 
              RowBox[{"energiaExp", ",", "i"}], "]"}]}], "]"}]}], "}"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"energiaTeo", ",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<te\[OAcute]rico\>\"", "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"energiaExp", ",", " ", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<experimental\>\"", "}"}]}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<tempo(s)\>\"", ",", " ", "\"\<Energia mec\[AHat]nica (J)\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.70152964835775*^9, 3.7015298798697863`*^9}, {
   3.7015299283680544`*^9, 3.701529968698901*^9}, {3.701530019039053*^9, 
   3.7015300192952127`*^9}, {3.7015300504069233`*^9, 
   3.7015302166382856`*^9}, {3.7015302493690624`*^9, 3.701530346347682*^9}, {
   3.701530405619117*^9, 3.7015304303766017`*^9}, {3.701530511710349*^9, 
   3.7015305187092*^9}, 3.7015305513498096`*^9, {3.701530631429575*^9, 
   3.701530688032509*^9}, {3.7015308205490494`*^9, 3.7015308394278793`*^9}, {
   3.7015311841077547`*^9, 3.7015311879219027`*^9}, {3.7015312341689587`*^9, 
   3.7015313256932983`*^9}, {3.701531373932186*^9, 3.7015314661307344`*^9}, {
   3.7015315356411166`*^9, 3.701531598233013*^9}, {3.7015316493716507`*^9, 
   3.701531672772764*^9}, {3.7015320276259255`*^9, 3.7015321639935927`*^9}, {
   3.701619466539918*^9, 3.701619526339327*^9}, {3.7016195724961567`*^9, 
   3.701619578277709*^9}, {3.701702345144275*^9, 3.701702349441365*^9}, {
   3.701702455999297*^9, 3.701702460131816*^9}, {3.701702503972518*^9, 
   3.70170250827045*^9}, {3.7017025881317315`*^9, 3.701702683335721*^9}, {
   3.701933151036254*^9, 3.701933151598771*^9}, {3.701933518387384*^9, 
   3.701933521389386*^9}, {3.701933828887807*^9, 3.701933833167655*^9}, {
   3.702216594024032*^9, 3.702216615646101*^9}, {3.7022168048807397`*^9, 
   3.7022168565501556`*^9}, {3.7022173539041243`*^9, 
   3.7022173590292263`*^9}, {3.7022176551202383`*^9, 
   3.7022176665892277`*^9}, {3.7022190160964966`*^9, 3.702219017763488*^9}, {
   3.702222210162339*^9, 3.702222274279885*^9}, {3.70222235084318*^9, 
   3.702222355687165*^9}, {3.7022223879548173`*^9, 3.7022225891503396`*^9}, {
   3.702222850032998*^9, 3.7022228571427393`*^9}, {3.702223067230129*^9, 
   3.7022230947331862`*^9}, {3.702223243514995*^9, 3.7022233743813143`*^9}, {
   3.7022238654033623`*^9, 3.7022238695627184`*^9}, {3.7048141239496145`*^9, 
   3.7048141251684265`*^9}},ExpressionUUID->"fdadf6a9-278e-4dfd-8172-\
cb70adc2e96b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], FontFamily -> "Arial"], 
         LineBox[CompressedData["
1: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
f8q0vn3E6WmUqZ75hAZV68TxevcJEaPo9qi++QSf2vXjeP37BMdCuj9U73yC
1yy6v7QefkK/r+jxUP3zCdLFViKL033ZJ9zPoueD6qFPKHsHIlP74BPeBPQQ
meqjT+hW0DeO189PiBkxRGQ6vJ/Q4/fRcbyefkKFuZNFpvrpEwLr/RbH6+tn
vJm4SGSqpz4j0HdNHK+3n3GpLp1PVF99xvyX++N4/f0M93Z0PlK99Rmf/74W
x+vxZ5R9+lhkqr8+I2bixzhenz/DMSRJZKrHPuPs/sI4Xq8/o9sv9Pqi+uwz
+tbzi+f1+zNa62qKTPXaZwz8vVU8r+efEfZbT5GpfvuM97tHxvP6HoF81wyR
qZ6LwEvrynhe7yNw0LZbZKrvIuCodT6e1/8IjC7/VGSq9yJQX4qNZw8iMH+j
QWSq/yLQSUPrH/kQgQEVa4lM9WAE/hrSPoG9iEDnrKEiU30YAanVrAT2IwIV
Dv8pMtWLEViWeyqBPYlAm25PRKb6MQJfuiUmsC+RqP6oWGSqJyMR8KKywptI
ZM5vLzLVl5HIch+l8CcSjoaLRaZ6MxI7mu9TeBSJH523RKb6MxKmvVqFT5Eo
znSKTPVoJBY+q5nEXkXCo093kak+jUSVFlOS2K9ILE/fKDLVq5HosuZCEnsW
icaVI0Sm+vULlv/gSGLfvmCwR21RH1A9+wV7+vZJZu++oKtjpshU337Bso17
ktm/L5hb7YHIVO9+wbXLWcns4Rckfg4Q9QzVv18woBtEpvbkF5hbThOZ6uEv
kJbtTGEvv+DolfsiU7n4Ba2r5aSwn/LvO0JEvUb18hfMuNQzlT39gqUTFohM
9XMU/FJPpLKvUZgS8Flkqqej8MjgSmVvo5BxpqmoH6m+jsKPbuPT2N8oOO/s
Epnq7Si4tK/S2OMo/HfUITLV31HY7NUonX2Ogi5uhMhUj0fh/KRN6ex1FOqN
eSQylQtROHTYns5+R2GMtbmiXo9C0d3JGex5NP4K2auo36Mx0vd1Bnsejd+v
lijq+WhE/PNNJnsejRVpv2Wy5/LtRZ7OZM+jMe15UiZ7Hg3/+JAs9jwaq6sN
yGLPo9E0eV0Wex6NoHaPs9jzaPzX2ZnFnkfjp5/bZLPn0Zgwa042ex6NlbPp
/Rx5Ho36EdnZ7HkMegyun8Oex+D9rCk57HkMlunO5rDnMfCvlpvDnsfg/Iz6
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
iB1Htiv2mxbifH/aT02eFyK0TpRi/2khxvXJjmPPC4HpFsV+1EJs1ZdT7Ccv
RP8dTePZ80K47R8fz54X4p8xtF+UPC9E8NPHiv3nhdhYL0Wxf7UQXV6b49nz
QkQP90hgzwuhulAtgT0vRPs6fRPYc/n5frYugT0vxCPj4wT2vBDl+pG35LkO
/W4HJvLrXYelKQ0VvuvQ/1CHRH796xCZOVrhvQ6NJ+xI5PVAh3Prvyj81+H6
f8FJvD7oEFrYW2SqB3S47JqexOuFDkPLr1F8vkKH27n7k3j90OHkh8ciU72g
QyeHWrE/U4f64d+JTPWDDu1rbE3m9UW+/788E5nqCR2s+7MV+zl1cM3RiHqN
6gsdKtmqpvD6o8Nwez+Rqd7QYdCKXSm8Hukw1j9dZKo/dNiyr3Eqr086JI+Z
KDLVIzpkbVsvsliuftLhyrXjIlN9osPj909FFsvNrzq87+UUmeoVHS6N7yvq
X5of6rBgBX1+iOoX+fi2yBGZ5ok6LPxcU9TXVM/oEO7qKTL1I3X4kjpZZKpv
dPim7WaRqT+pg0eFd4rPL8nHI7q2eH9A/Uodnh9eIjLVPzrsuEefr6L+pQ6V
79H+SqqHdEi/XFe8/6D3P/L5s7mHyFQf6bB67VyR6f2QDuvH3BOZ6iUddEcr
ZfF6qkOXqNkiU/2kQ9Gm+1m8vuqQeMai2E+pw4Zn1bJ5vdVh7YyuIlN9pcPu
9fR5N1p/dYie81Kx/1KHXUNoPyWtxzoETlglMtVf8vn4JTyH12cdbDU9xftR
qsd0mN26eS6v1/L5/2yEyFSf6TCvye5cXr91aJ2UKzLVazp8/V/fPF7Pdai2
4pTIVL/psKgbvV+m9V2PsfavxPtpquf0+OXa8Hxe7/XolrpWZKrv9Bg483U+
r/96/OZZV7zfp3pPD13zdQXsgR6rJyWLTPWfHntGNCpkH/RYO2mSyFQP6vHy
/I5C9kKPjX1eikz1oR4/b/LXsR96BDyfJTLVi3ocWR6pY0/0+Lp/M9EvofpR
j7pNFurZFz0O3L0kMtWTenw3L1nP3ujx57ow0Y+h+lKP3afp87Xkjx7xT8JF
pnpTL/v6tZE90mPZxE0iU/2pR5OrnxT7JfVY/4OX6DdRParHmzYdTOyVHnlT
FolM9ake6jnhJvZLj19PNhf9LKpX9aj6aruZPdMjqDhLZKpf9RjRopmFfZOf
ryFTRKZ6Vo/3c6i/Rt7p0e52kshU3+rRu0lrK/unh/HgdpGp3tUj9Ea+lT3U
o0E8RD+Q6l89JlZbp/i8uB71ej0Xmeph+fi6edjZSz2+d/YVmepjPYYtOmxn
P/Xo9JdZZKqX9Qg+2buIPdXjyoe9IlP9rEflFSlF7Ksep7c2EP1Uqqfl52v4
bw72Vo++p+6KTPW1HltyKxazv3qooqcqPm+vh8fP94vZY/nvTygv+r1Uf+tx
ctdgJ/usx4uY3SJTPa7Hou/inOy1/Hq83UT0n6k+l5+Pz9SfJr/l47NULzLV
63rcLdvXxZ4bsAh7XOy5AYOufHax5wZsjSur4nmbAXe6dFdxP96AK9v3KvZP
GlDhvErN/XkDwhZPU/M8zoAREc/U3K834Jeb3hqezxlwfnYnDffvDUh4N1Vx
PQoD/lx8RMP9fAMCemdqeH5nwPtRLd24v2+A3W25G8/zDPjhwis37vcbMLdp
gDvP9wyYcneUyOS5AXGW4+487zPAYswUmTyXH39EsAfP/wyoHdpMZPLcgNaT
e3nwPNCA1Sfni0yeG7C35RMPng8a5POpsZjnkOcG1L970pPnhQYsHx0q5kXk
uQGhjo4ik+cG1MzSiEyeG/BXpqfI5LkBPTIviUyeG/Dt46Fleb5oQNnq34lM
nhvg5V+tLM8bDQgfvV1k8tyAS9uGl+P5owE/ShtEJs8N0DftUY7nkQbMNy0U
mTw3IPJtBy+eTxqwfuglkclzA7yPLvLieaUBKb9PF5k8l5//Az7ePL80YOmJ
WyKT5wa4Ui548zzTgDm+s0Umzw3wqBXtzfNNA6JGHRbzSfLcgDcfo8rzvNOA
8ZP+FJk8N6Bo7XnF/FM+PsunivkoeW7A4vw0H56HGtDi2VWRyXP58fy534fn
owa8VTcQ81ny3IANb95V4HmpATPTP4pMnhuQ88eeCjw/lf9+xWyRyXMD1n46
4MvzVCMOJESITJ4b0eLAn748XzWi8P5RkclzI+bUGODH81Yjqj5ZLzJ5bsT9
pYv8eP5qRO1/I0Qmz404Mczux/NYIyzmvor9lEZsSf29Is9njbCmPVXsrzSi
W21vf57XGvHku24ik+dGVLpz3J/nt0a47n0RmTw34tLOtgE8z5X/3tdzRSbP
jdg7/UgAz3eNeJ7wRrE/04iIWrYAnvca0WR0PbGfgTw3os6K7wN5/mtEr0kL
Ffs3jfjrxtFAngcbEbwhXLGf04g+ZUyBPB82orNfdbHfgjw34m1q1yCeF8vP
f/ZYkclzIx6n0/4N8lz+95WPikyeG2E2vwviebIR4YE+iv0jRkTntQ7m+bJ8
/74fo9hPYsTpzsOCed5sxNfB9UQmz+Xns+fTIJ4/G3G46UPFfhP5/nS/EMTz
aCP0VaeI3yfPjUjcSfshyXMjvB1msb+JPDdi/G8jq/C8Wr69cjeqr/+f5/Lf
G9CwOs+vjchoXyT2G5HnRkwzn/LlebYRhgf1xfpDnhuRnrTRxZ7L5081D+EZ
eW7EzrSXPjzvNmLYx7gm6//nuRH7m87rz/NvI6oEpY9Z/z/PjfCd/8tEnocb
4Wi9euD6/3luxNaeI7/m+bgRay7Sfj/y3AgPt3pifxJ5Lr8+rrQQmTw3ovrn
DiKT5yacnNxTZPLchH8/DhSZPDeh79QRldhzEwJ3jq/EnpvQPHxKJfbchI2F
v1Ziz03Q75pbiT034eb2RZXYcxMmjPu9EntuQpdFKyqx5yYcqLy6Entuwp5B
Z0PYcxMKvh6r2F9rwpxP4SHsuQnOB38p9tua0P7JqBD23ISW5Xso9t+acLX+
0BD23IS2tpWK/bgm7L54M4Q9N8En5LNif64JFfv/G8KemzAjv7Niv64JT/rf
DWbPTdj2oGswe27C/fKmIPbchKcz44LYcxOa/uUKYs9NMM4cLH6f+o0m9F75
KJg9N2H5JtqPTJ6bsP8l7Ucmz+XfT6Sfk+cmPDx4MZg9N+GX0GrB7LkJ7/9/
Pxh5bsL6592C2HMTVg9tEMSem2Aa3SuIPZfz6X1B7LkJH+PdgtlzE8IWjQ9m
z02YdndlMHtuwh/buwez5yZkaB4HsecmlA+vH8Sem2AJPRzInsvPh3fXQPbc
BK/7NQPZc/nx9+kQyJ6b8OPrtYHsuQnBI7IC2XMTLoe1D2LPTWh8rH8Qe25C
rY2eQey5CdX703438lw+3wZoA9hzEzru7xfAnptwvk+BP3tuwvCdr/zZcxMu
PE/0Z89N+HtwnQD23IQFX34PYM/NyK78PIA9N6O4RXgAe25G1rtFAey5GYaC
dH/23IzHbTr7s+dmVB9+uSJ7bsba1gMUn4cwo1fZ+hXZczM+D22j8NyMVqr5
Cs/NGDrgucJzMwYVaxSem5FUz6n4/IQZC4Ydrsiem+H7yUPxeQozZp8b68ee
m5GzOdyXPTfjVvhUX/bcjJ5zOvmy52a06NnHlz03o2ricl/23AzPc8982XMz
3rlZfNlzMzwKU33ZczMO7P3dlz03Y+mOpArsuXx84ttUYM/NuOA4pbjeohnL
d3X1Yc/NqLAuyIc9l3NBZR/23IzEtr192HMzzrdf48Oem7GyzWkf9tyM1Vs3
+rDnZoysV9WHPTcjefiy8uy5GR3/ifJmz82o1byXN3tuxnFtqhd7boZf/6te
7Ll8fCpe82LPzZi3P9qLPTdj8riy3uy5GQ8N1b3ZczOKNli92HMzJl5e48We
m2Eyppdjz80IzOms8NyMffWuKz4fZsaAk4PKsudmqFPp/Qx5bkZJRmhZ9lx+
fsa3VnyezIxzt0eUZc/N0LeYXJY9N6Nhh5Zl2XP59XL7bhn23IwVt6uXYc/N
UN1Y7smemzHliMWDPZfzzp0e7LkFuqwfPdhzC37rMdSDPbfg+d2fPdhzC/6O
WeHBnltwKpwyeW5B1Y09PNhzC9qWhLuz5xZc/qaVO3tuQe2f9rmx5xZEfAl0
Y88tiHx6TfH+3IKQucsU788tqNbzV8X7cwsafFmgYc/l2/Ncq2HPLVjffomG
PbegY/l2GvbcAlXAIzV7bsHwxEZq9tyCY332qNhzCw46QlTsuQV1x9x2cb/d
gtnXV7m43y7/+44zXNxvt2BS219FJs8t8POb7eJ+u/z4140RmTy34FNWsIv7
7RbM0xwW/Rfy3IKTq3xLuN9uwSzjStHPoXmiBeZfyyr2A1qw7NT5Yu63W9DY
NbeY++0W3Dg8spj77RaYtg9W7Be04G5sv2Lut8uP52Fzxf5BCyp/leHgfrsF
ey/OVOwntGBXZGYR99stQP54xeeRLWhytMDO/XYLfMrssXO/3YK1N8fYud9u
QUx6Jzv32y0Yv7C5nfvt8vlbs5ad++0WPLnttHG/3YLjpy/ZuN9uwZTITjbu
t1swbOo9K/fbLdh8DFbut8v3P+WThfvt8vP9eJmF++0WnG7W3cL9dgsWL6ll
4X67/Hws8rFwv92CfbusZu63W7Ab4Wbut8v3p9pyxfUiLfhK7W/mfrsF8/ft
NXG/3YqEbrVN3G+34lCve0but1uxP2u6kfvtVrgva2nkfrsVI7b4GLnfbsWG
FIOB++1WTDz0xcD9dit+v3dK8fl+K64kjFBcD9KKI98b9Nxvt2Lx9yv13G+3
YuDeQD33261ouuK6ot9uxahqUxX9dit6Dm2u4367FR1zy+i43y4/3iNZhdxv
t2J1jxeF3G+3YmPvXYXcb7fiQHqvQu63W7F2e2YB99utWNlgeQH3262oUaZy
AffbrVDFPs7nfrsVe68szud+uxUp/l3zud9uRZXyofncb5ePR39LHvfbrXDg
Yx73262I3E7XfyTPrRj0ZHAe99utmNLUnsv9disqzNmnuP6FFeXjO+Zyv92K
4UfycrjfbkXnPLp+I3luRUTJ7Bzut1vRvE2vHO63W2FuUjuH++1WjHzgyOZ+
uxWbb7zI5n67FXWXrMzmfrsVfas1zeZ+uxXrmkZlcb/ditc11mRxv92Ko4lt
s7jfbsX7uKJM7rdbYaz1IpP77VbM+PlgJvfbrfi1yvxMfn9uhd/qfpncb5fP
v+/DMrnfbsX5ddEZ3G+3Iu32nxncb5fzvk4Z3G+3orXalM79ditqPaLrMZLn
Vtw9Pz+d++1W2C90T+d+uxXaD5XTud9uxa3B5jTut1vx+O7bNO6329Bg8YE0
7rfb8O7x2DTut9vQYXeYyOS5Dc08I8X8ljy34dXh7SKT5zb06T9MZPLchlFT
a4pMntuw+wldf5E8t0H6743I5LkN5XBSZPLchkjdMpHJcxvOnR0oMnlug//K
UJHJcxu6RcYp5uc2rJ91WDE/t2Fp8iTF/NyG2PHNFPNzG47kuxTXQ7Rh2ne0
P5E8t6E47LLI5LkNh1I2i0ye2/C4ytQk9lx+/l53SmLPbeh+gfYnkufy/Tka
ncie23BiFO1PJM/l3982M5E9t6FzYedE9tyGKfUrJbLnNlQvpusjkuc2JPT9
mMCe2zCi1uUE9tyGWnf+Epn2C9nwqMY0xfW8bKh8FyLT/iEbfk3wT2DPbXA1
zIhnz20IWXpHsX9QPl8sO+LZcxv8ys6MZ89tCFo8IJ49t2Hkghbx7LkNzj2B
8ey5DZ55FsV+Qxt6bf4Sx57bsGDmVcX+Q/n+d/xLcX05G+4u/EWxH1H++417
x7HnNmw0NlDsT7Qh0NNbcT06G2Z3KIxlz22oUSkylj234c/Xd2LZcxtKOhyL
Zc9tiFuxLpY9t+H6619i2XMbJroPVOxvtOHbj61i2XMbGu0PU+x3tMG6X63Y
D2XDxfRsLXtuw48/fday53a8zLinZc/tMFc8o2XP7Xi4YKeWPbdjzaHlWvbc
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
xytXNTw/L8aRZJuG5+fFqJM72I3n58Wol3nVjefnTsR/5+7O83MnaqR2cuf5
uRPliqe78/zciRnt/nHn+bkTD98WuPP83IkK/p09eH7uhJfvFg+enzux990H
D56fO9FsJV1fkzx34k97D8X1N51I27TBk+fnTmT5f/Dk+bkTed7BZXh+7oSj
6UjF98s5MXv+wTI8P3disJRQhufnTsScql+W5+dOFHuuKMvzcydG/hFXlufn
TlyZ26gcz8/l52fj5HI8P3fisuavcjw/d+JF/M1yPD93wlbGUY7n507UuTDe
i+fnTgzp/cGL5+dOTF1Yz5vn505M7Dvcm+fnTvTbNM2b5+dOjP2w1Jvn504c
XX1d8f2ETgxsUrk8z8+dcLuxoTzPz51o7JVQnufnTqSu8lLMz53IOBCimJ87
Uair7cPzcycS1w/14fm5Ewl3Lvjw/NyJMXcrVOD5uRNh9UZW4Pm5E57b11bg
+bkT7S7vr8DzcydC2l2owPNz+fEUx1Xg+bkTP3nU9+X5uROzGs3z5fm5E0ke
NxT74ZzQV6b9DOS5E4YHKj+enztxMLuqH8/PnUie1duP5+dOTN+4wo/n5/Lz
ue6WH8/PnfgmI8+P5+dOaOtVqcjzcydiB/esyPNz+XwumlWR5+dO/L6A9oOQ
505Y3r+ryPNz+fxZTPtHyHMnVsd+5c/z8xJ8WD/cn+fnJZg47w9/np+XYP7I
a/48Py/BrptJ/jw/L8G2euUCeH5egjIDWgTw/Fz+99N+DOD5eQl8qmwN4Pl5
Caze/wXw/LwEqc7oAJ6fl+D16KIAnp+X4Pc+dQJ5fl6C/AUDAnl+XoLm/nMC
eX5egsc9twby/LwEs3f8G8jz8xIM7fcikOfnJajQODWQ5+cl+MarTBDPz0tQ
r6hpEM/PS+Dq0juI5+clyM0aJDJ5XoLPrSaKTJ6XYFPcFsX30ZZgwgfaz0We
l2DS1hTFfrgSdPukU+yHK8HAJI3YD0ael+DX6rUU++FKcGVhH8V+uBJcWzJT
ZPK8BNizV2TyXH4+Wr8QmTwvwb4GBYr9cCXY8Ukj9suR5yVwf+YhMnlegvYv
6OfkeQnuvvQVmTwvQa2W7UUmz0tQ/N0ikclz+fg56Pqf5HkJ1reLFpk8L8GQ
a8ki0+d95dt790Fk8rwE5U5fFJk8L8HR6ttEJs9L8M6wWWTyvAQDMujfk+cl
2HM2XWTyvATjLMFi/yV5Lp8Ph1tWYs9L8NeCVpXYc/l4DqpciT0vQf8SQwh7
XoLwvu9D2HP5eC14GcKel2D77bQQ9rwE6VMqKq73V4I3u9pUYs9LcK56X8X1
/0oQWNK9EnteguOdGyiuB1gC7wBnCHvuQrULX0LYcxdGJ7wOYc9dmL46IYQ9
d+GPxqpK7LkL4z2qKK4f6MLHaXQ9VvLchbUNQxTXE3Sh+VJjCHvuQvdyT0PY
cxe+0e4LYc9dmHtsfQh77sLdBztC2HMX7FfOKq4/6ELq+Tsh7Ll8eyvvKK5H
6MKLJydC2HP5779fqrg+oQv37vYOYc9dGDmsiuJ6hS7cdNL5Tp678OOosorr
F7qwqXpgCHvuwqqcUMX1DF2o2ckvhD13IWWDMZg9d+FLvefB7LkLSwZvDWbP
XZhQY1wwe+7CL0O7Ka5/6MK+cR2D2XMXdCc6Kq6HKD9f39L1f8lz+fbb1VXs
b5efrxS1Yn+7CzNmfghiz12Y1HRvEHvuQsLgyYrrJ7rwoKSrYn+7C6+2tFTs
b3eh+pAGiv3tLkxODVFcX9GFW+riQPbcBa+DnwLZcxfcn/wdyJ670PDkxED2
3IWMOU0D2XP5fNlQJpA9d6HFgvwA9lz+e/e/BLDnLlxfeyeAPXehXqs9Aey5
C4vGTAlgz124/7x5AHvuwq9j6PqK5LkLe/zv+7Pn8utt+TZ/9tyFozdn+LPn
Lsw+/50/e+7CAf96/uy5C8fj7ArPXcj95rnCcxcuL/+zInuukp52G1iRX+8q
6VmlkIrsu0oyxqb58etfJd2cfdOPvVdJ+37e6MfrgUo6nz/Sj/1XSe0X1/fj
9UElfXerUNRHVA+opJ7rrvnyeqGSrLYFIlN9oJL21+7oy+uHSura00NkqhdU
UugU+jwPrScqyeP1bpGpflBJET5jK/D6opKm+NcRmeoJlbQtN8uH1xuVVDbl
X5GpvlBJz+fM9OH1R769uq1EpnpDJR1/YCnP65FKGnn9hshUf6ik14HzyvP6
pJKavW8pMtUjKmlpRZM3r1cq6SpuiEz1iUrytdL3gdP6pZJ2+3VSXA9fJbkv
UHnzeiY/v+fviXqf6heV9CmZrr9P65tK2p7fUGSqZ1RSk4IkxfUZVVJ16aDI
VN/I58Oy0eV4/VNJCzfUEJnqHfn21qcr3t+opH7hJ0Wm+kcl/Rg5VvF+RyWd
eucjMtVDKmnZwNtleL1USc5F00Sm+kglTb1eswyvn/LzfzdJvF+jekklLT52
wpPXU5WUHf2LyFQ/yce3Nn3+j9ZXlbSma6Li84IqKeT4Wg9eb1VShd8biUzX
A1BJjkeR7rz+ys/nsw0iU72lkqb37uXO67FKGr22gsh0vQCVdKvdFzden+Xz
+wp9nzjVY/Lz3bWb4vu8VVLM0zTxfps+f6iSNhWs0vD6rZLC+zUQmeo1+fVX
FKPm9VwlJZ/YKzJ9nkElVTszTs3ru0ryDP5KZKrnVFJ8apaK13v5/BmwQ/H9
3Cqp76smKl7/VdKH/s9d3L+RH+/Hn13cr1VJ+R6VRKb9kyppy8KoEu7fyn//
yNES7u+opMf66SXcz1VJSR0biUz7MeTjpfmk+L5tlTRpws9O7v+opJbjHMXc
71VJHwP3i0z7NVSS7mzvYu7/qiTNAi9Ff0glzfONcnA/WD5fJ/8jMs1/5Nf/
yAkO7g+rpG/LeCquByk//332FHG/WH48afWLuJ+kkqbFPFV8nlp+/R6bq9jP
Ka9//b5VfL5aPt93eyr2d6qkgWW/2Li/LP9+1A4b959UUmpZ6veRZ/L6+O0T
K/ejVJJqxyAr95/lx/M+38L9KZWUtZ0+f07eqSTvXRMt3K9SSa2etrZwf1pe
X3+i7/emelc+Hr2emblfLZ/f5yaJTPWvSnobrTNx/1olHay2TGSqh2VfToSZ
uJ8tr0dVw0W/lupjlRSYSN93RH7K9y9smshUL8vrjbWjkfvd8vrbpFj0i6l+
VknX1uw3cP9bPj6RdRXf362STnxzVc/9cJXUvcwgkam+Vkmt4z0U37etkvZe
/CD631Rvq6SZbmcU/XKVlBiyXGSqv1XSzxkdFf1zlTTOLU7026kel9f7Mz8X
cj9dzsMtop9P9blKivxpt+J6jyqpc6v+IlO9rpIKB1Up4H67Wrp+0yrmB+S5
WvIxv8/n/rtamnniL8X1J9SSNJqu70ieqyX/JXfE/II8V0sx2+j6FuS5Wqp/
v1DMR8hztWT1OpfL/Xq1dOfkUpHJc7V0NXRULvfv1dKhpa1FJs/V0uKJlhzu
56ulCyt3i0yeq6U5NerlcH9fLZXZf1vMh8hztTT25Phs7verpaW5NUQmz9XS
+jZ0vRHyXC11f0T7K8lztdRx5LUsngeopa3x80Umz9VSh7ahWTwfUEvnx/4r
5mPkufx4GnfP5HmBWqoerhPzN/JcLbnNupbB8wO1dO+vzSKT52qpoP7sDJ4n
qKVs9SCRyXO1tGZnUAbPF+Tbr3NHMU9US6sd36fzvEEt9amnV1yfUS15VziW
xvMH+XwYPU1k8lwt1enUM43nEWrpn3PK7xdUS39f8E3j+YRa2v/oi5iXkudq
qeqmFak8r1BL7r2rKa7/qJYWfXmsuD6PfH6dWSQyea6WGn/uobhej1o62Je+
f5o8V0sf21dUfJ+1Wvq1u0nMk8lztdROui8yea6WyobNUHz/tFr670hFxfdB
qqU/et0T823yXC1pFi9WfF+0Wmpzvq/I5LlaqnijucjkuVrK8qsqMnmulo62
0YhMnquluevei/k8ea6WhqvXiEyeq6UbL5uJTJ6rpUkZKYr9jvLxv31SZPJc
Lb1qtExk8lwttTRNFpk8V0v55iGK/ZDy7e/uIDJ5rpZaPPMRmTyXX4+raD8E
ea6WNlReqthfoZZqVP42nj1XS48j1PHsuXz7RxLi2HO1NKjFa8X3I6ul77Lu
KK7XpZbedDoZx57L55N1ieL7hNXS936d4thztYRDdP0x8lwthQyj6yGS5/L6
NnBrLHsuvz6Hzo5lz9WSb4vxsey5WvLzGxrLnqslr8LOsey5WjK/qhLLnqul
fdMytey5WjpS9YKWPVdLRT8uUVw/UC01Sx2iZc/V0s2E9lr2XD6/pjRRXG9O
fv2/rqW43qBaSnJW1LLnaskywKDYDyavjwnPYthz+Xin7VbsD1NLYXdoPxd5
rpb+fNhfsV9MLUVcov125Llamuhoqtg/ppaOV64Xw57L63u5Sor9ZGpJ61cS
zZ6rpVvdtdHsuVoK9rgezZ6rpdDsndHsuVpydPw9mj1XS1NG/RrNnqulEaqf
otlztVTl4o/R7Ll8fKoPjWbP5b8/p3M0e66W3x/Ui2bP1VLeL97R7LlaKjfX
FMWeq6UP3mlR7LlaOvu1Noo9V0vhXpFR7Llaymz3MYo9V0trZ7yOYs/VUr/c
e1HsuVp6f+R8FHuuln469ncUe66W6u3aGsWeq6VrS9ZFsedqaXrFVVHsuUba
U3d5FHuukXSWpVHsuUYynFoUxZ5rJPPBuVHsuZw9fotizzXSN5gWxZ5rpNiY
n6LYc40UGTkpij3XSJ2SJ0ax5xrp9B7K5LlGWvWIMnmukS5tot8nzzXS/oF0
++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
Cd+dquIgf9uEiNnbjDHnOXsfu887yO82wZMRbow5zxlPgr53kv9twouTq40x
57kJvd9tdZIfbsKWemnGmPPchCIVu7vIH2f/f9Z0qV8em49NDrjILzeh6Bqv
4ddynpvQZ3s3N/nnZnzVdr6b/HMzlva47Sb/3Iz0Tl4P+edmrOkLD/nnZpxd
MM5D/rkZcyaf8JB/bsamWY885J+b8aXiNQ/552acepXmIf+c/f7IgV7yz81o
comPOc/NmPHJ4SX/3IwW9bpI/rkZwUH+PvLPzVCml/KRf24GAl5K/rkZT2Z1
8JF/bka5unkV8s/NuLqttUL+uRm1Q39WyD83wzZsn0L+Oft53HmF/HMzCg5r
o5B/bsbgxTk+8s/N+C15uUL+uRmXHNVV8s/Z//fNVcg/N6PD6JE+8s/NKLb3
o4/8czPmh4yW+lWacXRsW6lelhnbxsb7yD83o1Fquo/8czPCY3dI/S3NOLOz
i9Sv3Azf5kkq+edm7NhXUSX/3IyOzXk9Ts5zM+aWrSLVzzQj/lVenfxzMxY7
eT90znMzBv7VUyP/3Izvxkdo5J+bsWAiz5/kPDdjijZSqrdpRqsGb/3JPzcj
44cSAeSfm5E4poqUj2jGvZO8HiXnuRkDan2Q8hPNyDPicQD55+x+53cNJP/c
jL92npDymdh8qjTIGHOem2EpfkfKb2Lvu2a1IPLPzRh98b6U78Tm/+EQKb/R
jNbVvwki/5zd78REKd/RjBKtFkj5UGbc7jUikPxzM7a8OyjlR5nR/sbvUj6k
Gf3ejZbypcy463c1kPxzNn+LPJXyp8zI6bFbypc0Y/upJCmfyoygtHSpnqAZ
aqMTUv1QM2KXZRljznO2X8zi98d5zn7/xnvj55znZiz6oZjxc85zM6JKNJXy
Lc0oNIznr3Gem9E9nOdfcp6bMXTZaGPMeW7GzIwxUj6mGZsb8PxMznO2fkrx
epCc52ZcvzbRGHOemzH9+QQpX9OMIh9mSfVKzUiqODeIeG5G6phfg4jnZlR4
NU3K5zTjZVPeL57znK233mOl/E42v8oNM8ac52ZcvjFIyvc0Q7vbJ4h4zubT
9S5S/qcZS661CSKem/HwfCMpH9SMmOiaxpjz3IyiW8pK+aFs/79UKIh4bsbs
B2oQ8Zytd6cpiHjO9qvstEDiOdtPgmMCieeMHwUeBxLP2fxrzOtZcp6z/an8
X4HEczNeRfP8Xc5z9vwGLgwknrP9fcX4QOK5Ge4nvF4t57kZ/bs1CySeM96d
qRJIPDfDfw6vf8l5bkapbeZA4rkZe58nBhDPzcjM4PmCnOdm5J9zNoB4bsbX
A7cHEM/Z/ho1M4B4bsas7QMDiOdmvDnSKoB4bsaY1+UDiOdm/Pe1J4B4bobD
+8afeG7Gz0ce+BPPLQgLPeJPPLfgXY9l/sRzCzpU+cmfeG5Bk6Et/InnFgTf
KOlPPLeg4X9+/sRzC+7/ECLVj7Sg5dMTOvHcggOfVuvEcwvmm4ZL+fIWuBMa
6sRzC5x6kJQ/b0GDNuka8dyCH/+6K/VvtuCXu9s14rkFY5uM1YjnFjyz8fxC
znMLztwtJvV7tqCVf6ZUn5Ld7z+3VeK5Bf5Dt0j1Ki3wPRupEs8tmNr7O6l+
JXveG3SVeG7B3blxEs8tmFH5qEI8t2Bx0AyJ5xbUr9xKIZ5b8P2yQIV4bsGe
s5zXnOcWLLp7zEc8t+B20ykSzy2Iq15X4rkFL3rk8RHPLWhd5KGXeG5BfOou
L/Hcgozev3iJ5xZU61HBSzy3oOCVZA/x3ILYDqc9xHMLvjq1xEM8tyCxV08P
8Zw97wr8+zGc5xYU/zvBTTy3wGH6y008t2DT0rFu4rkF0wLruonnFkzOb3IT
zy34Q7nrIp5bkLZplYt4bkHud+1dxHMLix+8LuK5Bc9X3ZG+b/S/+cH7SXOe
W1BpVX0n8dyC6Mm5DuK5BVV/vuEgnrP5UWi5g3huwa3UFg7iuQVBMz7YiecW
9P57p514bsG/y3sZY/59Bgs+Fy1lJ55bMOfgR6l+vwUfJ122Ec8taPR4jI14
bkH62wI24rkFdTvftRLPLeg1fYnUX9oCV0QXK/GcrX9HMSvx3IIvj8ItxHP2
Pm/wfETOcwu+TuH9DzjPLWjh/8JMPLfgRvA+M/HcgmWHxpqJ5xYsTeD1JznP
2frdEW0inrP7v837OXCes/3ol+Im4rkFA5uH5CWeWzDyv+15iecWxMz4JS/x
3IKt2by+JOe5BVqzt37EcwtGJayU4nP2POpW8SOeW7DuTXQe4rkFC8fsyEM8
t2D2tzye5jy3YPmgelJ8bkHb4plfSG+3oEDAli+kt7P3kVPnC+ntFozbHZdL
ersFJ4ttzaX43IJXWwflkt5uwX9TquSS3s7eX493n0lvZ/Mjastn0tvZ9djq
fya9na2/tbGfSG9n91dw3SfS2y2wD+4m9Tux4MqcYp9Ib7dgcwteX5LznPGh
zvoc0tstiLxTO4f0dgu6N4rIJr3dgs6Vl2aT3m7BowO8fwvnOePVADWb9HYL
Mu8+/0h6uwVZV5d/JL2dXU/h6lJ/agua5TzPIr2d7Z/fzckivd2C/Ol1s0hv
Z+u/eB6pnzW7vsI3M0lvZ/O9xZxM0tvZ+0qrkEl6uwUXhj/OIL2d7U+J0zJI
b7ci95/KGaS3W/FjmXcfSG+34nLdvz+Q3m7FgPmTPpDebsV1a5kPpLdb8VeT
R+9Jb7ci86sp70lvt6JltXLvSW+3YtjCJKmepBUd+h9KJ73dit5rR0v1Ja04
eLSU9P12K6pEPpbqTbK/7zr9Hent7P+dKC/Vn7SibMfENNLbrfhh6IE00tut
iP6K69Gc51Y4GpZLI73diq49w1NJb7fiSsqCVNLbrSgXUTOV9HYrAtenSv2i
rFiUfFTS260IKzFR0tutGLeqpqS3W1HI8yaF9HZ2P4c2p5DeboWrfJsU0tut
6BRvSiG93Qq/91ffkN5uReUfF70hvd2K0fnbviG93Yr3SbY3pLdbsXPL2WTS
2624e3d4MuntVqQOLp5Mejt7/yvjpP7WVsw7v+816e1WLP5n5GvS2614OanC
a9LbrThnS3hFersVZ/03vyK93YoWezu+Ir3dCucG7RXp7VZsWfw8ifR2K9qZ
tieR3m7F36/6J5HebsW3Swonkd5uRUip4ETS261otHR1Iunt7P/5OiSS3s6e
f72gRNLb2XyIi3pJejv7+yZ7X5LebkXVf4a+JL3diqHdeX85znMrQkvFGn4b
57kVXyXvTCC93YqAmKEJpLez9fC0SgLp7VZ0rv/Z8Ps4z63Y3PvqC9Lb2fxo
Plfqr2dFm0+NX5DebsWSlVap354Vg57fiye93Yp9gzfGk95uxZ39g+NJb7ei
frvK8aS3W/HkY0Yc6e1WPKp7No70drbf1P41jvR2Kwo2aBFHersV4xcExJHe
bkVcV96/kPPcip++OSH1r7ZizkteT5Lz3IpLF3j+JOe5FSfK+GJJb7eizsJQ
qd81u//5+2NIb7eiYv2pMaS3WzGiYdsY0tut+O1GQak/thW//5Nk+NWc51Zc
WHfKGHOeW/Gi4rxo0tutmPRjl2jS263w3eV+Oee5FVG1c6NIb7eiyB+PjDHn
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
mw/pRT8Qz+2YN2PIB+I5+/1/d38gnttRrEnKB+K5HRW/aZZBPLdj9OYtGcRz
dr/74zKI53as+qVwJvHcjh59emUSz9l82bc1k3jO9u9lUdL3z+0IHlY2i3hu
x6GyPJ+R89yOofNuZxHP7VhSK1nqT2THvgbmj8RzO4p0bP2ReM7my6rrH4nn
7P7fVsomntvxsmGDbOK5HX3+LJxNPLejeekO2cRzth9tSs0mntuROn+1pLcz
Xo05Lunt7Hnlmy3p7XaMzbMth3jO9v/4up+I5+x+72d8Ip7bUXZhGak/uR2n
6rz+RDxnvCj65hPx3I5a6+Z8Jp7b4brXKZd4zvh3cW8u8ZzNt82jpH7mbP8a
3SeXeM7me5cYqb+5HUqVE1+I53aMf1IyD/nn/5uveh7yz9l+O473M+c8d+Dq
++F5yD93YGLFon7knzvQsdgWP/LPHdi+bpcf+ecOjM+zw4/8cwcKXEr1I//c
gZp5F+cl/9yBu0cz85J/7sCbzo/zkn/uwJQP4/OSf+7AfR/vj8Z57kDLq7y/
Oee5A4mvCprJP3eg0Eh/qZ+bA3nX835snOcONPgQn4f8cwdmRgT5kX/uQMCh
slK/NwfqlUwzk3/ugHLutR/55w7MsCd/IZ47ENezr4n8cwcOLyuSl/xzB85/
XcSP/HMHfjPNMJN/7kB0zjapX5wD+WvsyUv+OXt+AWct5J+zcVNer4Tz3IFr
ee+YyT9n19N4sVT/kt3/9rVW8s8dWP7gmlQP04EbW3KlejIO/JFvrJP8cwda
Of91kn/uQK8OVhf55w7UmVbRRf65A8/mzXCRf87eX81bLvLPHXg1+o2L/HN2
vdHl3eSfO/B0z0w3+ecOaKMPSP65A90GhUv+uQNTAyt6yD934OCQwR7yzx1o
cZL79ZznDozp/tRD/rkD/zTP7yX/3IGHD+t6yT93oKE+0Uv+uQPVW12T+l06
UKXMay/55w781DfIR/65A03NA33knzuw5Z91PvLP2fq5dtpH/rkDc9rz/EnO
cwdSztdRyD93oEmJbgr55w6k7VymkH/ugD6W9yPnPGfrNzJDIf/cgTPvv1bJ
P3cg8O0AY8x57sDA2FUq+ecO/Os+rJJ/7kDhNa9V8s8dOBb/jZF/wnnO5v/1
Whr55+zvN/fXyD93IKjPTo38c3a/pW4YY15v0IHmIz06+ecOnNzRVyf/3IHJ
c1fo5J87cLr/aZ38cwfW7OL1JjnPHTjxX7xO/rkDvx/L0Mk/d8DsZ/Yn/9yB
5F28HiXnuQNvn0/zJ//cgQ5ViwaQf87mZ+TfAeSfs/V2OTqA/HP2vGdE+pN/
7sCEdN7flvPcgexS0Qr55w64QoKk+qYOJNh8PvLPHZj1IMH4e85zBzplJhda
KHjO1ueDdjUXCp6z+TnX3+jHzXnuwA/FG05fKHjO7qfI/MkLBc8dON6y2C8L
Bc/Z/pwzdNhCwXMHygyzt10oeO7AolrbjH7enOdsv3h4qORCwXO2njb3lfLh
HOjjWCLlw7H7X3ZAyodzoHvyGSkfju0Pc85I+XAOHG18RsqHc2DJqrtSPpwD
7qnpUj6cA12X5JPqM7LrK1vBGHOeOxC/rLxUr9GB1OAixpjznK2fQzz/kvPc
gcrVKhpjznMHGrm+N8ac54xvh3j+Iuc5W9/FhhtjznM2/873N8ac5w4szc/z
GTnP2frI3zWIeO7AANeQIOI5u76Lk4KI50783Gy2VA/SiUGbZwYRz53Qxk2U
6kM6UboozxflPHci4LtJUr1IJ9Ldi4OI504sWrVRqh/pRMl5W4OI505U7c3r
OXKeO5HRieeDcp47ETmA3z/nuRPHXg0NIp47sXg7zzflPHfibdz8IOI5+3+z
lgQRz524u3JGEPHciaUH+0v1KJ1oksrzPznPnfhSrLJUn9KJy79VDyKeO/HV
6sZSvUonTrp5/UjOcyc2TK4n1a9kv3/pa6l/uxP9K2UEEs+dUL9/Hkg8dyKt
Mp+fnOdOXLrLx5znTnw/n+dPc56z673D+6tznjtxYMmOQOK5E01rTQ8knjtx
Z0H3QOK5E6/38H7snOdO2OfVCCSeO7FxSulA4rkTv7oCA4nnTuSGfpTq4zox
aeOzAOK5E+F5jkn1cp04OnhtAPHciT5dZkr1c53YnTYygHjuRB50k+rpOnGx
Z60A4rkTtkM+qb6uE8HRsf7EcyfOrTvrTzxnz+NXXk+S85x93rcL/YnnToyc
MdqfeO7Eg1od/YnnTjRMKONPPHfinw8fdeI5mw+Hr+vEcydanV6nE8+dWLF8
jE48d+JU68468dyJaW1q6sRzJxot1nXiuROPkl9qxHMn9jY9qRHPnSjf5leN
eM6ut0cbjXjuxJ6UIhrx3AnPb9kSz52Y/+KxxHMnlnTdL/HciX2dJks8d2Jy
lSYq8dyJkIpulXjuxIleTxXiuROxVf9QiOdOtDw9TiGeOxHzQzOFeO7E9DEB
CvHcCf1VtI94zvaTR/uMMa8vzH6+kn8fhPPciVv3q/mI507Erfss1Rd3Ylj0
TS/x3IneJ1ZJ9cbZ+2rN649znrP9qXNRqf64E1USEjzEcycqjDngIZ47UeP+
KA/x3ImyDXm9Sc5z9vyuZbqJ50608z/rJp478a0+zU08d2JKnwZu4jn7+wp+
buK5E8XaXnMRz50ILLrARTx3Iqgu71fOec72Qw8/n3OeO/F+3hUn8Zztn7Wn
O4nnTpQLqeMknjvx+FW2g3juxMAH/PtenOdO3L82w0E8d2LoX/UdxHO2f93I
sBPPnah8/YDUb9yJXmX7Sd9Xc+IbV37p+2pOTBj33EY8Z58/dYONeO5Ejwa8
3j/nuRPmyCAb8dyJJ9XuWYnnTuQbOc1KPGfrL6KslXjuRGNrtIV4zvi5d5OF
eO7E5yvdLcRz9v/+KGghnrP3/ybETDx34s+7S83Ecyfqtq1pJp47UaRXjNSf
ga1HB/9+Iue5C8PiW0j9Glzo5bObiOcuzGx+Jy/x3IW2GQvyEs9duLewdl7i
uQvfDI+W4nMX6j+Z50c8d2Fk58p+xHMXVg1LyEM8d0GftysP8dyFBHVIHuK5
C2N/+zYP8dyFf249+0J6uwsdTFO/kN7uQtzAgl9Ib3fB5L2WS3q7C8OnTcgl
vd2FCquq5pLe7sK7nRmfSW93wb7i1GfS21140XboZ4rPXbi10vmZ9HYX1FL7
PpHe7kKsq80n0ttdaPQxJ4f0dhdqDfk7h/R2F5K2TMshvd2F/240yCG93YWu
Bd9lk97uwoGBa7JJb3ehz8Py2aS3uzC37v2PpLe78Ou1qR9Jb3dh21Zef5Lz
3IULJXl/cM5z9nw9/2SR3u7C3fyTskhvd2HfN/mzSG934Q//45mkt7uwoUR7
qZ+NC469nzJIb3dh3W+nM0hvd+HJP9MzSG93ISqlSQbp7S7MQK70/XMXzh3a
KX3/nL0fvd4H0ttduNgs5D3p7S6EDZnznvR2F1Jq1n9PersLybVM70lvd+G7
B/+mk97ugl+Nhemkt7vwemrFdNLbXWj63+13pLe7oK0Y/I70dhdunPG9I73d
hcfht9JIb3chvfSKNNLbXVi77cc00ttd+DIrXxrp7S60ms71b85zF/rf7ZVK
ersLLr+Pkt7uwvuo3yW93YWvArpLersLH3oVe0t6uwvdT6SmkN7uwv0DJ1NI
b3chbdGAFNLbXah8JfcN6e0uZOZseEN6O1tfDxq+Ib2dzZ8SHw1/gvPchRbD
ryaT3s72iyu/JZPe7oJvaN9k0ttdCA31N8ac5y4sqX5K6vfFnncwr2fBec6e
3+3Pr0hvZ/df/PQr0tvZ/Gk88xXp7S6Mymr/ivR2tn5fFHpFersLj8JDk0hv
d6FOoYVSP28X+k2qkkR6uwvVT8ZK/b3ZflthayLp7Wx9fu4n9ft2YXSB8omk
t7PnuS7jJentLnyqdPol6e0uHOv1i9QP3IUqRUq9JL3dhS1pMQmkt7vw59Lt
CaS3s/ddpl8C6e0uNFn2bQLp7S409L16QXq7C0NiD7wgvZ3tR78Pe0F6+//W
S7kXpLez/WZcSjzp7S6UXHgknvR2Fw4vHx1PersL1Y5VlerJsP29UFYc6e3s
53POx5He7sKOBTzfkvOcrc+JjeNIb3fht+vcn+U8Z/Nh2sNY0ttdyNtzXSzp
7S5UPdQzlvR2FyY2Lx5LejubX4uSpX6IjF/ayRjS2xkfUqZL/RHZ/MzTPIb0
dhd2DVekfolsv/0m1PC7Oc/Z8128S/LP2fNv+ovkn7thq1dP8s/dUGZYJf/c
jYr9eT4l57kb7Wb8bow5z93o+Zr35+Y8d6PE1w2MMee5G1fGO40x57kblZ7y
/AHOczeqrz9kjDnP3Xg6a5Yx5jx3o+q9DsaY89yNxjeLG2POc3a9ZbIiiOdu
VG5+N4J47sb+zbyfJ+e5G9/3Gx9BPHej01+tIojnbpSZUCSCeO6Gd82HcOK5
G8FFbocTz90oV3xbOPGcXc+FieHEczd+b9opnHjuxowhFcKJ5+x5bTeHE8/d
6Fo8PIx47sap9L/DiOduhFfeGEY8d2Pxm4lhxHM3FvzYSeoP60aNgZXDiOdu
HBigSP1i3ZgflRpKPHfjy+JHocRzNzqXPxZKPGfzYcyaUOK5G0s28HwhznM3
TsztFko8d2PQuTqhxHM3LPH5Q4nnbox7kCP1l3bD2jQmhHjuRp4S/0r9pt1o
MfZkCPHcjVUNNkv14dx4tnS6VB/OjdB8/aX6cOx9VW0j1Ydzo3/1ulJ9ODeC
3GWl+nBudPsQKNWHc6NUzy9SPpwb524nSvlwbhTP90zKh3NjQ8ubUj6cGwcT
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
/dW8yLRkS/3VvJi9tIGN/HMvOr2abSP/3IsLHW7ayD/3Ysp/Tjv5517EjGpr
J//ci5FXVtjJP/fiXsIjO/nnbD2F6g7yz724s6mTVE+Gvd/ea6V6Ml7sqf5U
qifjRe3KgU7yz73Y0aqzk/xzLyZGrnGSf+7FimaPneSfs8/7VZP6YXvxvcbr
43Cee1Hv3HIX+edeTHb96yL/3IujZ6xSv2z2vko0cpN/7kXrvtOl/tls/Rf9
203+uReu79+6yT/3Iq+1uIf8cy/+6NlL6q/Nrn/sRg/552y+Xb4v9dv24sbC
XA/5516Ur13FS/45e787hnvJP/di7aa9XvLP2f2G8P7ZnOdePNvu9ZF/7kXs
wO+MMee5FwdME3zkn3tx/uWfPvLPvRj1IdJH/jlbf9U1w9/nPPeiz8bGCvnn
7POnjFHIP/fi3MLfFfLPvcgJfyTlw3lx+I5FJf+c7S+/8PqRnOde+J/spZJ/
7sXoaXNU8s+9ONT3oEr+uRc3vw9VyT9n++93Fo38cy827i2nkX/O5vtPHTTy
z71Y13yiRv65FyWPbNLIP/dib79LGvnn7P5m8/wOznMvzjRUdPLP2f6Sp7rU
j5Tdf/kuOvnnbP+6PVHqT8qu/5fNOvnn7PnnXNLJP/eizpvXOvnnXvzzoog/
+eds/+7Z2p/8cy/GpPbyJ//ci4gZQ/zJP/fi8nSeT8N57kWX9Vf8yT9n8/1P
Xq+N89yLrpOz/Mk/Z8/3t3R/8s+9uHg9xp/8cy9KnD7jT/65FyPOHvAn/9wL
vXK8P/nnXoz9VDOA/HMvyk76KoD8cx9KFhwh1YfzIXGjXaoP50Mapkv14XwI
t3YMIP/chzGX6wWQf+7DnQkWqT6cDzsH15Xqw/ng8nst1YfzYW97/nmc5z40
L7o6gPxzHyJ/5v1uOc99GJC4XKoP50OefJWMn3Oe+zC0zxrj7znP2f0lhhhj
znMfYocdNn6f89wHbdMj4/M4z33YFMv/H+e5Dy+XXTb+nvPchyYzNSP/i/Pc
B/V3/v44z30IjcpvjDnPfag8aqM/8dyHh8V5f3POcx82Hq0v5cP5UCqtSQDx
3If888b7E8992H8hVOrv7sPfEz4FEM996HK5n5QP50PLHw8GEM99OHjPFUA8
9+H84jYBxHMfevctJOXD+RA9f7KUD+dD95aBUj6cDz19OwKI5z6sbrpOyodj
8+lxlpQP58OUuTz/jvPch9t5ugUSz9n9FmkUSDz34epH3s+d89yH13vLBxLP
fRh0rHAg8Zzd//xvAonnPvQvyvvFc5778GBPjlTv1Ycit7Kkeq8+rJsdKtV7
9eHshydSvVf2vnffkfrT+7D876MBxHM2P8rvkvrV+7Bi+sIA4rkPjw/9HEA8
9yFzV68A4rkP+m8VA4jnPnw95IM/8dyH9PZ8zHnO5u/5YH/iuQ+T6g32J56z
9/tfI3/iuQ+dhk/wJ577kLSsqD/xnM2/Pgd04jlbv/N5/jTnuQ8dl3/Siec+
lN07Tyee+1C85UideM4+f/9WnXjuw/rKpXTiuQ/x61dK+e0+VNt4U8pv98Fz
RJPy29n7CeP58Jzn7POHV9eI5z5ciR6lEc992PzPGo14zp7vnvIa8dyHWUtf
qsRzH0pXcWvEc/Z5rfJrxHO2HholqsRzH4r2OK8Sz32YsYbXS+Y8/9/zX6AS
z9n7ujVUJZ77cK95HZV47sMPhf2M8RmD5+zz2vH8Qc5zHz6tOKIQz32o6jdd
IZ6z/cH0nUI89yHga6tCPGf7Z8MHPuK5Dx+q7/QRz31Y1Gucj3juw5FmdXzE
czYf+vj5iOc+5AQ89RLPfZhY8ZCXeO7DsaSFXuK5D0NGdPMSz334eW2Al3ju
w8CfwjzEc7Y+RhzxEM99mOuc4iGe+1DoJs8n5Dxn8/FUqpt4zuZLzhE38dyH
ywcmuInn7PM78PMp5znbfzqluYjn7P2/G+Minvvw5H6gi3jO+LJIdRHPfYjY
nSnVb/fhy/3+Uv12H2ZWv+8gnjMeVL7nIJ77UP3xBwfx3Icdu1Y4iOc+HNrw
0k48Z/vNhQt24rmC0XfeUD1IPwVDxx2xE98V9GlmtYv1b1Lwfd/jNuK9grgO
IVQv0qLg4/LrNuK/gsjy1ah+pE1B3yZXjXiJnwcUPPz2llXsFw4Fx/veNsb8
fKDg0/M+VF/SpaDUw5dGvMbPCwpm17luEfuJR0HDx5eNMT8/KBjQYoYx5tu9
gs2P8hljfp5QcLtwqFnsN6qCGV1PGWN+vlCwdSqvJ2nsP7qCfy/4jDE/bygI
nnHVJPajAAUlIjYaY37+UHC57Y/G2NjughS82vDSiI/5eUTBkeY8v9DYr/Kx
698zwBjz84mCyVt4vG3sXwUU9B70txGP8/OKgt3/8PqRxnbxNft/IV5jzM8v
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
NnkpeP6ziqlbZ70UPB+m4s6iiy8Fz4er2HTw80vB8xEqatdumCh4PlJF7/Ez
EwXPR6mYcvlSouD5LyqGlM9NFDwfzZ7PkwZJgudjVCyaMluKz9n+m/eGFJ+r
uGmzvRI8H8/215nNXgmeT1DxttrCV4LnE1Vs23XvleD5JBWufvprwfPJKrzV
urwWPJ/C+HBv3WvB86nseTYMeS14Po39fEXhZMHz6ez//Tk4WfB8hooDXQ4k
C57PVBF5802y4PksFZXaVH4jeD5bRU7UxDeC53PY30+89EbwfK6KWQctKYLn
81Sk9m2VIng+n+1XO1akCJ4vYPOz1PMUwfOF7H2fKyx9v5Xtd3WGvBU8X8zW
d8eDbwXPlzDePk1/K3i+VIUJ9aV6k2x/G7owVfB8uQrnmkepgucrVJw5EJQm
eL6SXe/WXlI9SjbfnPvSBM9Xq2jwXYZUn5KdF040eid4vlbF2eaL3wme/6ai
6/z77wTP16lQjvmnC56vV5HeqA/1k9mgYnCfA+mC5xsZ7yplpAueb1JR3dzw
veD5Zvb72oL3gudbVFTrzOtR8vhcRYE3gR8Ez7ex+Xy79wfB8+3s+tvv/yB4
/jvbj1dlfBA838HOb28aZwie71Rhrr88Q/D8DxW/ZjzNEDzfxXhcr1Cm4Plu
tj7tP2UKnu9RcaXfqUzB871s/fQwZwme72Pzp037LMHz/Sruld6WJXh+QMWG
Sq+zBM//YuPIGh8Fzw+y/fDozI+C54fY/Y66/VHw/LCKx/O0bMHzIyqOhffI
Fjw/yj4v/+5swfNj7PxZ/W224Plxdn2n6pDefoLt33UWkN5+ku2/k//LETw/
pSLqrf5J8Pw0O9+4Wkv9rNl5b+v8T4LnZ1SszP/fJ8Hzs+z88bjcZ8Hzc4xX
j3h/bB6fs/Ua8uyz4PkFFaGX1VzB84sqSg1pmSt4fklFvY2LcwXPLzN+fxOa
K3h+ha2Xo9Wk/ltsv/puxRfB86sqrjV59UXw/BpbH5kd84j8iuuMB27e75vH
52w9tyjkJ/ItbqqIa9pD6qetYtzqmcaYx+cqci17/MifVVG3ZZox5vG5it1P
huclv1ZFs7XvjDGPz1WkNepmIv9WRcq3y4wxj89V1Fqw2UR+roqGQ/cZYx6f
s/3z3hMT+btsf6gUYPhpPD5X0bpDF6lft4rjf240xjw+V7F+R7SZ/F+2vkeW
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
eH6R8fSH0RbB80saHCk8XuTxuYYTZ+PNgudX2P7u2WYWPP9HQ/bszmbB86sa
rL1cZsHzaxrUdlfo+4zX2X5kmmQSPL+h4eiWCvT9xpssPjgRn1fw/JaG2rM3
5hU8v83OJ3Va5xU8v8N4svqzFJ9r8J920k/w/C47D2QM9xM8v6fhXI2CfoLn
9zW8dv6bR/D8AZvfR+fkETx/yObrvAZ5BM8fsfd55t0Xobf/x97Hzl1fhN7+
mM2/Jj9+EXr7Ew3r4n1fhN7+jP1//U6u0Nufa6jTdk6u0NuDGZ8m8v7hPD5n
z0eN+iz09lAWr5Ra/1no7WFs/bXr8Fno7eFs/dbJ81no7REsPum155PQ2yM1
FF7c4pPQ26MYbxJ5fiePz9l+VneX1J+E8aVUnxyht8ey/eC711J/cPa+rw7J
Fnp7PJvPGWWkfuHs88p5s4XenqDhj448n5PH5xoGRL/IEnp7IjuvzTucJfT2
JHa99S9mCb39lYZi9XpmCb39tYaqZ49lCr09WcPJ3eMzhd7+hu2no2cbY4Pn
KWy/v1YiU+jtb9n+5/k1Q+jtqWz/ulo3Q+jtaez3f+f9cHh8zs4jlrQPQm9P
Z/ttF/79dB6fs/nXIe8Hobd/YPttN9cHobdnaBg8//x7obdnarjyW/73Qm/P
Yuux2d10obd/1PCs6n/pQm/PZvOpzNJ0obfnsPm0Nf2d0Ns/aejx9vd3Qm//
zPi8eds7obfnajiV2/+d0Nvz6KiwNjJN6O1+OvKYFqcJvT2vjpC549KE3m7S
UTumcprQ2806nideSxV6u0XHgQErUoXebtXxOqpHqtDbbTpaTDOlCr3drqPN
1Muktzt09HszhfR2p47JJQqQ3u7SMSf8UYrQ2906qg3bQvUmPTr2nG6fIvR2
rw5nA78Uobf7dJxwX34j9HZFR5mOv1I9SlVHTNFab4TerulYd5j7ETw+13H0
/M5kobf76xi1vHuy0NsDdGz7RksWenugjrj0m6+F3h6ko0CJGa+F3v4Ve/6b
qr8Wens+HR2Gp7wSent+HYti91D9jALs+gv3fiX09oI6aq0LeiX09q91dMn7
OEno7YV0/OlcmiT09sI6BpdqmiT09iI6jmf6JQm9vaiO8gWuJAq9vRi7/xrc
n+LxuY5rFeomCr29uA7bcl5vksfnOlaOP/tS6O0ldBQ7xfu18fhcR8n/7+fG
43Mdvx9+lSD09tLs/Sf8mSD09rI6zuTl/b55fM6ur0iRBKG3l9fx4y/c7+Px
uY7lE9dI/ex05J/I/UIen+vYccEn9bfTgepX44XeXkVHo9Jr44XeXlWHrynv
p8fjcx0PbvP6kjw+1/E439U4obfXYPd/YXuc0Ntr6hj3Z/s4obfXYv//J3uc
0Ntr66jUOzFW6O11dDwtfShW6O11dXxdu0es0Nvr6Tg2tFKs0Nvr62iQ5IgV
ensDHWtrX4oRentDHRObzIkRejt0dGzTP0bo7d/pOFmodIzQ2xvpuN/uhVRf
SEfZ2PPRQm9vwv5/3Gqp3hCbb0+7GmMen+so8ra4VH+IPb98Hw0/ncfnOvxz
rhljHp/riHauNMY8PtfxthXvJ8njcx25baoaYx6f63jxnZ8x5vG5jgXnHlH/
7e/ZfL600xjz+FzH3RGjqR93O7b/tGpkjHl8ruPJ7sBIwfMOOvzWvowQPO/I
3sfR09Svu5OONz8ujxA876Lj4cX+1O+zq45/bleKEDzvxn7fZqP+nz+y+4mM
DRc8765jyPOj4YLnPXS07Dw7XPC8p47bFwaGC573Yu/rQcNwwfPeOg7N9IUL
nvfRsXjDmzDB8746Tv/wMEzwvJ+OrnV3hwme99exptiMMMHzAWw/3jEgTPB8
oI6KaxAmeD5Ix/zkoDDB88FsPe/n9ch4fM7mwwPeb5vH5zrKleT5Nzw+13Fh
3+ZQwfOf2fUMmR0qeD6M3c/DAaGC58N1XHc2CRU8H8Hef7MyoYLnI9n6Kcr7
afP4XMf6Qekhgue/6AgrExIieD5aR/GKl0MEz8fo8AbtDhE8H6tj+vQlIYLn
43QsmTA+RPB8vI5VNXuFCJ5PYOs9mOdH8vicze9TFUMEzyex/W9cwRDB88k6
qnqtIYLnU9j7zE2jfLipjJ/5Y6R6jzq2tLpP+XDT2fNpcY7y4Waw/eXwAcqH
m8me17dbpHqQOhJ+WkL5cLN1TP1nmlQfkvF7+yjKh5uro/P1flK9SB3NNnSi
fLj5bD5Xb0n5cAt0BDsaUD7cQja/c6pI9STZ/K1bmvLhFrOftyoi1Zdk+/PG
IMqHW8rW43GfVG+SrefLdsqHW65jZj9ej5HH52y+bv/0XPB8pY5HOzKfC56v
0tG6T/pzwfPV7P0+fPtc8HwN41lq8nPB87Xs/HD91XPB8990pHRPei54vo7N
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
FTuaivoRQp+rKO230lHGz1UczglxlPFzFS81g5OMn6v452YTJxk/V9Gr+w9O
Mn6uYkDTg04yfq5iV4NSzjJ+rqLCtpnOMn6uYtaO97r+aipmby1bSsbPVTje
71xKxs9VfD9mXCkZP1fxzbWtpWT8XEX0Nx9Kyfi5Cq/N7UvL+LmK1Lg/Ssv4
uQqPP4pKy/i5irteTVxk/FxF0lcjXWT8XMWID6tcZPxchfuAey4yfq7CYaK/
q4yfq8hpOMFVxs9VDDffcJXxcxVHrI5uMn6uouB8YzcZP1fx8c04Nxk/V+F2
er+bjJ+raO4Q5Sbj5yqeD6jnLuPnKm42WeYu4+cq7l154i7j5youH3LykPFz
FQuW1POQ8XMVWddEvUihz1Xsd9rvIePnKo65ZnrI+LmKq4MHe8r4OV3/huue
Mn5Ozye9lJeMn6v4NbWul4yfqyiq0MFLxs9p/Uzq4yXj5/T7lqm6+LmKgWsv
6eLnKgpbVfSW8XO6X56iH7jQ5yrOlxb9v4U+VzHGrY2PjJ+rWHdjlI+Mn6to
dWGMj4yfqxg9d6iPjJ/Tel4r8jeFPlcxYd5uHxk/V/HkTaGPjJ+rSL82rYyM
n9P/exgi+222VzE1taqvjJ/T57/t5Svj5yp6XxvoK+PnKsb+1d1Xxs9V2Dd3
8pXxcxV7Aib4yvi5iltfrvvK+LmKNHM1Pxk/VzH3/hY/GT9X8SIh2k/Gz1V8
cvD3l/FzFeYAm+zP3Zv2h9dl/GX8XEX1PaIeltDntP6me/rL+LmKB2Ed/WX8
XMUzX5EfI/S5itBF/rKf90AVPc6NCZDxcxV+L3bL/t6DVbTdK+qFCX2uIvbg
Htnve6gKV21ZgIyf0/4bM1/2/x5G891+NEDGz2l/Wpsj+4GPUNF0+0BFxs9p
/j04I/uDj1KxuNNHRcbP6X7/myf7hf9I92eT6Pct9Dmtl87/yP7hY1UMGiTy
qYQ+p/s//qXsJz5exTW7j64+nIrAl2N19eFURFa5rqsPp+LUiCxdfTh6fo29
ZT7cZBXD/nCW+XBTVHQqjtb1J1bx9av7JWOhz1Wswl1dv2IV8UnJJWOhz/+3
/zWV+XA/q6hjWy3z4WaqCKv0QObDzVKRsS5C5sPNVjG/c5DMh5tD+2HrqzIf
bi79fs/NMh9unopxkQtkPtx8FSvfbZX5cAtUJB4U+Y9Cn9P6PaCqq/4/zxep
iLL0KhkLfU775evJJWOhz4kvKT+VjIU+V9G3fLeSsdDnKoI2lSsZC32uomtQ
Ucn/E/pcRfD+LyVjoc9VVPOqXvL7op+yivw+Y0rGQp/T/Du+V2Wer1axLPKq
yjxfo6LdCzEW+lyFYtuvMs/Xqbg9XVy/0OcqqgxspTLPNxDf4mqrzPONxP/J
7VXm+Sba79rMVJnnm2m/vHpUZZ5vUVF/yB2Veb5VxW8Fd1Xm+TYVHc+cVJnn
2+n/vZqjMs930H6U31Zlnu9UYZteUWWe71KxNaOyyjzfrcLTv53KPN9D68l3
gso830t8v7dMZZ7vU3FyxQqVeb6ffo6JKvP8APFyZAuVeX5QRUyoi8o8P6Ri
uZeYf0Kfq7gTLfJphT5XcfGFyLcV+lwl/ZNmZJ4fo/PCACeVeX5cRcM+Yiz0
Oe0fNRONzPOTKlq8vSX7x/9G8zXuFyPz/He6/ksiv1jocxW759Q2Ms//JD4+
rmFknp9W4fRjIyPz/IyKmsZWRub5WRXOVUV/eaHPVcy8LvJhhT4nHt7Nl/Ve
z6tomX1X1nu9QPtD2K+y3uvf9HzTBsp6rxdV+G5oJ+u9XqLz2tzWst7rZRXJ
a1rJeq9X6HpXNzIwz6+qWGH5StZ7vUb7x73Puvx2+vxgsT8KfU7774ZFCvP8
por3FzoqzPNbKh4/rqwwz2+rmPQsQGGe36H95IGLLr+d9qcTmbr8djo/dAgM
YJ7fJz71+zOAef5Axc6hM3X57Sp++LtRAPP8kYrWiwv9meePVVSyvvJnnj8h
Xvie0eW3qxhVe5suv532t5Zz/Jnnz2l+ZPf1Z56/UFE25Gt/5vlLFUuap0ue
vyI+1v9b8vy1iil7Zkme/0N6ozn8mOf/0vlLVfyY52/ofPBzsi/z/C2dPxY9
8mWev1ORO2+vL/PcriJlkjhvCH1O+kSp78s8f6/i0YfsMszzIDrPfblShnke
TPPTvKgM8zyE9uuLHcswz0NpPxoh3n8R+pz215BoH+Z5OJ2v9p/1YZ5HqJjx
do4P8zxSxfGuLX2Y5x/o7xc6+zDPo1RsWvTIm3keTftPqTXezPMYFRfudfdm
nseqCHni7808/6hiZOE7Xf9wFR+W7vBinseruNFHvI8k9LkKl0KLF/P8E52X
t4fr+ovT/v36iCfzPIn0WcIYXb9x4sE31TyZ5ynE48kfdfXbSf9tOaCr3058
WfC9rh858WWHjwfzPENFswfP3Znnn2k/n7TenXmeSX+/qLeuXznp3akmd+Z5
toqn5UPcmOc5Kl47bndjnueqWN+mnRvzPI/0UU66K/M8n/TIwsOuzPMC2s9P
93dlnheqqB1scGWeF9H5xx7swjwvpvnx5YgL89zBhLQm41yY544mBNSt4MI8
dzJh6faXpZnnzia86SnqSQp9boLZSS3NPC9tgoPjw1LMcxcTNpZbVIp57mpC
k2utSjHP3UyoeFXUkxT63IRex0V/BKHPTWj/YLMz89zThH/Dmzkzz71M+Pre
eyfmubcJ1QJmOjHPfUw4UcFSMt5Uos9NOPr8hSPz3NeENcvWOzLP/UwYM3qA
I/Pc34Ta7Ss7Ms8DTDh7P86Bea6Y8HubbQ7Mc4MJVXp+48A8N5rw87y7X9hv
V02oP2XoF/bbTSYMWOn2hf12swmT3j8oZr/dQtfTcWMx++1WE5ofHlbMfrtm
wp1DVYvZb7eZ4BMcXMR++1cmtLw+o4j99rImuN13LGK/vRxdr2V7Ifvt5U24
l9uokP32CiaEr04pYL+9oglrnS8XsN9eyYSQ26sL2G+vbELd7wcWsN9exYRv
3gUUsN/+tQmF8/7KZ7+9qgmjv26Wz357Nboev8d57LfXMOHk7hF57LfXpPs5
3E/2Y/nGhF+G23PZb69F39/nj1z222ubMO7nxbnst9cxodmxNrnst9c1YfO9
uBz22+uZsHX19Bz22+ub4JSQm81+ewMT1u9dm81++7cmoKh+NvvtDen7fpOZ
xX57I/o+dR5nsd/e2ASbclj3/jndX+sU3fvnJqw6btO9f07zZcafmey3Nzfh
+tvamey3f2fCqXfXP7Pf3sKEgTeHfGa/vaUJ/U3qZ/bbQeshJC6D/fZWNJ82
P8hgv721iXi8N4P99jYmBH3fL4P99rYmpJqS09lvb2fCnt1T09lvb0//72xO
GvvtHej5HNqcxn57RxOmbm6Xxn57JxN2nfNPY7+9swmB49NS2W/vYsLxNa9S
2W/vasKINjuk396N7v+oxtJv726C37bbKey396D7bWqbwn57TxOKa75PZr+9
lwnJR39JZr+9twnxSvdk9tv7mHDLr0Yy++19TYgbKOINQp+bMLFeVBL77f1N
2O29JYn99gEmlL9QLon99oEmdJ15PJH99kEmlB0o6lUIfW5CGXvoJ/bbh5hw
xeHQJ/bbh5qw9/68T+y3/2BCTdOIT+y3DzNhZquWn9hvH27C6jSRbyn0uQnl
tuxMYL99pAkzLpRNYL99FK3v9afj2W8fbUKErWc8++0/0vNL845nv32MCfuG
xsax3z7WhAVPXsSx3z6O7kfYeV1/NRMqVF6i669mwo2NX+v6q5mwZMilj+y3
TzRh+JW2H9lvn0TfPzk6lv32ySb8E7kvlv32KSbY+0yNZb99qgkNqvWPZb99
mgmlf2sdy377dBMuedhi2W+fYcKjqLcx7Lf/bMKxwxNj2G+facKo3sWynsws
E17U3yfrycw2oU3nXrKezBwTOh4tJ+vJzDXhyP7S0ey3z6P9uF5mFPvt8+n7
tw6KYr99gQmN/z0YxX77QhMKhrSLYr99Ee2n3cM+sN++xISU5gs+sN++lHiX
V+sD++3LTGh0Mj+S/fblJlx2Dotkv32FCQ0vvYhkv/0X+j77rkay3/6rCdvC
N0Sy376S1mO1NpHst6+iv68Yo4uf0/o+8asufk7rO61xyVjocxO+JIp4vdDn
dF5Y/KEkni/0Oe3/H/4pGQt9Tp8Xf69kXMLzjTSfXx4rGQt9TvvNpnElY6HP
TVhepJSMhT43Qd15syQfQehzE2K2TisZC31uwp8dm5SMhT43wXGB6J8p9LkJ
Na6XCmOe7yQenM0LZZ7vovW4LDaUeb7bhFeNRT0qoc9NGJQ7LZR5vtcEk2vF
UOb5PhOWfQkOYZ7vN2Fo/aMhzPMD9PMkUc9R6HMTOj/8KYR5foh44TgyhHl+
2ISmH/uGMM+PmNAjX+S3CH1uQqh/keyXesyEC1evyH6px02Y5iryAYU+p/PO
k1bBzPOTJvQdIvJ9hD4n3pUR+UBCn9PznfVF5sOdovX1Klvmw/1J5723H2Q+
3GnavytekflwZ0zo4rRE5sOdpfXwvr3Mh/vLhMRBRpkPd454tuSzrj6cCZ+D
w3X14eh8mPtOVx/OBPebr2Q+3EW6n+/vyny4SzT/XY/LfLjLNF+i58p8uCu0
fnM6y3y4qyaM7F5e5sNdI379X/0+oc9NsHZOCWSe3zDhp1ExgczzmybcHxcR
yDy/Rf8vKzCQeX7bhDPBDwOZ53doPi8+Gcg8v0vn9ajlgczze3S+fTUykHl+
n/5fbMdA5vkDE3yDGgUyzx/S+npeK5B5/oie39nqgczzx3S+P1UlkHn+hD7/
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
zFBHBn5hnv9uxjdqWQcZPzejVbsxDjJ+TtfvJepXCH1uRodZeQ4yfk7rK1vU
vxD6nH5+TMRThD6n+VTd7ijj5zR//7A5yfi5GT/fGO0k4+dm3E865STj58Tn
30X/baHPzfj7WGNnGT83w+P4ImcZPyfe1n3oLOPnZtTr6VVKxs9pf1jSp5SM
n9N+Mlb01xb6nHjZQNS3FPrcjJaXNV1/NTrv5Q7V9VczY8Pbw7r+amasHh2v
669mxvqi2i4yfk68ts50kfFzun87/naR8XP6f9XSXGT83Iyrp2q6yvi5GUcq
TXKV8XMz3qadc5XxczMyr+W6yvi5GZNONZf1ZJ4Sb53myXoyz8x49+a8rCfz
nPREuSRZT+aFGfE+or+20Od0fq4zwV3Gz82YsuS0u4yfm9H7SIq7jJ+bUX1Z
dQ8ZPzfj2bORHjJ+TuePoD0eMn5O++Pudx4yfk7njaW+njJ+Tvvlhm6eMn5u
hm34ak8ZPzdjWrt7njJ+TvufS56njJ/T/qHU9pLxczMyavzoJePnZlgP7vWS
8XPi/YA3XjJ+bsaEYDdvGT83Y1GdFt4yfk779bpp3jJ+TudDh2PeMn5O67dq
oC5+TvM5z91Hxs/NyJ/Q1EfGz4mXqaJ+k9DnZgxy2Osj4+d0vaVf+Mj4uRm1
HQp8ZPyceJ5ctYyMn9P56oPovy30Oe3HZ1eUkfFzOm8tFPUwhT6n/bhORBkZ
P6f50d7dV8bP6fywtJ6vjJ/TeWrKEF8ZP6fzzstffGX83IyGe0Q/bqHP6fzQ
662vjJ/T56WI+plCn9P9PWf2k/Fz2l9mtPaT8XPaX2zj/GT8nObjoF/8ZPyc
rsf9uJ+Mn5MeiHzpJ+PnNJ+TM/1k/Jz0cIbiL+PndD7Y28Bfxs/NsPfo5y/j
5xZceD5X9kt1tOBY7AHZL9XJgvnrb8l+qc4WDLjyn+yXWsqCwTtSZb/U0hb0
i/cIkPFzCzYcqBgg4+cWbN7SPEDGzy34x6VXgIyfW/DH4HEBMn5uQc7kpQEy
fm6B5iXyPYU+tyC+7u0AGT+3YG278AAZP6e/75EWIOPnFpyc7KbI+LkFE27V
UWT83ILRR3srMn5uwZGiXoqMn1swomo7RcbP6Xrniv7fQp9b4FS3uiLj53T/
zNaScQnPVQtW1a1YMhb63IJ13cXnCX1uwfiO00rGQp9b8FvVpSVjoc8tWJTZ
r2Qs9LkF12NEfVChzy0YGp6u639uwRO7T8nPhT63YH3/wSVjoc/p+/Y9VDIW
+tyCLv0Pl4yFPrfg68tjS8ZCn1tQf1o9Xf9zC7aOq6nrf27B6iODdf3PLbhY
8bCu/zndnxW3df3P6Xm+2KHrf25BWWdxv4U+t6D65WoK87ymBd+Obqowz7+x
4O6uWQrzvJYFhY9OK8zz2ha8bHxJYZ7XsWDxq/0K87yuBfX6/6Iwz+vR/Xk4
T2Ge17fg52pLFOZ5AwumVxX9kYU+t6C42WaFed7QgvYHtijM80YW3Ny9XWGe
N6bfvyJ+X+hzC9pcFc9X6HML5qSMlflwzSxo8La7zIdrbsEv77vIfLjvLPD2
+FHmw7Wg+TVzicyHa0nz9fQymQ8HC76/PELmw7Wi+zdH5M8JfW5BwKI4mQ/X
xoI+q+/JfLi2Fjz4eF7mw7Wj9VVwXObDtbfAveO2AOZ5BwsWfCXyr4U+t6DZ
sMEBzPNOFmRObRLAPO9swfCJIh9c6HMLHA+9lPlwXS0IGTJO5sN1s2DgAWd/
5nl3C/bsuabLb6f7X2mvLr/dgp/+Oi7z4XpZ4NzvpcyH623BsMAcP+Z5H/o+
04t1+e20H3S658c872dBy63d/Zjn/Wm/e/xM5sMNsGDG4AG+zPOBtD++9/Jl
ng+y4HJEusyHG2zB6zqlfZnnQyywnG3syzwfasE346f7Ms9/oP309Tpf5vkw
Ws+TRvkyz4dbUGp+Thnm+QgLah+eXIZ5PpLmR60UH+b5KAtOz94oeT7aAuut
YZLnP1pQpdFwyfMxND+Nv0qej7Xg1I5rkufj6Ho8QiTPx1vgd/i2D/N8Au0v
heJ9C6HPLThj/M+beT7Rgu6zu3gzzyfR/T8d6sU8n2xBxt+7vJjnU2i+flnu
xTyfakHHpTu9mOfTLKh6644X83y6Ba3+++DFPJ9hwc43b72Y5z8TDyOWeDHP
Z1pQwaPIk3k+i/a385M9meezLSiz7bMH83yOBWNai/w8oc/p75vM8mCez6P1
Gj/bg3k+n/7fg20ezPMFFkzre8GDeb7QgiuPz3owzxfR7/ea6ME8X2JBpStp
uvrt9DzOD9fVb6dxlMjfE/qc5nf92W7M8xUWDIoS522hzy3A1ppuzPNfLWgx
VNRrFPqc+BvWx415vsqCzoP7uTHPV1uw94fybszzNRaMrCjO+0Kf0/VsqujK
PF9nQeOA3S7M8/UW/NioqgvzfIMF2QvCSjPPN1rwZdz10szzTRbU3HWtNPN8
swUJ/z4tzTzfQnzRXpVmnm+l/cd0ojTzfBvtf3+0Kc08327BVbcb8n21HbRf
jq5dinm+k/abnRedmee7LPjbY6gz83y3BWHPqjszz/fQ9e+1ODPP91pw1Lus
M/N8nwVNN5V3Zp7vp+cz39mZeX7gf+ejsyV6sqk4IGDltDpOzPNDFkSFHHNk
nh+24Pc2Iv9P6HPaD1bfdWCeH7VgR+ASB+b5MQuuXR/hwDw/bkFio0EOzPMT
FrwPFu8fCn1uweQvLR2Y579ZsO2nPJ0+t6Bo7S9f2G8/ZcGoSsXF7Lf/SevV
f0Ex++2n6Xq/8S1mv/0M7W897hex337WAsO4HUXst/9F551ty4rYbz9H55dv
5xax337egtluo4vYb79ggU+/akXst/9tQWDy3UL22y/SflejVSH77Zfoec25
XcB++2WaT126F7DffsWCe09y8tlvv2pBavCtfPbbr1kwrsvBfPbbr9N+G7g+
n/32G/T5Hebks99+04Ihke3z2W+/ZcGmxqIepNDntH/U/DmP/fY7FgRtyMpl
v/0u7V+FS2U/lnvEk5mVZD+W+/R9Z37IYb/9Ac0f98s57Lc/tGDSx3057Lc/
sqDRshU57Lc/tmDZrIE57Lc/Id599Mhhv/2pBcE19mez3/6M+OVTKZv99ud0
3v3wVxb77S8sKG3skcV++0viQ9dSWey3v7Kg8k//ZLLf/prOP1dOZ7Lf/g/d
r5RNmey3/0vPd9D4TPbb39D96VM5k/32txZsPCP8S6HPLXj7rOdn9tvtFizp
HpnBfnsgnSfvLdC9f07zb2NN3fvnpJ+80tPZbw+2wH7gUTr77SEWdHpyLJ39
9lAL6rZelM5+exit7xOt09lvD7dgYt6nNPbbI+g8OmVpGvvtkXQ/phvS2G//
QPd70PlU9tujLNjnNCyV/fZoOt8E2lLZb4+h55ualMJ+e6wF5yo8SmG//SPt
h9rBFPbb4yxwCxufwn57PK33lVoK++0JFtj8bki//RPd3+zvpd+eSOefullJ
7LcnWfDixaEk9tuTLbiTNziJ/fYUC+IqVklivz3VAleXgkT229NIL9x+k8h+
e7oFn7IPJ7LfnmFBUtzQRPbbP1tQzsc1kf32TLqfVX/7xH57Fq2HlV0+sd+e
TefPsrkJ7LfnEH+3nUtgvz2X5n+vOQnst+fR9e3plMB+e74FT/eLfEShz+n+
rk+PZ7+90ILk7hfj2W8vovlQZVw8++3FpEe2+sWz3+5gRfxr0a9a6HMrFo+c
EMd+u5MV1fwqxbHf7mzFw8/xuv5qVkT/clnXX82Ka1fW6vqrWTG49LCP7Le7
WrE7u+pH9tvdrHB/J/q5CX1uxYJnO2LZb/ewwum6qFci9LkVw47kx7Df7mXF
xUaXYthv97YitXBeDPvtPlZYenSMYb+9jBWnZ1lj2G/3taLBldRo9tv9rCg7
71Y0++3+VpiaLotmvz3Aii/tRb88oc+t+CUzI4r9doMVtZ+ekvVkjFYsGjkh
iv12le7HijqynozJip5Viz+w3262Yte6fz+w326x4rc2Jz+w326l+9VOxE+F
PrcitEa7D+y326yYU8H1A/vtX1mRf/NBSXy2hOdlrdjrL/oVCn1uxckD7SLZ
by9PP+/mE8l+ewUrJv0aFsF+e0Ur/Jqej2C/vZIVasbqCPbbK1vRKWJ4BPvt
Vaz4PKheBPvtX1vhvKgwnP32qlZMqSryFYU+t2LZryvDmec1rLi6u0c487ym
FeNqarr4uRXG8OQw5nktK6x1HoQxz2tbUXXL/jDmeR0rEifPDmOe17Viw9Du
YczzelZMH18ujHle34pG1tRQ5nkDK441F/kCQp9b8fr+ulDmeUMrvk36IZR5
3siKOxD5CEKfW1F01CuUed6E/t+AuBDmeVMr2rrfD2GeN7Oi5vv9Iczz5lYs
mTwrhHn+nRX353ULYZ63sCJgSqUQ5nlLK3INhbJfKqz4I+md7JfayopW9c7K
fqmtrSiTuEb2S21jRUL0WNkvtS3Nh4vtZL/UdrReH1eU/VLbW+G21lH2S+1A
P68ZoasPZ8XS9jd19eGsqGvdp6sPR/PrxHxdfTgrVl0arKsPZ8V/tZvr6sNZ
ca+WTVcfzopK/xW/Z573sGJnFdFPWuhzK7q5ifwdoc/p/vY9+Z553pv2E030
ixb63IrH+0S/XqHPaX+LEf2ghT634p8nTd8zz/vT530R/Z2FPrfi7W7Rj1jo
cyvGFov8RqHPaf31EfmLQp9bMWTQnUDm+RCaf+d/D2SeD6X1PmZrIPP8BytW
vFsYyDwfZsWlcuMDmefDab+s8H0g83yEFS9Otgpkno+k+XxD5DMKfW5F9TEi
X1Hocyv6bBT5ikKfW1GnVZ7MhxtjxbrL8TIfbiytd1OQzIcbZ8UTt2cyH248
ze/y12U+3AR6Xsv/lPlwP1nR8NwBmQ830YoO8ZtlPtwkuh8Rv8h8uMlWeHWc
J/Phpljxo8cUmQ831YrWTUfLfLhpND+9B8l8uOlWtDjd0848n2HFtDId7czz
n2l9G2Bnns+k6/u7sZ15Poueb0JdO/N8thU3btawM8/n0Hr8toqdeT7Xinnt
y9uZ5/Os+Jiu2Znn82m/aGe2M88XEC/bGe3M84VWNE4MsDPPF1nR/xt/O/N8
iRXd3fzszPOlVvRb4mtnni+zomCXGAt9bkWNXuL3hT6n9XZCfJ7Q51aE7FLs
zPNfrUiqrdqZ5ytpfiyw2Jnnq6yInfuVnXm+2goXj4p25vkaKzYHVLUzz9fS
fNv+jZ15vs6KN+fq25nn64mnO5ramecb6P+1aG1nnm+k9beqs515vsmKIyP6
2Jnnm63Yd3eInXm+hebL+TF25vlWms8Np9mZ59toPfkusDPPt1vxVceVdub5
Dtpvh2y1M893WvHy2CE783wXPS/lrJ15vpu+T7Vbdub5Hvr94hd25vleK1KG
i3xfoc+tMHT6ZGee76f1fEnkbwp9bkWXHK9A5vlBWk8rygUyzw8Rzxo0CGSe
H7Yi6lGHQOb5EeLj68GBzPOjVuwZNTWQeX6M5uPEXwKZ58etiEzaE8g8P2FF
RTeRryn0uRVB254EMs9/syJwalQg8/x3K/6MLQpknp+yotxks67/Oe2vRfV1
/c/pvFaum67/uRUL3X7U9T+n+Xxkga7/OfHr4HZd/3O6Xx/P6fLb6fx1/F9d
fjvNh8qfdfntVsw4pOj6n9P9imug639uRe9ZfXT9z+k8sXCqrv+5Ff6f1+n6
n9P42B+6/ud0v71f6PqfWzHakKHrf27FtlOWYOb5TVr/pdsEM89v0XxrOz6Y
eX7bijM71+n6n9P67H5a1//cilKpL3T9z4n/bVN0/c+t2J+thDDPHxDPWrYO
YZ4/pOc/aEYI8/wR7ScbRb1Ooc+tWFPlra7/uRUtNxfp+p/T/Zwr3tcQ+tyK
K+9E/Wihz634OVvUlxb63IpTR9aEMs9f0vls9cVQ5vkrOs82Tghlnr+m+e5c
IYx5/g99XuagMOb5v1YET9oUxjx/Q89v4J0w5vlbK/p+9ymMef7Oigu9yoQz
z+30+9vqhTPPA+k8FD4gnHn+ns7njVeFM8+D6Lx8QZxfhT6n53/GOYJ5HmLF
u39EPXKhz604Pl/0Hxf63Io4p8sRzPNwK44+Eu8HCX1O+qCTVyTzPJLWS/u6
kczzD3Q+eyb6kQt9Ts+r6/pI5nk08an7K139dvq8muoH5nmsFeF1hn9gnn+k
53vz6AfmeRytl03hH5jn8fT/w8pEMc8T6PwypkkU8/yTFelbhkUxzxPp/69a
HcU8T6Ln1+VOFPM82Yoq3V2jmecptL+7D4hmnqeSvlJ+j2aep9Hnr/wczTxP
p/PwDyI/U+hzK7puGhvDPP9shec3W+T7apl03px1Rb6vlkX7R15UDPM824qO
v2ixzPMcKwpHjY9lnudacTftbizzPM+K7BzLR+Z5vhVfN534kXleYMXhmL8+
Ms8L6fx8Ou4j87yI9E+qfxzzvJj0w6PGccxzBw3jq43S6XMNd54f0OlzDVOd
03X6XMPYr3rFM89Lafg6+1w887y0houv3ROY5y4aDmf0TmCeu2pY8mhtAvPc
TcP8tEsJzHN3Df2mhiQwzz00bLtZ6hPz3FND5T2tPjHPvTRox3d9Yp57a1hd
3iGRee6j4deb4xKZ52U0tPF7nMg899UQ/4OSxDz3o78/1z2Jee6voXThnCTm
eYCGPxrtTWKeKxoWLruXxDw3aBj+7ksS89yooaxpcDLzXNUwcubTZOa5ScP2
MU1SmOdmDYde709hnls04ltKCvPcSvenR/VU5rmmYXDbPqnMc5sG/9PTU5nn
X2n4q9XOVOZ5WQ0Nar5LZZ6X09D6QT3Zj6W8hs1NTqYxzytoOPefLZ15XlFD
0b2V6czzShpaVgxNZ55X1tCzjimDeV5FQ8MhLUvGZUr0Oc2faYMzmOdVNfQ5
L/xJoc/p+/18JYN5XkNDyEHzZ+Z5TQ2DNm79zDz/RoN3X99M5nktDXt7LM5k
ntem573Cnsk8r6Ph/UX/LOZ5XQ2+axplMc/rabjwm/BzhT7XcCJkYhbzvIGG
//46kcU8/1ZDZqi77v1zDdUcV2czzxtp+O2JZw7zvLGGrftE/qbQ53S/Wwbl
MM+baohJUXKZ581ofi9vmMs8b66h/6ZOuczz7zTU+nVELvO8hYYDA3flMs9b
ath/vzCXeQ4NHy4syWOet9LQt6V7PvO8tYYpJ5bmM8/baJjTJSyfed6W9oe3
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
ZJ7XsGFk9HZP5nlNG75+LeqrC31uw6FV5TyZ57VsmDAiRle/3Ya6mSd19dvp
eZ/5SVe/nT6/XC1d/XYbPDuK95uEPrchb6d4/0nocxsm7p7kzjz/1objZWq7
M88b2mDMT3djnjei+73johvzvLENjYfMcWOeN7Ghz8pGbszzpjZ8f0DUgxT6
3IZTZX93ZZ43t6HdpRGuzPPvbKi8xebKPG9hw2/dw1yY5y1tqJhz0IV5Dhvm
eI6S76u1ssE8tIJ8X601XV9SUGnmeRtaD9+tLc08b2vDLq15aeZ5Oxt+z0sr
xTxvb0N46KlSzPMONvwwaWIp5nlHG/blivxQoc9taDk93Zl53tmG1pY/nJnn
Xej+VRjgzDzvSvMx0NGZed7NhvSjZ5yY591tiH4z0ol53oPW37SyTszznjZ8
HhTlyDzvZcPANiccmee9aT0FjnRknvex4eoFP0fmeV8b1h+75MA872fD1O2D
HZjn/W3Yct1Vp89tcOxy6wv77QNtqL5i0Rf22wfZkH+3zRf22wfbELO89Bf2
24fQ8xtztZj99qE0/mtoMfvtP9jwbd/CIvbbh9kQ73GoiP324bT+PnUvYr99
hA05fTyK2G8faUOi0+tC9ttH2VCrvKgXKfS5Da3+Ev1ChD63YfTQvAL228fQ
erBtL2C/fawNC0fWLWC/fZwNb84E5rPfPp72l8rr8tlvn0D704Fu+ey3/2TD
L7cN+ey3T7TB5huUx377JBs+dF+Tx377ZPr/1avKfixTbOix7XYu++1TbVh3
cWgu++3TaD0lueey3z6d7teDhznst8/433pen8N++882uBZ/n8N++0zab177
5bDfPsuGhPRL2ey3z7YBlbpls98+x4al08T72UKf21ClYGUW++3zbCha3DyL
/fb5Nryf65DFfvsC+n/NXmSy377QhmEBWzLZb19E++mvrTPZb19iQ+Gvobr3
z214smzKZ/bbl9nQ+b7HZ/bbl9tw7NalDPbbV9DzUGdmsN/+iw1t7yCD/fZf
bXhq88lgv32lDQ0Kn6ez377KhovPp6Sz376aeO7gnM5++xr6fp93prHfvtaG
MjWbpbHfvs6GSbHpqey3r7dhSeNrqey3b6D9urXo1y30uQ0eA79PZb99kw3j
l7umst++mfa76YdT2G/fQuutV4MU9tu32mCf/k8y++3bbOh6Z1Ey++3bbTj6
Gsnst++g/dbLT/rtO20YFy3qQwp9TvPFfCyJ/fbdNkRO75zEfvse2j+mRSay
376X9v+TcxLZb99nw9pFZRPZb99vw0mP4E/stx+wIavhiU/stx+04UWWqBcp
9Dl934UdP7Hffpj2v1xRH1Loc7pfy/YmsN9+1IYFC+olsN9+jJ5Hxbfx7Lcf
t2F3k1/j2W8/QXz7uls8++0nbdhUrUI8++2/2TB/jeivLfQ5PY+Qm3Hst5+i
/fbw2Dj22/+k+XrTIY799tM2VD227yP77WdsuN2+40f228/SefEft5JxTIk+
p/UXGRLLfvs5G0rdvxzLfvt5mu/31say336B7v8RkY8p9LkNNesmxLDfftGG
y6t+iWG//ZINK71rxrDfftkGhwWx0ey3X6H9IuBCNPvtV2348t+GaPbbr9lQ
/tFP0ey3X6fziHfjaPbbb9jwzJ4YxX77TRsOtN4SxX77LRtyuzWLYr/9tg3D
K4n6MkKf0/q9IfoDCn1O/PVd/4H99nu0XvuN/8B++32avzNbfmC//YENvX4q
9YH99oe039e8Hsl++yMbplWeEsl++2Piz9Oqkey3P7Fh+YKkCPbbn9L57Kmo
zyP0OfFl+aYI9tuf0/k5c0wE++0vaHz42wj221/Sfr0lP5z99le0v02+Hs5+
+2sbvA4uDGe//R+aj9+J+kNCn9P/m+Ybzn77G+LPug+6+LkNs9SLuvi5DZfy
fw1jv91O8zOgbxj77YE2FOd9VTIW+pyu7w9RX0nocxvajBb5lEKf2/5fU+cd
XlXVrHEgnfRQRDEzCiigVEE65LVQFOkiTTr3Q/GiXKQa4AtFESGIFCGgIEUU
pCNKCxiKFMEosFNIg5AKAWIIiYCQO571PLP2n+uB7LPO3mvNb73nnT0Dr4ax
6crztEjU8BqSrjxPl/PAyOfSlecZ//LK9Ac1+lzW7zeJacrzrEhM3b0hTXl+
Rfb3yclpyvOrog+adEtTnmdHYker2mnK82uy3h8W236pOZE4fvWU7ZeaK/pq
01e2X2peJOr1N/1ZjT6PRMaJVy8rzwtkP7c3+R5Gn0fihQYmH8Toc+HNTJMv
YvS5xNuCjanK8yL5vpcmpyrPb0Zi83LTb9noc1nvfZ5NVZ7fjsS6F6qmKs+L
5fzexfQzNvo8En9sOZaiPC+ReP3ByhTl+R05LwRNSlGel0aiY8GgFOX5XTlf
tH4pRXleJnzmOinK83Lhb40KV304ie8LM1314eT5Lzrmqg8n+jNoi6s+nPz/
mYtd9eFEn22f6KoPJ3pu1ABXfTiJZxEdXfXhCEN313XVhyM83S7QVR+O8M2A
UpsP50V49rNMmw/nTQh76rTNh/MhTDq9y+bD+RKGH4uz+XB+cr0xc20+nD+h
xqjxNh8ugPCl7yCbD1eV0KFbV5sPF0hIqdfa5sMFyfxvP2Pz4YIJp6IibD5c
CGF9p0eO8jz03/kUOcrzMMKgtExHeR5OuFh20VGeRxDGPH/WUZ5Xk/llHXGU
59UJ87rvdpTnNQhnxm50lOc1CT/2Xekozx8jpCfFOsrzWoTd6z5xlOePE3Ln
xTjK8ycIPcqnO8rz2oSpoyY6yvMnCQcujnOU55GE+zFjHOU5yef9MdxRnrPc
z9i3HeX5U4SQRoMd5fnTcr0nBzrK8zqEgZ3ecpTndQl7St90lOf1CEsXmrHR
53J/rpux0eeEfhf7O8rz+oTxjQc4yvMGhHM9BznK84aEyRfM/Iw+J7RIGOko
zxvJ578/1lGeNybEPDXeUZ43IaydYO6P0eeENiunOsrzZoTMnTMd5Xlzwt7W
5v4bfU5Y0OwLR3neglDm+7WjPG9JaI7vHeX5i4QmjfY4yvNWhO5NDznK89aE
NP+TjvK8DeGDFhcc5XlbwuyKbEd53o7QLOSuozxvTzjp5ZukPO9A6HzC5Jsa
fU547xeTL2v0uazHjk2TlOdRhD57TX6u0efyfB+9laQ8f0meb0OTD2z0OeGT
UpM/bPQ5Ie642b9GnxO23NyapDzvTKjrbeqtGn1OqD38zyTleVfCrF+KkpTn
3WR951e19V5fk+uvqW/rvb5OGLEGycrz7oTbvm8lK8/fIGzcOC5Zed6D0G65
qVdr9DnhtS0bk5XnvQjvrDmVrDzvTXimo6mPafQ54c+V/q78dsKtKXVc+e2E
V7e1c+W3E6qXvOXKbye88Eq0K7+d0Pj7Ta78dsJXtc+78tsJ664VpyjPBxPq
DQ1NVZ4PISzr+Hyq8vxtQuia11OV50MJbXdMTFWeDyN4NVmfqjwfLvt9QGKq
8nyE7K8Vf6cqz0cS7sTXdvU/l/3at72r/zmhy4ahrv7nhPLQBa7+5/L9Oxx2
9T+X+WXftjwfK9/nC3L1P5d4/2kXV/9z2a9l77r6n8v3ffZzV/9zwt8x8a7+
54QjSaWu/ueyX7Y2Tleev0+Ys2NkuvL8A9k/Mxa7+p8Tii7tc/U/J+xLznD1
P5fx0ZAM5fmHMr8jr2UozycRxr03P0N5PpmQutbkSxp9TqjyUomr/zlh/vLI
TOX5NMLo8d0ylefTCYiLzlSefyTPa/+BTOV5tMzn3INM5fkMiZ/FbbOU5zMJ
ywdPyFKezyIcj1+XpTyPIQyZcT5LeT5b1vuWKleU53MIl4e94qrfTvjPiAWu
+u2EbvXd9dsJvVqZ96WMPifc3dTuqvJ8PuGJPu9dVZ5/SvDuveGq8nyBzJ9z
ryrPPxOeLmySrTxfSPgobnK28nyR8Jv2ZSvPYwktlxZlK88XE5q2N/XwjT4n
vF5s8iGNPie8O/pr+77aF4TPvi2076stJYyd3zJHeb6MMDNqWo7yfDlh1ca9
OcrzFQR+83qO8vxLWY/b6+Uqz1cSfh88Lld5vkqef+b+XOV5nOyHx/3ylOer
CTk7e+Ypz9cQotJi85TnX8n8Pj+Vpzz/mvBggVe+8nwt4QK9nq88Xyf/3nN1
vvL8G4nnA27kK8/XCy/eaVWgPN9A8GkwvUB5vpEw7bJ5H9Loc8L26DsufS7r
bW+7QuX5ZtlPj0z+o9Hnch55OatQef697J+Bja8rz7cQVoz+8Lry/AdC8r09
15Xn2wgfv1JyXXm+nVBQ2PaG8nyHnFfOLbyhPN9JSPjZ/L5h9Dlher/mRcrz
3cLn3h8VKc/3yPlk3eEi5flewqIvTL1Ko88Ja+Z2vqk83yfxaPbKm8rznwiP
Tbp5U3n+szwvL9xSnu+X/btg4S3l+QFC/ZF/3FKeHyQEPoi4rTw/RDjBQ24r
zw9LPDiz7bbyPF6+/9NexcrzI4QI/wHFyvOjhMfXbipWnv9CiP/pRrHyPIEQ
W9T0L+X5McKoDtP+Up4fl/NJhzN/Kc9PyPofxSXK85Oynh9+WKI8/5XQ6cnj
JcrzU4RGdYLuKM9PE/Iy+txRnp8h9B2y+o7y/Cxh8+Trd5TnvxH+eyWqVHl+
juAsWV6qPD8v9/vbnFLl+e8SX5s0vas8TyQkdppyV3n+B8H/6pG7yvM/ZX3k
B5cpzy/I+eiZUWXK84uEnwea31ONPid8e9a3XHmeJPG3X99y5XkyIfqd1eXK
8xSZb+1r5crzVMLbRc3+Vp5flvj36dy/ledphPxVpr+Q0eeEwmPP3lOeZxB2
npl4T3meSTgYd+ie8jyL8H4v7/vK8ysE37Omn7fR58KjN9bfV55nE55bUHJf
eX6NMGXfSw+U5zkSf7bGPlCe5wovC5Ps7+15cn++5n+U5/mEwyfH/aM8L5D9
kmn6eRt9LvF9s99D5fl12c/1+j9Unt+Q9Tnd+AVGn8t5L7nwofL8JuHYxy88
Up7fkvlONPUojD6X80fY6UfK82KJNzWqVyjP/yIE/c/wCuV5idz/OVsqlOd3
ZD9NKqlQnpfKfktsV8n653I+nj23kvXPJX6dOVfJ+ueErtVqVrb+OSG7dFhl
65/L8+v2XWXrnxN+Crpd2frnEk9Gt6pi/XM5f382s4r1zyUeLTpRxfrnMv/X
A72sf87IPdTHy/rnjD7nVnpZ/5wx6P0ML+ufM2oereNt/XPGoeNjva1/zmg2
epurvxrj2LJiV381Rl6/lj7WP2d4/zjVx/rnjDYJpr6L0eeMWb1Mf2+jzxlP
do/ytf45o9KlGFtPJphxuTzB1pMJYfQ4XsXP+ueMT/1f8bP+OWPt5Dl+1j9n
hMUl+Fn/nLH0WiV/658z3h4Z5W/9c7n+tRn+1j9n1Bl10N/654w3Esv9rX8u
92dDywDrnzMSdk0IsP45Y0rBDwHWP2e0y88LsP45Y1zu01Wtf86od2BIVeuf
M668aOoLGX3OcELPVbX+OePXn70CrX/OWPadyX80+pzhGzox0PrnjJsx3wZa
/5zx2ITLgdY/Z5zrH+HyzxmJ27q4/HPGExOnuvxzxtF7W13+OeNWwhWXf87o
+nn1YOufy/1s1iXY+ufy9/unBFv/nPHuks3B1j9nNHjb1K80+pxRu4m/J3/A
6HPG3sQXQ6x/zljPI0Osf874qubiEOufMzrdPRRi/XPG7tK8EOufM641Dwu1
/rl8flb7UOufM+p3fMczPuDR54xdbZaEWv+c8XzCvlDrn8t6+zMj1PrnjLtV
/MKsf86YENg4zPrnjJ9r9g6z/jnjzRSTz2j0uazXYUvDrH/OKOrxY5j1zxlb
fS6HWf+ccXrpozDrn8vnza4dbv1zuf7dFuHWP2d4zekdbv1zRvn4SeHWP2e0
Kjb12Yw+ZywJjw+3/jmj+Y4L4dY/ZzwIyA23/jljxhRTn83oc8ZLPz3lqg/H
2PTyq676cIwdO4dGWP+csTjV5D8afc64P2uGq/8548aZZa7+5wwK2OPqfy7z
O2/6vRp9zjg+44qr/znjvbJCV/9ziWd7ylz9zxlRc4Jc/c8ZC0c3cPU/Zyyv
H+Xqfy7x7uNurv7njIz47q7+5xJvpvV39T+X57H/XVf/c1lvbea4+p8zgkZ/
4ep/zjicsdQzNvqcUTfEjI0+l/jhZepvGn3O+Ouhyd8y+lziU01Tj9Poc0bT
Rr96xkafM34YkeAZG33OKMuM94yNPme0GHHCMzb6nJE/zeSTGX3OGPggyzM2
+lzuh68ZG33O2N/D5Hsafc7odyrRMzb6nDG15SXP2OhzxqXvTL1Qo88Zr97O
9oyNPmd8V5jqGRt9Lvsp7zfP2Ohzxm9jzHyNPmcM//BXmw835V9e/mbz4aYy
Bg84ZfPhpjHattxn8+Gmy/dbut7mw30k8fWxVTYfLprxd0yczYebIbxtvsbm
w81kjFgSa/PhZjHmrfg/mw8XwxhSOLCa8ny2xNdbJv/W6HPGmSO9qynP5wrv
cnpUU57Pk+d51PQ/Nvpc4mV0TVvv9RPGhuR/bD7cfMaad0psPtynjDGfFEco
zxcwmoSafDyjzyW+1joXoTxfyHhq0fYI5fkixqqXV0Qoz2MZK+Z+HKE8X8wo
bmr6KRt9zshcNSZCeb6E8d80k/9s9LmcT/ybRSjPlzIaFdSIUJ4vYyyY9U+4
8ny58LRfdrjyfAXjYcWJcOX5l4xT8ZvClecrGdtOzQtXnq+S9dJ8bLjyPI6R
1rV7uPJ8tezf6o3CledrGCXpFWHK86/k+pvPhCnPv5b912N1mPJ8LeObjdFh
yvN1jBcD3nPltzOS+g1y5bcznvukqSu/nVHgXRSqPN/IGD1xS6jyfBPjf18z
/ZuNPpfzydbxocrzzYwttcaGKs+/Y6TH9AxVnn/P2Ff0ZKjyfAvjTtucEOX5
D8K/q3tClOfbGJ9viA1Rnm9nfPTBhBDl+Q5GZEHvEOX5TsaPQ5tZnu+S88u1
6pbnuxl7epUFK8/3MNaVnA1Wnu+V+JeyJFh5/iOj6vkewcrzfYx7mcHByvOf
GMF5pl6k0eeM/zSIC1Ke72dU7B0WpDw/wOgV0zBIeX6QceTs/UDl+SHGsIeJ
gcrzw8KLcWsDlefxjOzBLwQqz48wuN68qsrzo8KvwLIA5fkvwoeApADleYJ8
PiKqKs+PMXpubVVVeX5c5ntmV4Dy/IScrxps81een2Q87dxx1W+X81iHclf9
dsbJ1h/7K89PM57pkuKq3y78WdXTVb+dsflgDz/l+W9ynqj9g6/y/BxjNh/1
VZ6fl3ie29VPef677IcTM/yU54kyv3umX7TR54xXul/xUZ7/yYg93ddHeX5B
+D95so/y/KLw51KZj/L8kpwfgsJ8ledJwvP+o3yU58kSXxtGeyvPUxgD1vl4
K89T5Xzi38RbeX6Z0bnnam/leZrsxxRTv9/oc8b8Wve9lOcZcn5Oj/JSnmcy
xj+eU0V5nsXosOOBfV/tCiN6bmsv5flViV++bN9Xy2YMPfh9FeX5NRmfblRF
eZ7DmBx0rbLyPFd4djSxsvI8T+JV9K+Vlef5jIntl1ZWnhcwfv+sc2XleaGs
h3jfysrz63L+7f1LJeX5DYkXkR9WUp4XMbrtalFJeX6T8YHfzQqrz+X5+a+v
sPpc9Mguo7+NPhd+xtRy6XP5+5PnH1l9LnpuwIJHVp9LvGvT6ZHV54wL6SWe
3weMPpf9Umu7Z2z0ufClzyDP2Ohz4UlUoGds9LnEhxtnPb9PGH3OSN0/0TM2
+lziU2pdz9joc3neDcs8v38YfS686HPAMzb6XJ7/iHc9Y6PPGXH1yDP+f3My
IWM=
          "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1: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
Kj1a5kscedGH68Zl7J9F3m24f26UedrhQV70wuiovXvFyYt+eClzU7saedGW
tq9idc1reN7tuD87b3c0NCEv+p/miaHLl5EXPfdN8GVvO/LuwPrx01blGivy
otsvWjcOrF8HveiMm0+erLUhLzo589L6nlHk3ckyZ3/87W2xpvmiI24Y7zhi
TvNFt25y2xw2irzox97lSYFK5N2F9X3MbvUNDuRFHyg/771jNHnRYwIUD7yw
Ji/awcC78OhYmu9unA/ZXTnjDcmLTti+vCJMnbzotU/a0rUVyLuHZbz7H10R
GkledHPTzdaNhuRFHy1wfq0gS160xkb1VtacvHtZhrOwpUNBibzogBvO7hv4
XrRtVqb3Vb4XfWj6CIFER/Luw/mt/b23wpq8aBGbebvXWJMXbabeu894FHnR
pe/WO4Z6kHc/1nu/2GUSbuRFyy+ceWSnPXnRPeOzP5ZbkvcA1m+rXRMmOJMX
ndki+u6GHnnRN+eqve3mzxft9Z/ACiN38h7EevjCyuFSI8mLLmg/2BnvQl70
moV5Gyc5kxd9+pSsn58zeQ9h/XvXPvacPXnRG19MO8S1JC96ZN0uwQ8W5EUH
tfWHvjcl72GWSds8uabQhrzoU2Je3S5y5EUfnHlhbcxwLs+bhZ9nN0y1T5S8
6CE+yfGc6BqeF736sb5IrR150U15XQ+vWpP3CNbnhx+7bbAhL9prqadfeXIN
z4tePadI6vr9Gp4X3bj293zPcPIeZZljdR4WkuHkRR+1OfCkMpS86Ocy5SFL
w8iLbpCS8bMNJW82y2xp2dk5fgp50X7lz18khpIXrZrQdXt+MM33GO4/T+IV
LSaTF93/vPPeuik0X7RbbXpE02Tyom8Z2riYTyHvcZapeRwjIhdEXvTjBZmK
sZNpvmh9w+AdikPIi76hct35mjl5T2D9H3ZfpyeYvOjNTTO6OB+reV702KW2
+1xMyIv28+ak2BuT9yTm+W1FnL4pedE7cnqLF5mRF61cPcrqmTV5c1gmMeG4
SqEtedHy3S7i723Ji/47Le3oCf7xjK5fIteab0/eU3j9k42159iTF73+VK4B
q0dedMUSjzW3deh4RpfIOLSXG5M3l2Vk/z0frapNXvTDc/P86gxpvujYDx1z
ZhiTF/2o73VOtj55T7PMdC+X9gP86xV6T9UKy83a5EWrR59tfK9M3jMsU5y3
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
WfW0fxF9paTFdKoEedFGs26ayyiT9xV+XpX9ti0y5EXrHL1uOKSL9vOhS72C
Nkbz96ei3TMfFtoMpf18r/F80hMzZWXIi9atflu/hL9fE73s460lE4aSF13/
7UDqNWnyvmEZMR/xhYckyYuu69X4/lyKvOiklrUBHao0X7Rl6d3nX+Rovo1Y
b4958y9JleaLXrtxS0TfCPKih3F2bF8uR963WN90HDlupU1e9K95TYefS9B8
0TfCV1Utl6H5ooublJpGGZC3iWWCPq43TFMhL1rXJ0mzTom86LxK0YNV+uRF
B+cK3H61lrzvsB4oTDmUsp686Jx7quqfhpEXfdP2WOdt/v5U9KuzZmneuuRt
xvWx82jDNFPyon+OvCp3Upe8aKn/JHfVKpK3Bdenadwzj5XJi66X3pPz15i8
6GbtopVyWuRFi74687mH723F+7dNjaJyNuRFl9aOmjpMn7zoYZcWjf/N96Il
btTE6+mQtw3re0Hr27pq5G0b+H2+rUCMAXnRSnvSCwW1yIvWHvrO11iZvO+x
XtTnJggYkxe9IGzcVXEr8qK//ve24psFeT+wzDPb2Ekx6uRF90zqjutVJy96
vEWD6D/+/mP0pblrY0RUyfuRZTbYmZsdtiYvWrHv3JNr48mLXvTIOWSrP3nR
a0Ze27rPhLztLHN1Q2rIKgfyond2vum0tSIvetSvYT4D+yUHvWiB2UeLaq3I
24H1wLH15ULO5EUvfqDvs82SvOhRUrLdC7TJ+wmvv3/OEy898qJzzhwJPutI
XrRhM9sz0om86FrXXyoHHMn7Gfef2s9e4xzIi46Ze1srV4W86FsSvkXF/Pmi
Nz2zqhr4ffig9wvLRNrcejiw/3LQi15lc8lhkzF50UptCoUxNuRFf9TrcjKz
IG8ny8jYnvlx2pK86EuifZ+NbMmL3ngiKsnDkrxfcX/P37/qoT550ekzrzdX
mJEXLafvOaHcjLxorVPfNFlD8n7D49m1KJSZkBdtZZRtFWNJXrTShkXHr1uQ
F337Rv9CcQvyfsf7w3b53UctyItWzWzykrQkLzrRcKrJYnPyou8136y5aEne
HyzzKbBz3MD3D3rRfuquxrYW5EVLhB05N9eKvD/xfqd1ovlvc/KihdRHV4+3
Ii96khL7PMuCvOjyOeYBJpbk7WKZLq60zU5z8qLXX566fRvfi36afTHhBt+L
jmzpvp7P9/4a2K96SfWnFO0vR5fqXl/Za0X7rdG6Cocz2lzIi/Y12dAdaEre
3ywzY4jEx4F/fx70olPG7C1b70pe9HWLRwLP7cj7B9cjz9fev6zJi77+LVVe
bxR50U099u/PWZMXvVXbKtZTl7x/WcbTNjnyvB150YJGE1/s5O+nRz9cxgic
rKP1BjozInWC2mjydrPMkddLV6/Vp/miox3ryzdHkhetPE695Cnfi74+ZtW+
Q2bk7cH3FzW3nXYgLzp5zE7NK0bkRQtv79MQtCFvL9bLARnaA79vGvSinV48
NHVzIi86frFjeJQredGZObpCKU603+sfzudr483trGi/F3p6x6FHTva03wvd
ruAo0+xE+73QR/Wyj8zzoP1efSyjIRYQFuhC+73QASmNEpo6tN8Lre9QrmY/
hvZ7oc0C/qro8fen9uP6J3v0hJYW7fdCuymLiWzwov1e6OBCYYOsYNrvJcBh
7l+pWuOsSfv50Ge2eS29o03729CCr9OjFPn7y9FD4j8bhNiRV5DDzDB8VC4w
lrzoX9+iSh2dyIs+0RHknhRIXrRg31JuxxjyCnGYtTbRop39XJ4XbVem18h1
IC/6/p/KywPH26AX3ZQi/uW7G3mFOYyWZ6xXtC950Vudy5UHfj866EVv+vGE
maFLXhEOs1OmpSrZkrzofwFbDyywJy86Jm/caA978qK5nk1XfjiTdwiHKeo1
SBrYzzXoRTcWtE1u9yYv+m6Y+9EUhrzobpWxS9r4++lFOUzQ1z47ZSOaL/pB
m+6CiZbkRU8ovBS92oa86FmPJqmJOZJXjMPsGxveKTCOvOjd+nNe3OTv50Of
/6Ow23skecU5jIzVmyQVU/KiuwvU5Cc6kBftYOSxQtqFvOgfS3uCumNreN6h
HGZ1/bnZo1fS/nK0XGqIqZgLedHaVidnnnMhL5rTXbz2hCN5JTjMW9ENXZXu
5EWPKZIXO2VPXnSsX9Wwd/rkRU9fETdliS15JTnM7/pNJz6NJC+6vuNF12EH
8qJfyf/xFLUlrxSe37rXPkddyIuOqlpfeseMvGg9dyODWFPyovMvu693cKT5
SnMYW49CMRE9mi96q4XB235L8qJfitiMeOtGXnTfnZd/tUzJK8NhbHYGCdsa
khdt1aAhJs4/ntEi4tszNuuRFx19Ic54jAZ5ZXH+WC3srpCr4XnRqRe2X/n7
tZrnRSuZG7g225B3GF6PEweUXWzIi9ZwDHlkZE5e9KzC2aEptuRFX65zdeyw
Ia8cnr/TJ/dlTuRF/wsasZgzkrzo7DkZ1gO/Xxz0otNz8s5L2ZN3OJ5PeJnd
V2fyotnx6luk+MczekPTrneF/Pmip+5ZWSY7krwj8Pr/iLnS6ELzRd+P/515
34jmix6ltq12vw555TnM1YlXzkTxvejyWeNzZvH346LDXILnfbQgL/pi8JQH
Rxy4PK8C5qP84suzEC7Pi+6RkCwp0CEv+viEnyPc9cmLVnvVoP5Cg7yKHMZS
RvD5fl3yoq9u6CkS5F+f0T9092uM0CQv2mDO+x8XtcirxGEiI5SU/tMkLzpa
6I2ruw550dcdbGPM+fvplTnMu1nJxc265EW7R73aNvDv64Ne9CdzaRN5Q/Ki
HeY9io43pfmqcJgRQXrHo7VovugP9r+tp1hzeV70wpZ1m+/U1/C86J1vF2T/
liSvKoeZa3KtMkaKvOg67d1XmqXJiz4SO/W4jiR50ZrTFk+QkiCvGoeZFyFo
mSFBXnTMcettKyXJi47NDD5zU5K86hxG4cfnkwYy5EWva3l13UuCvGgtzsHc
+xLkRY+7YTjplwR5NThMRGLuQUtp8qI/mYh7lkrRfNF+Igm9myVovujaX8I7
avheTQ5zsnrHOFkJ8qIl2ov+3BtKXvSXcwevufO96FlLh/9TECWvFofpF0up
kBYiL1pcNiU8eQh50RsMFpvuFiOvNodJFPlYsFGcvGhL6/44i99cnhe9crxi
8vseLs+LFhA9NNJbirw6HCZ+Vuvea+LkRY+OCrSXliYvetRPl6jD0uRFpy3d
f2ehMnl1cX50yZ22VCcvenb93WfjlciLbj2Sf8xDnLzo708yLtrJkFePw2Tc
FrQaeD836EWfCRC5O1uFvOhpw4McdvC9+jjf3++TUhhCXvSJSL+d2cq03wv9
UyBy9BoV2u+Ftj5nuzNXnvZ7GeD+MMxjdtcw2u+FTgpwjEuRpv1eaJfd+X9Z
MdrvhU73EzgiOYT2exnifON+mW47nPZ7oc/evXPtqSLt90JvPu0snTqE9nsZ
cZiSKwKmXXj9B/d7oZ+n2exPkKH9behDHkzdTkXa34Yu/a508oMA7W8zxv0p
VED0gSTtb0PfzV1SKTacvOgj608vMJIgL7pvXIOvzXDymnCY/yyd3eX5XrTD
rvE1XHnyoidO3CFkrkhedFmReP3A/Aa9phwm+VCQRK8sedGH694r35EmLzqn
p8exRJG8ZhxmpvTnNfEKtL8N7f12qWSzHHnRSa1TEwUkyYvedynz0DcZ8ppz
mMkba/JnaZIXHZ96pW67AnnRt4qzbLP480X3uGxbrWxMXgsOo++/2Vmdvz8V
LSqY+UBAmbxolefj+3QlyIvOdhuy0UqavJYc5tS4LKcwDfKirVSGPe3g719E
e5yTGy3L389nxWFel96Vvs73ood5PJ29UoW8aMNsV+2B328PetGuuelvvowg
rzWH8e3k/nMRJy86p0UjdLIUedHB8wS61siTF52V8Wz9K2Xy2nCYbXVlNVpK
5EU/mCJkoKlPXvSrwoDkhRrkRV/Xc4sIlSWvLda3eZEywZLkRWfNu6IRpUJe
9L3vopOeK5PXDutt94QLsXLkRacERJ1eq0FetIrp8kuT5MiLDg8MsRn4fdyg
1x7Hm1FwQZk+edHNK7fJl0mSF+11cNfeddLkRW+RPTQ9jr//2IHD7LgeuNJX
nbzo7tOe004bkBe9p6xMSU2HvOh9CePWfuLP1xH3U8mzCeNVyYv2cp0f36pD
XvSJTxv98vifHxiJ13+p4jaOMnnRbl2r//RIkReduPH6hGWq5EUXW/u7KfO9
Tpj39msHt2qRF73eQGLGaAPyovc07dl+WIO86Lsvf1QtVCLvKFz/f9341q9B
XvSsh4HeMVrkRfdkKQmt4c8XfWHPyLRcNfI6c5ihr6++SlIhL7o9b8Y2af58
0ZFnffPj+fN1wf0t/Xz6wO9rBr1owS1Wtvv55y+6pdLSeak6edFtmeGcaj3y
uuL+lzUv002DvOiCZp+4SA3yon00zrEv+fuP0Tt7bt7t0CevG4c5OmHO1tWa
5EU/WzrlXfEk8qId8z9zy/zIi+a+a1j3Xpu8oznM0v6Ley5qkxcdr+F9Okub
vOjiD+UuwjrkdecwJmvTx07hf34ArRyc5riAf/6i13yYN7FAmbzoT+elx7To
kpfBvOaZnqrQJS+6cOV/0Rm65EVf9lkvbM7//AC688uCnbcMyeuB9c4aF8sU
PfKiG2uq8h/qkhd9JEIhzVKXvOgrikLVXzXJ64n7u+0DrTpN8qJnnvGpX6NO
XnT/jEdfx+uS1wvvf7/siDfle9GX5ms7Z2iRFy29zfNkpA550amX74Xu1Cfv
GFyf+o4d6tIjL9qeWd+jxT+e0UFV7ds09MmLrn2mvsmA7/XmMEJukiMnGZN3
oKMrlTz4nw9BH7tz7OhQQ/Kih8yeVXrRmLxjsR55U68cYUJetOjmtyvzjcmL
3nG5NsfMlLzjcH30ejOqnf95CbTq6isKnubkRVusfvC4z5S8aNexR9Vczcg7
HuuPDqUvn/j7y9HRK+W1UszJi87SWTTbw5y86NmKYu16ZuT1wXopRPDjUf7n
Q9DNnaZrk83Ii578la1NNiEv+vvItY1pJuSdgPe7gQ/+6+V70U4lki1WRuRF
x97b+eoX//MwvjgfRYqLb/O96OvGS4VS9MmLLj47RO0P/36EHnswUNyBP9+J
HObFUZfgZfzjGX2795zAXv7nQ9BF2hUPtz+p4XnRNXHWc1e11PD2e/nh/W/B
l+pEfdrvhbYy99ffoUX7vdBePwoub+bv90KvVtprKq5L+7388f4v/ZZaAn9/
G/rr/eVPxxjSfi+0mNefTyrGtN9rEtZ3G769PKVP+9vQl7YkdCxUp/186ImP
/FZt0qP9XuhsJyVhVz3a7xXAYR75StxZrEP729CrFDutxY1ofxs6Jann4htt
2t+Gti74arpZn/a3BXIY+b1Oh7qMyYs2enDj7gM98qKdarsMvmuTF50mU/1q
iAF5gziM3FOjRxf1yItOFt03/40qedGmmZrDrmiRdzKOt2NLotcYkhd9p0Lo
w3r+/mP0ylaHgFwt8qKb2Eh/EV3yBqP/Ve6fx99Pjz5cXeX+1Zi86OqHTaN/
apIX/eFz6moRdfKGcJhlF/8sfKNMXnTGK+vIahXyooef2txprkNe9Crnvpyx
muSdAn+s7ol4bfKi75aabKzTJS96Z55G+0Z18oZivfHdvXyHNnnRHiGSeYt0
yItWKHlaIKVLXrT4k8b2u3xvGId56fTVbpcxedFPbNJ+JvG96N4V+w5m6pIX
vSVDTt5YnrzhOB9eVZYflCEvetSECkt/RfKile6YvB24vw160fmNx1b3/qH9
9BF4f6DgtuieHJfnRde4zvmdx9+fivbMqXS4yj+ep2L97bflvow5edH7c3qy
5piQF91ztz15qwJ50XZTn/enqZM3EtenEzPdbSzIi9a5fJyt1yEvunta09Im
ffKiNxzN4u6yJy+L9fmYR3ta+Ps10afXJIT0aZAX7RhhJvhbk7zolBuCFdO1
ab4cnA8vZbwWG9N80W4vgsr0+Z+XQKt2l5kO7Nce9E7jMFM7c3Qcu2t4XvTo
Pcv+c+mg/dbopwX/bQrhH8/oGf59sYs0yBuFeZyYPrWRvz8VfWfD2X5ZLfKi
rXeXmXznH8/oE+9XPzNVJW801oer9oUO1yUvOr5v1LQCffKi61InGYvzPy+B
Lq/h+NrokTcG57fb4pnxquRFp9keDLIfTl70+JcxR+YpkTcW1//b/8y2K9F8
0bdFxQ1DR9B80e5mRSZT5MmLTvr79nOUAnmn4/qSPdnxoxx50dI+T0tfKJEX
fW/z1X0NiuRFi3RFrAgbRt443L9DppntHk5e9O/ps7S4CuRFp17yTrutRF50
TOqtK/fVyDsD8yiad0lZmbxozonJkxJUyIu+kh/6oVCFvPEc5pzXEtk98uRF
3/oezdQOI2/8wL8H/Dz6kf/5H7T3+7ln7qqRNwH3A+dnqqcUyIuOOJx26IIM
edF/jt3OXKdAXvTfvelNv9O4PO9MDpMwcZnOLr4XvfYlY7WS/3kJdIPeZA/p
1hqeF80xapRsf0bn7ywOs91LrTJVjLzob9FDPS6IkBftn3r6VXw/fX5gNuYl
r+a2TZC86PZpPqNuCpAX/aas179JnLxopfOtp4oEyTuHw1R2nG9I76fP/6Df
Je+N9/1Hn/9BGyVpG3j1cHle9CHjUtkRQjTfubh+ah9OGSlAXvQtzz8vNEXJ
i5ao6l8/8P9nG/Si0ydVa1wWofkmYj1mn5rhLkxe9K08ieBGQfKiH01c3m4v
TPOdh/tB7tegcgHyoiO31wnnCJEX/X6qbsdfIfKidaaFFbcIk3c+1ivLr5mr
iNB80V9bZu49J0LzRa+VTPRbIkLznT+w/q82LBAh7wIO8/C4+dwZIuRF5yzR
nO0rQl708GD/s6oi5EUrS43KN+J7k/D+faNWQLsIedFnFtj4iwwhL/rfBO79
ClHyJuP9fc699F4R8qJ3/xKyOy9MXnTiX/NWBb4XbW6qOUUa8xz0LsT9R3+3
z05h8qJ/LatLWyREXrRB3zffgdfjf1PgM/o=
          "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}}, {AxesLabel -> {
       FormBox["\"tempo(s)\"", TraditionalForm], 
       FormBox["\"Energia mec\[AHat]nica (J)\"", TraditionalForm]}, PlotRange -> 
     All, ImageSize -> Large, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 7.9990000000000006`}, {-0.5051920362685766, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 7.9990000000000006`}, {-0.5051920362685766, 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"te\[OAcute]rico\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial"], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial"], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"experimental\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], FontFamily -> "Arial", 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",ExpressionU\
UID->"386c4769-3d9f-4181-9997-1243f8c6d092"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tend\[EHat]ncia global da energia mec\[AHat]nica", "Section",
 CellChangeTimes->{{3.7022238782017436`*^9, 
  3.702223884191842*^9}},ExpressionUUID->"7827c5f8-c311-450d-b365-\
eea6cf732259"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "vxExp", ",", "vyExp", ",", "energiaExp", ",", "energiaMedia", ",", 
     "tomada", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"tomada", "=", "1"}], ",", " ", 
      RowBox[{"tomada", "\[LessEqual]", " ", 
       RowBox[{"QuantasTomadas", "[", "]"}]}], ",", 
      RowBox[{"tomada", "=", 
       RowBox[{"tomada", "+", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vxExp", " ", "=", " ", 
        RowBox[{"DerivadaDiscreta", "[", 
         RowBox[{"Listar", "[", 
          RowBox[{"tomada", ",", "\"\<t\>\"", ",", "\"\<x\>\""}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vyExp", " ", "=", " ", 
        RowBox[{"DerivadaDiscreta", "[", 
         RowBox[{"Listar", "[", 
          RowBox[{"tomada", ",", " ", "\"\<t\>\"", ",", " ", "\"\<y\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"energiaExp", "[", "tomada", "]"}], "=", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Pegar", "[", 
                   RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                   "]"}], "*", 
                  SuperscriptBox[
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], 
              ",", "vxExp"}], "]"}], "+", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Pegar", "[", 
                   RowBox[{"tomada", ",", " ", "\"\<massa oscilante\>\""}], 
                   "]"}], "*", 
                  SuperscriptBox[
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "2"]}]}], "}"}], "&"}], 
              ",", "vyExp"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"Rest", "[", 
          RowBox[{"Most", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"Pegar", "[", 
                  RowBox[{"tomada", ",", "\"\<massa oscilante\>\""}], "]"}], 
                 "*", "g", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
             RowBox[{"Listar", "[", 
              RowBox[{"tomada", ",", "\"\<t\>\"", ",", "\"\<y\>\""}], "]"}]}],
             "]"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"energiaMedia", "[", "tomada", "]"}], "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", " ", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"energiaExp", "[", "tomada", "]"}], "]"}]}], ",", 
         RowBox[{"i", "=", 
          RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"energiaMedia", "[", "tomada", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"energiaExp", "[", "tomada", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Mean", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{"energiaExp", "[", "tomada", "]"}], ",", "i"}], 
                 "]"}]}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"energiaMedia", "[", "#", "]"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<tempo (s)\>\"", ",", " ", 
            "\"\<Energia m\[EAcute]dia (J)\>\""}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Range", "@", 
       RowBox[{"QuantasTomadas", "[", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->\
"8e63f2d1-808f-4342-9048-6c4e7772604d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{{}, {
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         StyleBox[PointBox[CompressedData["
1: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
pfuNgeR490y6IdL9xmAWdiTHfA5wpPWXBePc13tmO9L6y0LD8rEh2Y60/rIQ
3NCroMSR1l8W4vsdfPXdkdZfFlzqJzlYO9H6S97/5Lpjnk60/rJwv0eyWZgT
rb8sfDufO2MNiZ1a1kJmNJkPnaorz5DY9tvTEQUTWThmneH9nsR9T9ovejuZ
BfsH21Nakv3YkjlDMs2mssCHM0pfEs8f3LWAn86CUW+p8TASa5/eJ5aFLJea
Tkkk/lCRbzZ1FgstDDOyN5C46vx+fv0cFk74NDy9j8QO5Okn48nxHjh7qJTE
If7qqWXzyHpbumaYHtk/9lI2X/9nPvEd9XznQGLt0+0XsdC9oXzel8SnD64u
g0QWGodHPwkj8fGkmX9GLGWhbqTYaD6J32mfvpyFnJ/64/e6oDeJhfDa2JEX
XNC7igULmd/22AW9ySzsqdvWtMYFvSksfJnrcMDcFb3rWfDdtP2tqyt6N5L5
urvL6Dau6N3Mwo92mie9XNG7lcy/p6qpY1zRu42FZWcTT8e7ojeNBds1kyet
dUXvDha2N1o4INsVvbvI85vuu3zeFb2ZLFyZO+HtXVf07iXrtWXXo19d0buP
hc1uVi2bKdCbzcLYhmWXPBToPciC49K1NgEK9B5mwXLVdPdxCvQeZaG5g+eO
pQr0HmfBPPeF424Fek+yMO39w5o8BXpzWch4a9i5QoHeM8RvejbFxA2951j4
rPpwQOGG3vMsrH4SbOrhht6L5P3vPuo82A29l1nIHZ8Xl+KG3qsslDU9MOWa
G3oLWAjs6WF9xw29N1h45bNmWoUbegtZeDZcteKHG3pvsbC/wVnzBkr03mHh
rJVsb6pE730WbryalaFQoreEBbvhW9y0n8903lIWXFdlh2uvj+q8ZSx42h+o
N1qJ3scsbPLzKF2qRG85C+0MijqvV6L3GQvzLww7uEOJ3goyvlZJmgNK9L5i
YeXaHi3zleh9w4LypfOCa0r0VpF80G/VQu3jOu9bFsaYhA2/p0Tvexaeftod
/1GJ3o8snPl16oWRCr2fSX40iZ5up0LvNxbWNWmmcFeht4aFQSNSqwNV6P3B
QlDavPAgFXp/kfwftfdKgAq9f1jY+950c4wKvXUs+HcSb8Sp0KvHwc9G+S2W
qdBbnwND4XTuPhV69Tlo9kPlcVGFXgMO5hzzHvhChV4jDqb8rC/quaPXhINO
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
P3NFguT3/KssN/RelcBMMvbJcEPvNbIfzVkfq/1+9L/+Wgnc/BM/r6He66T+
rXo6exn13iDjnXv0TwL13pRgbM/Wd2Opt1CCTN8fGyZRb5EEGd5bPo2h3ttk
P9HoW1A49d6RoKyNx5QB1HtXgmeujS4GUe89ku/+XB7QhXrvS6Cx+tS+HfUW
k/zl06tApN4Ssp4idymU1PtAgizBmnGg3lJSPxbaz7Gg3ofE27zVZRPqLZPg
bNFu0/rU+0iCY/sjq2sUtN+X1I/ACyYfFOh9QuajbKF5rkBvuQQtXP2jSunv
f56R+TaG/XtLgd7nJF+/bdXzkgK9FRI0GpsRflxB+4MlqHibYrlPgd6XxLMi
jEtXoPeVBA9uV03aQH8v9Jrsx5Ofb1qpQO8bCbbHdirQ3v9I560k+bRF75xY
+vulKrI/t3m1bqwCvdUSDP39vFTbn6nzvpVg154ZP/pS7ztS/1KSPQOp9z3Z
L5qFdPGn3g9kvq4zvepHvZ8kSDAOv9KZej+Tz2cNY8d2pt4vZH9pqWjYiXq/
kvF5+7a1P/V+I+vxtceoUdT7nZwfo1UwiXprJJj0wqj1AuqtJfu3PZ6LdlPv
D1J/nx0LyqDenxL06x3b9hT1/iLH2/yjwUXq/U3m47ldgwuo9w+Zv9u7NSug
3r9kvZheDr1HvXUS3HodOfAp9erJMCh/xo1v1FtPBpewjJst6XyuL8NL+78W
vel8biDDi4yfysl0PjeUYUVMWcOpdD7ry3DxvSIkgc7nRjI0vWF+8CGdzwYy
JC3vuHMdnc+GMlzuUBycSr1GJJ6R+CKdeo1liHd9wh6mXhMZVt4PLrtIvaYy
5BrnfiumXjPy/ldiUtV0/ZrL8NvCL7E/Xb9NiKd33ZQv1NtUhlObil+V0/Ft
JoMifp/jHzq+zWUIiz3YvxH1tpAhMyR6VkPqtZBBfhsqWFNvSxnO/h10SqJe
SxmW28bNCaBeKxkebih5Op6uX2sZLtnM0Vyh67eVDEOHRfdzpvXIRob3D0fu
kWg9spVhVBdmR1taj+zI8TRpOdpHif1tDjK8Kqh3TKXE/jZHcj7E34Xa7+N1
/W1OMoxrknKhhPbjOstww/jrz9O0H9dFho3Ha8fvoP24rjL8dP8+cAPtx1XI
UDzaeLu2P0HX3+Ymg93Guk15tP9YSfwxTx2u0/5jlQz2M5N+afsFdP1t7jJ0
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
bdb92qBXzwOuD3Gbt5LE/wNUwl0L
           "]],
          FontFamily->"Arial"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"tempo (s)\"", TraditionalForm], 
      FormBox["\"Energia m\[EAcute]dia (J)\"", TraditionalForm]},
    AxesOrigin->{12.819095048750002`, -0.2345847983604081},
    BaseStyle->{FontFamily -> "Arial"},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{12.92958333, 
     20.00083333}, {-0.236162006924799, -0.234659903530141}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         StyleBox[PointBox[CompressedData["
1:eJw83Xdcju/3AHCys4WskL2S7Od+7nHMjJb2Xk9TOw0V2ZQ9skOEhES2qBBZ
ZSU7fAqZyd5+p37nfP3zeZ3Xs+73dZ3rXNf96fSk7xli6a1Vq1atEQ1r1ar+
b0fPLi1bTlFB1/LRi358Ksxtd1OnWzdLFfw7vMln/bfC3CHV/6xU4HY/s6jg
a2Gu2VrLsWOtVZD19tjI3j8KcyfXNbaxsVGB5uiTSP/fhbk+1f9sVTD52Lm6
wp/C3DmXFkRH26ngfXfT+fX+FebOGhGbkGCvgsstunm2qlWUu2kj/nNQwVqj
0vJgfPzorxN79zqqIODA6zYX8PGsqRnZ2U4qeDE51acK49xbzh0rnFXgt0m+
vUSrKPf0qCkDfriooFerIOs9dYty76aGStpuKoha5RBnVb8o92O9lWYd3fH6
buuajWxQlFsZMd9tgIcK5BTB90LDolzt6hd4qqDZ5oKEGO2i3J6q83PMNCr4
5tskex3G3fYcX+3mpYIthm+7GDUuypWqX+Ctgtj8iuUrmxTl2gd+PTLHRwVb
X4+32Iux7cPXF1b7quC1zY6kYU2LcsOqX+Cngknd9FX3MF66rW/FEX8VhDrs
7KPdvCg3sVnnHxemqqB7WYbVKYx34uXfDcDxqdwWNL4FeQNVML7jivLy5uQN
UsHK1187bmxJ3hAVjJz29OXo1uQNVUHHy75Dp7Yhb5gK7j7W/HjdlrzhKhi1
LG+krEveaSrIfDOt+1Zd8kaowOf4IdBrT95I9CRlPq3TnrxRKjCZZN1fT5e8
0SoYPv/OtgbtyDtdBXWCv1id6UDeGBWc0zoc7NuJvLEq+OJ/YsrtTuSNw+fv
da4Y24m8M1TQqq5J4gk98s5UwZjxSxcu7kLeWSp44NDNcFQX8s5WgdmSQRvP
diHvHBXk6qWsPdqFvHNV8HFUoLO+PnnnqaCW0Mh1cjfyzlfB5oUtT77vTt4F
Kjizd0UvVU/yLlTB9dHzT7r3IO8inO+7Bc2kXuRNUMHCqCtvu/Umb6IKfv5N
6qfTh7yL8fpnXCv41oe8S1Sw52Rhr579yLtUBUdtt+lZ9yfvMhW4TE6cZz6A
vCtU8Ohm/r5sA/KuVIFrybOrCweSd5UKpp5qkt1oIHlXq2DDMJvErwPJu0YF
q3f2u3nJkLxJKki96dZr4CDyrlVB5xvLIucOIu86FZhfOdTcZTB516Mvv4lL
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
lHXDOPIGqmFr7sNVHePIG4T12H/N94Fx5A1WQ4DOMasxceQNUcPer5e+jY4j
b6ga1s2A3q5x5A3D9fzTPjI8jrzhmJ8ORg8848g7TQ3NRpQPnRZH3gg15Ps/
bLcsjryROF+DUuftiCNvlBpa5vezPRBH3mg1aIJi7ffHkXc6+rUL3TPjyBur
hm4Z7dqejSNvnBqKGiV+vcveGWr46zXC6w17Z2K9aVIv7gV743E9vvzqUcbe
WZjPbsNnvmPvbDUUdEtdVMHeOWpYZOsQ8p69c9XQOi8n/jt75+HnV+mP/8Te
+WpYv+vTJq0Z5F2A43G697jWM8i7UA0fptxZ1WIGeRdhvXllMrTZDPIm4Hy9
iezXZQZ5F+P83j+cPG4GeZeoIW3LuIwpM8i7VA1tzt5/M2kGeZep4Vyi2wvv
GeRdroaEyA2jE2eQd4UatDacnzxnBnlXqiFRq2Ni1AzyrsL9oyhg59IZ5F2N
9e3DsdCEGeRdg+tvk/amhTPIm4TnD/t297ewd60a+kyan7qZvevUMP/QvW2Z
7F2P+1dbB9eL7N2A16MTl3CIvZuwPk/40COZvZvVcEJ7w4Ot7E3G/d3194s0
9m5Rg/uYc77p7N2qhi9p2/5LZe82XL/a3gcPsDdFDe9Kvt/LY+92NSws+D3q
Knt3YL7tzyi6zN5UNcy5rds3n7071ZBR+nhAMXt3YX1N89p8mr271TDP3zlu
E3vTcL861mvTdvbuwXy//K77dvbuVcPF2VCcyd59anjW2Kn9Bfbux/yZPtT1
FHsz1JDU4PGYLPYewPXYYPHL7ezNxPXaTfdZKnsPYr4d3QA57D2khmH13//M
ZG8WXu+u5k03s/ewGk62TeiUxN4jaogMmOi+hL1H1TC6b/acBPYew/Ht1/7g
cvYeV8OmjLHjFrH3BO6v3ee0i2TvKTV03Dr0Wix7s9UwySdr2lz2nlaDavRh
80D2nlHDRKdzpQ7szcHz5u/a6wzYm4vnuTb/jf/H6zdPDUP2R7t94fV7Fter
YYXNS16/5zC//YTlX3n9nsf9YGA9/Xu8fvMxf8sXW5zkenVBDX6js8ff4np1
UQ1WKRvOn+Z6VaAGr3udO+zkenUJz6stYnrlcL26ooYpH//128v16iqe7+a2
eXkkmrzX1LDy78LnCdHkLVSDw8Gm2j14/y3C/WR4o/JmvP9eV8NmTdzd+rz/
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
IgF0eTljlTd5LSUQV/wYGetNXisJCn2/RHh6k9cG68eT4Y0n8++H2EpQpA6b
NoR/P8ROghu+PX534t8PsZdgknbesXre5HWQYERC8x7vvMjrKMHW9Y+eF3uR
10mC/nuaXT/tRV5nXO9fO/vv9iKviwTu99dUrfIir6sExSM+LY3zIq+bBAb+
x6K8vcjrLkGCQUCahRd5PSQ4sn5cXcmLvJ44frsWGvX2Iq8G87GoU4IO/z6M
twTXbrzW/ashr48E4Q/9NW805PXF/NauiinVkNcP11PKtUPXNOT1x/nSueSe
rSHvVKynB5P00zXkDZCgk8XqLas05A3E8X6Xs3OehrxBEszw2DgqUkPeYAla
Lz5u6q8hb4gE9T4sM3DXkDdUgiYnlvlbaMgbJkGbrp3aiRryhqM/e71BHw15
p0nwKuJk/W4a8kZK8Hbu18Nt2BuF8zcy9fYfT/JG4/sPbKz/0ZO80yUomber
42tP8sbger3+Dv7zJG+sBF2XXt71xJO8cbh+EnOke57knYH5+le3z21P8s7E
/BkVsa86rvHG43z+THEq8iTvLAm+J5vNvu5J3tkSjP0xouCSJ3nnYL3fEDfg
mCd556Jn9xb9TE/yzpMgVmiUftqTvAsk6Gyat/GGJ3kXSnA1OtbsNnsXSTBF
WrT4InsTJEg99KLkInsTJYjOGBZ/nb2LJWiXfDXnAXuXSLBwSP7Q5+xdKoFO
vFnsS/Yuk+BOleWL1+xdLsGg4yfbVbF3BV5fnXZJP9i7Eufb+M6nejy/qyS4
e33z71o8v6slaLrNwP8ze9dIENqj6eIv7F2L+8XSYdu/s3edBNMmayJfsXc9
jt/CnTFl7N2A+8nIEckv2btRAvs+Se9fs3cT1ntf3+0f2LsZ10/q5S0f2Jss
weCPw5Z/Yu8WCfr89giqYu9WrD9Pdme/ZO82CZyEZa1esDcF95cRlmnveX63
Yz22sJj7ked3hwT/9M0M37I3Fc879WZ3rGDvLgk0sdl1brJ3N54nVqQ0/d/8
puF550pit1fs3SPB+GXK5gr2puP7/zg2vYy9eyXosOxc+f+8+3D/Wbz2bkNe
v/slWJX+9WcbXr8ZEhyzuVKvC6/fAxKcaar/vhuv30wJGrxWWXfg9XsQvR9y
ynV5fg/heTK1sn5nnt8sCT7uXeSjy+v3sATddyy53obX71EJthf1HtGB1+8x
3P+/wetOXK+O4/50/NglA65XJyTY8lTjM4zr1UncHxcZDB7O9eoU7k8F/f4b
yvUqWwLPTg9+G7H3tAQFcfVuqth7Bs+rR/dVqdibg/VhQvP3A9mbi/mtjJk2
hL15eD4yHpY2lL1n8TwVs6iLiYb6vc7h+a6N6QprDfV75eN+oz/F1ExD/V4X
JHBt92KhvYb6vS5KYJm5Z6uNhvq9CiQ46b5JdtZQf9slCRYs79Sk+vcna/rb
LkvQKyzz01QN9bddwXo0vXW3EA31t13F/TDuhGm4hvrbrklwIdjjXqiG+tsK
Jah4k6rtp6H+tiIJGqcllFbfj9f0t12XoOcwox0aDfW33ZDgv6+Z06qvp6a/
7SauV891953Ye0uCgVtHmnqzt1iC3rp/Sqey9w56G68YFMTeEry/mCd18WPv
XTz/v5nV0om99/A8E7fxkyV77+N+tTpx2yT2PsD9qnthvfHsfShB3G57J2Dv
Iwni2xWfldj7GM9LOqlHh7K3VIIVTWy39mDvE9zfjOdk6LP3KZ7HrD9f7MTe
ZxKstC0f3J69/+F5/Nr0e7rsLZfAa5jBiebsfY7nxZ8tzjRh7wsJui2zKG3D
3pcSHHReH67L3goJZrX082zJ3ldYr2de7decva8lqKzl6duYvW8kcPAw69SY
vW8l0HJfaNGUve+wHqyb0KIJe9/j/d65h6u12VuJ9eBij58N2PtBgnNrHx2s
x94qCZ6O9X1Vh70fcfyTe56qzd7PuD61n17960neL3i+fplt+9uTvF8l0L6m
Mv7pSd5vmJ97Nh+sjmu833H/2P5f6+p6XuP9gfvdv5Gjq+t9jfcnztdNvSPV
9bbG+0uCWh4t1lbXrxrvb6z3t67/ra6vNd4/mI/OC1pX19Ma7188P1lXLKiu
hzXefzheF4fsLfckby0ZOjeZF/3Uk7y1ZdiuazXtsSd5tWRY5vz+z31P8taV
4Uy7spkl7K0nw4tWHQ7dYG99GQpndY++yt4GMixY7al3mb0NZfgg2Y3JZ28j
GZp47XU4w15tGQbrHuqQzd7GMtjnTzc6yd4mMjQY/Gt7FnubymAcZTQunb3N
ZPB9Mu7jDvY2l6H7/tPHt7K3hQxtcza33sbeljJ8jFwYvJW9rWQY/dbReSt7
W8sw6t7M/hvZ20YGVUnx7vXsbStDaeGLMRvYqyvDu9rZ+cvY206GVnsHp8xh
b3sZHjaPtI5nbwcZnD0/d57F3o4yhL9c6hrD3k4yfA14sGoae/VkGJi253Ag
ezvLMHJHMyNr9naRIaDXn3lj2NtVBpfL8+MN2KuP87k+ZWNH9naT4VVtIaAp
e3vIEPaocUFj9vbE+bzUbUkj9vaSoXGLjZd/e5C3twxBK+8e/OBB3j4y6Ca5
2Jd6kLevDAsPdh3x2IO8/WRo+QySyj3I21+G6d3r1zy/xjtAhhndHQ7e8SCv
gQwrW6Zn3fUg70AZ4vPOnbruQV5DGdYPGl100YO8g2TIMftRftmDvEaYL5Ef
L1Y/XuMdLMNWVaj1MQ/yDsV8nnGt7KAHeYfJ4DaspesJD/IOx88veVt6jL0j
MN/eVBVls3ekDFaLv9XOY69KhhPtOszPZq8gQ+Yag/cn2KuW4d8Vl2O57BVx
/jbrm1xgr4TXmzfm30X2yjKIXs1eFbJXkSFj3Pn7l9gLMtR6OiX8DHtH4Xz5
x0w/x97RmK+dk7sXsHesDNqeK8U89o7D9fHJePEx9o6XAQas+3qIvca4fjtt
6JXF3gkyvNHrGrmLvRNliP7T80AaeyfJ4J7SPGYfeyfLcA6GJ6Ww10SG00ke
WevZa4r588Tq32r2mslgsnZrv6XsNZeh3fWM+vPYayFD68jeG2exd4oMybcO
/otkr6UMd5rcOhLKXmsZKm20fkSy10aG16M6bY5jr60MuyNisuew104G2c3X
MJa99jLc/LlCy5e9DjJMycn1cmSvowwbyisf2rPXSYZBRRsCNOx1xvX8avIO
c/a6yDDi+aAmQ9jrKsPckl6xw9jrhvkdey/ciL3umA+33q/uw14PGQz250zs
yV5PGRzbapdVxzX9Xl4ynB3u0Lb6/Wv6vbxlaHQ2f7XgQf1ePjI0HxrSfhD3
e/nKcF1uMb0r93v5YT27E5rd0IP6vfxxveilGz9zp/62qZjfJp33XHKn/rYA
zO/ApOTz7tTfFijD0aL2Z664U39bkAxDtnrkVD9e098WLMOFpe6aNHfqbwuR
4feJR4lH3am/LRTH06X/zSx36m8Ll2H+yfClSe7U3zZNhojKTx0WuJI3QoZe
G1Z/euRI3kgZEv+OfnPTkbxReH3n5jRr60Te6Or3m62u40Te6TKsmul687sj
eWNkMPTUGvvJkbyxMuTFDJ3x3JG8cTh+IdM33XUk7wx8fpvVx7MdyTtTBqPZ
Z1ekOpI3Xoa6t3qO2+pI3lkypM2xMVztSN7ZMvxanz9+niN55+L1L5s0OsyR
vPNwvEYNGujjSN75Mvjs8Y51Zu8C9KXrLZzI3oUybAk8rDfckbyL8PoOOD0Y
6EjeBBkOX3+1vTd7E2XQqev9qSV7F+P17kjU+udA3iUybF54YHqlA3mXYj2J
Hd/lsQN5l2F+rz7d6KoDeZfL0Ens653nQN4V6DsTGnXQgbwrZfjz68e/XQ7k
XS3DvROlHlsdyLtGhuwLt3escSBvkgxdKiqbLHIg71rMz5TImOkO5F0nw9IH
Oi/8HMi7Ht8/JPi6kwN5N8iwom6beFMH8m6UoePW+CmSA3k3yfDzSZadIXs3
4348yGhdD/Ym435088DTNuzdgvV6vjK/AXu3yvB2Qg+LX/bk3SZDz1erbd7b
kzdFhiPdpz58ZE/eHVhfLpS8uW5P3lSsJ7dq2Zy3J+9OGepYeZ45Yk/eXTIk
BD0at9uevLuxft+ofLrenrxpMrQZ/2FFgj1598gwrUFOSKw9edPxPHAmeHOA
PXn3Yv2ZPOa8sz1598mgN9SumZk9effLkHvQa7JiT94MGZ5ue7pzkD15D+D+
M6ZXXX32ZuJ8rVSat2DvQRmaBjg/0WJvlgypfd/rfbUj72EZxibf0Sq3I+8R
HO8lpzcW25H3KPpmGo29YkfeYzJYRsb8PW1H3uMyfO+i6B6wI+8J3C9ybhts
tyPvSRnub/95IcmOvKdk0HfR7bPIjrzZMkinp8XE2ZH3tAxx0+L2hNmR94wM
z6Lv3vC3I2+ODCnNbuu62ZE3V4a1O+9cs7Yjb54MM019K8bbkfccnhdWvfWQ
2XtehvE7t6UNY28+7j/RB0MHsveCDK5nzwj92HtRhtntnD7qs7dAhnWKU6O2
7L2E59c5ScZN2HsZzyMlB2IasvcK1gP36/P+2ZL3Ku5fwzrafbQl7zWsn8Zz
wz/YkrcQ6/PHmV+qbMlbhPtr82le1Y/XeK/LoPU2Dar7pWq8N2R4MvPEqXJb
8t7C9XZomUd1XOO9jc8/7pb/ny15i2VY47Ss5Jktee/geUbpef2JLXlLZCju
G3/ksS1572K9y7jQ8aktee/J4GAu6lS/f433vgwnO3XpXP36Gu8D3O8zG/i8
Yu9DPA9lGHX+wt5HWB+yNhz5yN7HuH7Pu7T4zd5SPI+6REfX5fl9IsPn7t+V
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
boHXcSf+vmecn1mndtxy4u97VqDHPpNb9/n7cTPw+VeH3y7g78fNVGCdw6ug
LP5+3IMKaI2dUXCGvYdwPwztZVzI3izcz297JRew97AClcs0C06w94gCY9bm
9NzD3qM4nu3PjD/M3mMK6B5ubH6ZvccVmBD79fwl9p5QIECv6k0ee09i/Upz
75nH3lMKGI3c0Sefvdm4P/TLyjrP3tM437/z2p9g7xkFvl/s0vMYe3MVyNGy
e3aCvXkKLFmy0usQe88qcGXc/rJM9p5T4E/vgvUZ7D2vwNSujXpmsjcf66lW
nyY72XsBzyODnmhS2HtRgX51Vt3NYG+BAp+9LuWeZu8ljHMbzTzF3stYv08G
5Z5h7xWsT2k33lxg71WsP/IC6SB7r2G9W6038AB7CxUIzj++9ih7r+N5tGr4
ucPsvaHAAset646x96YCK0uDPY6y95YCl6Nszh9i7208L36N9T7G3mJcD19N
ajz//33PWD9ea5/Zzd4SrG+OkbG72XsX7ydmGFxLY+89PO9t2fppJ3vvY/0c
er3m9f//fc94nhxV/mgXex/iee7i9LG72ftIgXn3bzzdy97HuH46tEraz94n
CnQcWfEjjb1PFTi062ZOKnuf4eefO5+7j73/KdDGzfDnfvaWKZC9fNzQfewt
x/Nq+1arDrL3uQL+keGLstj7QgFXw6jaWex9ief7XrllWeytUKB//mT3DPa+
wvPIxvLf+9n7Gs8PjZe0OsDeN1g/E1rMz2DvWzzfbT65I4u97/B+anRa1XH2
VirwqU7bxcfZ+0GBnVW9jh5mb5UC+sVX/x1k70fM/8HJi/+Xz59w/XZzr5fB
3s8KRA1trPnf/H7B+ymX3IUZ7P2K9yP6M3P/l8/fFKj6t6ljJnu/4/jFHmqb
yd4fClho25w7wN6fCli1OdUpk72/FEhOOfZfJnt/K9AieV/iQfb+UcAp+KXT
Ifb+Q/+sYnX1ePzQmpDWtBZAD8ONc6vj6cI5w3UYaxe7Dq/21/x8pDaAQ2lv
hyMYr0l+BmkY1yk8p6rO95bFTpcNtQAuvdnbr3r8an5+gbHN5WGLquvDgOFx
D6AOgE7jhhuq431BXzwvY/wibnXXk07085S6AFF7Lz+ufv3F660jHmB80iv8
avXjYxus+O1ZD2B25cXm1eu75ucdGI9fo2lcHbv5H2gaUR/g2/U6YdVxaUqf
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
rq9WbK3mPPdWCHm6efQt9P8Bc32W7A==
           "]],
          FontFamily->"Arial"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"tempo (s)\"", TraditionalForm], 
      FormBox["\"Energia m\[EAcute]dia (J)\"", TraditionalForm]},
    AxesOrigin->{25.1797265659375, -0.23550154501617002`},
    BaseStyle->{FontFamily -> "Arial"},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{25.31666667, 
     34.08083333}, {-0.23818447294956027`, -0.2356293034891886}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         StyleBox[PointBox[CompressedData["
1:eJw923dcjf0fx/FCKCMNjXMaaElDCg2jq0JJSCTRdVBGqVRKSEMkyapIZJSU
TbYI2VslW4qUNEQlEanf+5zf93P3z/14PVqe53td1/e6Tp97oHeQ28IuUlJS
+jJSUuL/dvf/1d2mP89N0T11Tu1lUYG6oMU5Gp11eZrauldFBa2DvbbdQq9f
ObVhwOuigueWd553V+G5jb/79lJ+U1TwufqG6iS0fmnTOx307Z/4BvQcxyuO
PfD1md2SM5+jK1euiNiBz589t6VKVZXnxq8v/L4Gve0WvgF9XNF0wNS3RQUB
z/jATHToxlvmc9Axa2afqULL1Uk3Z6C9xN+gxnOxA7bpjH1XVGC9f4hNIHqa
S/WyJrTLZIPoM2jnwd19p5QWFRiKvwHdpyXfqAUt8arzXN4Lq6CD75kXnfZO
tvnhe+ZFLxddvceVMa+A57SWvw+qLmNedOvOjA7jcuZF5wZdHLW5nHnRUVnH
3h4rZ14hz01QnG4h9YF50btf5Mf1+sC8aCmbYjX3D8yLPps3zfr6B+bV4DnH
ujkBKh+ZF31/SIPRmo/Mi67bnxt/4CPzouMm9yxo+si8mjx3oUvIIaMK5kVX
7x+qY1/BvGj1L7mmsRXMq8VzXj88VW9WMC9a1mmQZ0MF84o/P7HsRFsF86Ir
TtZYdPnEvNr4eSqhe7U+MS/a+ldenuon5kU39noVMOQT86L/SieuPfCJeQfw
XH6Q2j+rSuZFN04Zf+hWJfOik/u+/2pUxbxoxXBh2o4q5h3Ic0Njs/wqq5gX
fadh1e7HVcyLfnHpl93TKuYdxHOFfQuuuHxmXnTE+zjTxs/Miw58kP4jpJp5
0QUZWq33PjOvDs8ZnCwdmfmZedG/T50bOqOSedEztsgsXF3JvOjAOY3xJpXM
q8tz3xJ0hzuRFx0iV2qvXsW8aAdFwSwT8qJzXIsEduTVw/mx/u8/D/Kidx1b
POQtedE+r9UuW35mXn2eKyuxl19AXvTzxScbVpEXnabYFH/8M/Oii6fa3N5S
zbwG+PkC9TmLqpkXrfXtyU7vauZFT3Zf1iPyM/OifaLkt60l72CeG/5rhPWa
KuZFTz7vu/zMZ+ZFr21sNJv8hXnR87X8LzjUMK8hz13e+yywrpp50a2rN31s
rmZe9FHZlqqdX5h3CM/ppp5ICPvCvOjZHjbWPb8wL3pnhVXDzBrmRV9XvRCd
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
H3/7hm65mnHaBW0h/sjFeldfrBffn/Sz37NiBdrrcuE2T7ROU1p+PlpUoKy/
CC0l/jiN16NTvi0YXdbXd9w49K2Z236sQjdeW5CQgN4xZHj5evTTJ/hAK93q
SBXfnxwrHa6gcIbnvl4asD4VfS1xmLs7WnHunkPp6PTd+ECvib0Qko1ecUS6
vAxdP7p/yQ70Ro+OgYPO4nj9F9m2hbzomxfDU9LIi7aRHZzmT160l2XnpRjy
nsP+4ysyjSAvemx35WUDyYvOMCqabEze83ieaNzixpEX/TV2rQ1HXvTOtKt6
E8iL/pUbO28ueS/w3KigKU+DyItWemrfbSV50cpZ4Q3h5EVL+d5bEEXeizy3
2z+nNZa86IWPQpatIS+6p66J90byom1Pjxm9mbyX8PrEqTkmkxdtcWtB+Q7y
orMKelRnkTcP9w++UVa55EXPXCf15hR50SsX3S45R17076wilZvkvcxz3wc3
KdwnL3p+aXL6K/Kix9lnJ9eRF71dMX1UE3mv8FyavO2YH+RFT3vld/cPedEn
ZW6mdtVkXvSnmIFzxfdXEm8+1nuYTHV/TeZFR754dKKvJvOiT+xL7SuvybxX
cT5usll+lLzotoUfn9mQF104oyDRmrxoBaUl/WzIew33Yzf8xlqRF/3LdGSd
FXnRw7Zs22tJXvSR9Mlnrcl7Ha93wgx/K/KiHe7XFo0gL1r3+qwFw2h90U93
jzMypfUtwPPB/qj1RrS+6Emz5s80pPVFf1bNNdCh9b3Bc8e2vzMaSF70Sse+
W7XJi9bOGlauSV50yO89FULy3sT96juhohp50cWbr2/tT1604QPlVCXyorcU
p7crk/cWzw1S+3VRibzotCTtq4rkRUfLLq+WJy/6k3D6jyIh897mOVm1+ZcS
hMyLnv40+eQ6IfOie3usL44RMu8dnttc6xUaIWRetCCqrTlMyLzoLccnnA0S
Mi/674VDoX5C5r3LcxtjTJfMEzIvumzRl+xZQuZF7xMWzJ4uZF60ZoS//RQh
897D84p9L4+JQuZFb/f7NnGckHnRVjevWYmffyVedIpMQrgNee9jP/FoLBpB
XvTAqec6zMiL/uJ83d+YvA9wfcrxch1MXrTVoxJ/HfKiGxunXdEiL/q6+bvb
quR9yHPGc+sfK5IXbWaeE9eHvOh63fZvPcmLru12o0tX8j7C9aZbv03tAuZF
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
XvQ1Z89B4s9LvOiZH1es6a3BvOjvc3VGqWgwb1cRJ+JqH4qf5yVe9PI6nYfi
96skXvSNmq9J4vcHJN5uIo4f6vjQQoN50aUqC86L37+QeNHvte9tEf89U+JF
a51bOclZg3ll8NumeyiK3x+UeNH91J5V8hrMi+7e0UPHV4N50alXVm8IIG93
ERfW2WeL+P0viRfdo1d6ehh50anv2zZHkBdtXiV3O5a8PUSciY/L9S3kRf9r
mbJrD3nRCx6mqh0kb08RJzejV8Uh8qJHmPV+cpK8aL1zU1wvkhedX9U/JYy8
siLumK5zzkjyoi9INdnZkhf9+15dDyfyopNuJc+fSl45EVf5wWKcJ3nRsqHm
PeaRFz23W/oCb/Kinz4wjfclby8RV1hSaxBMXvTCnMiBK8iL1k1pUosib28R
15DNn19PXvS2IwNqN5IXXbVNO38LedF3jv95soO8fUScY5tvyk7yopfqh2Tt
IS/6wt28u9nkRVd1ObnyCHn74vW69LH/cfKiz81KuHmGvOhHlisPnCMvOvRB
y4Nz5JUXcU0yH9b6khf9Xb3gqxp50SN1mku1yNtPxD1PME7XJS86/9XQlsHk
RdvqnOoylLxotYJ9X4aTV0HEGX2KSBpNXvSNlQNrHMiLtlEbGuFMXvSyhKwq
V/IqiriNwzwN/ltf9PPXwV958qIPWCgNmUde9IDHuh6Lyask4rxWOD8OIi/a
Y23Ly2XkRX9Ot7MMI6+yiFs7f/+zVeRF773ebVIsedHb7j9tWk9edJh91DQf
8vYXcYPmbZAfT1709/ENayaQFx1Y3pzx3/GMNj3hJzeRvCoiriY89pIzedHq
38/+mkRe9Jf504JdyIvuLS/nMZm8qiLuT/G8jsnkRUvtyHaZSl60qr1IYxp5
1bDean9eu5EXnZY4dsVM8qJnT5jVw5O86JZOjcte5FXH68/1iePJiz7c4vna
hrzoG3dHSK6vEi96uGaqc0/yCkRcirapRTfyoh+KVqyVIi/adre/sJ32I3SY
q2jpL9qPhCKu/m50ZTPtR+jkR+l7vtF+hLaerbyojvYjDRF3XO9bSTXtR+gV
Sa9tP9F+hJ7V41FxGe1H6ECzzOC3tB9pYn/JPpnzkvYjdMeJczee0X6ETigt
nfSU9iO0wXdL44e0/2rh+hMQu+cO7Ufor20yfwpo/0Vv2jv+aj550SdKXU0u
klcbx9ew4F255EVPuHb781Hyoi+PXH0zm7wD0C8+lGeQFz3qaFJuGnnRQcGl
WknkRV9Yl2W1mbwDRZz/PYvADeRFe4UqXF9HXvRQt+Ej1pAXPdnDNiiGvINE
3GL783tiyIt+MW5CYjR50R9NLI+vIi+6cduhqeHk1RFxizxNzoaTF23fqW8a
Tl60Rtp+wxDy6mJ/v+a2wZ+86F6Js5+L75ck815o1Y7IWeKWzHuh9aqP5/gK
2byXHn5f2Zju4vknybwXeqmKZYK3kM17obcfSI4T3y9L5r3QK9af/Sa+n5bM
e+mLuERl1xx3IZv3Qodq7ls/Q8jmvdC1rXkKU4Vs3ssA90fr+t9yFLJ5L/To
zJgt4vtXyXwbWtEp3ttByObb0L9aj74U319K5tsGi7jNi0w6xfefkvk2tHRL
0KWR5EXbnB0YZU5etJ6Zr70ZeQ1FXNcPP9eakBf9soRrNCIvOnOK0/kh5EWv
PzSkwJC8Q0Tcvq0KHfrkRVfNSzyjQ170+fYu+waR1wjnX0jK8IHkRb98Uvhd
i7xo95tNfwXkRe97PUZajbzGuD80CH6mRl50rLTlClXyorMcigWq5EUbxUx3
FJDXRMRFdZt0XUhe9L89R9oF5EVnHE8qVSEvWrpiTIQSeU1F3JCUST2UyYte
lnreWZG86Pj8xLR+5B0q4urupbjIkxfdrLy9vi950a5P7rzpR170G/372vLk
NRNxgyd0SZUjL1q29HPPHuRFX8wxWSFDXvQLU93mbuQdJuIsdMK6dCMvus1Q
1rw7edHjkmfc705edOkTpz9dyWuO10cn2UqKvOirLl1fdtL8Ijqk0HRaJ80v
WmB/3F4k84/mF9GPfKdn/qN5TfTSM7nT/tK8Jjr6VdT7PzSvOVzEjZ0YZPaP
5jXRuaKy5Daa10RPvdo5t5XmNdHXL6zR+U3zmiPweto3hf6meU300qmlf//Q
vCb6xe7ype00r4m+W7l0VhvNa47E9fVqjmkbzWuiF1s8Lv5DXrRFQob7P/Ja
ijh5qUOX2smL1sg3CWgjLzrdbMOUNvKiZw7cVPabvFYiLm/Uz8Y28qKvDzXw
bCcvWqi1u7WdvOiAqTI67eS1xv2FYfjrdvKisz+7l/8jLzom7nBYB3nRb2MU
9naQ1wavx8BPth3kRWs5OT/5R170mbkzzf/zjhJxE7vLaf4lL1qpxf37b/Ki
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
           "]],
          FontFamily->"Arial"]}}, {}}}, {}, {}, {{}, {}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"tempo (s)\"", TraditionalForm], 
      FormBox["\"Energia m\[EAcute]dia (J)\"", TraditionalForm]},
    AxesOrigin->{116.24587242968752`, -0.24853236902447737`},
    BaseStyle->{FontFamily -> "Arial"},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Large,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{116.3316667, 
     121.8225}, {-0.2518570850182942, -0.24869068883370676`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",ExpressionUUID->\
"32ba3e77-89d8-4452-be5d-444f0a25086e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simula\[CCedilla]\[ATilde]o", "Section",
 CellChangeTimes->{{3.7020460197715096`*^9, 
  3.702046021505974*^9}},ExpressionUUID->"27f92b22-ce34-443d-ba0e-\
fc6d987d4c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "r", ",", " ", "L", ",", " ", "centro", ",", "tempo", ",", " ", "base", 
     ",", " ", "pontoContato", ",", " ", "posicaoMassa"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", "  ", 
     RowBox[{"Pegar", "[", 
      RowBox[{"tomada", ",", " ", "\"\<raio da polia\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"L", " ", "=", " ", 
     RowBox[{"Pegar", "[", 
      RowBox[{"tomada", ",", " ", "\"\<comprimento do fio\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"centro", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"base", " ", "=", " ", "0.04"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pontoContato", "[", "tempo_", "]"}], " ", "=", 
     RowBox[{"centro", " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}], ",", " ", 
        RowBox[{"r", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"posicaoMassa", "[", "tempo_", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"funcaoX", "[", "tempo", "]"}], ",", " ", 
       RowBox[{"funcaoY", "[", "tempo", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Point", "[", "centro", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Circle", "[", 
            RowBox[{"centro", ",", " ", "r"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pontoContato", "[", "t", "]"}], ",", " ", 
              RowBox[{"posicaoMassa", "[", "t", "]"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"posicaoMassa", "[", "t", "]"}], ",", " ", "0.005"}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.27"}], ",", "0.2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.35"}], ",", "0.1"}], "}"}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"3", "*", 
         RowBox[{"CalcularPeriodoTeo", "[", 
          RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7020460247493486`*^9, 3.7020460833159895`*^9}, {
  3.7020461214298716`*^9, 3.702046321511149*^9}, {3.7020471902341547`*^9, 
  3.702047209814061*^9}, {3.7020474452834635`*^9, 
  3.7020475001170197`*^9}},ExpressionUUID->"30ca754a-a0b0-4188-9c39-\
764e5c692ab6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 3.989890909090909}}, Typeset`size$$ = {
    450., {213., 218.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$7188$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$7188$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{
          Point[$CellContext`centro$7185], 
          Circle[$CellContext`centro$7185, $CellContext`r$7185], 
          Line[{
            $CellContext`pontoContato$7185[$CellContext`t$$], 
            $CellContext`posicaoMassa$7185[$CellContext`t$$]}], 
          Disk[
           $CellContext`posicaoMassa$7185[$CellContext`t$$], 0.005]}], 
        PlotRange -> {{-0.27, 0.2}, {-0.35, 0.1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 3.989890909090909, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {256., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",ExpressionUUID->"dd5b9d07-\
6f2d-4f25-952f-c46d1cffa8a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Desenhos", "Section",
 CellChangeTimes->{{3.702040001937994*^9, 3.702040003500558*^9}, {
  3.702046011666357*^9, 3.7020460127555175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "r", ",", " ", "L", ",", "tempo", ",", " ", "centro", ",", " ", "base", 
     ",", " ", "pontoContato", ",", " ", "posicaoMassa"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", "  ", 
     RowBox[{"Pegar", "[", 
      RowBox[{"tomada", ",", " ", "\"\<raio da polia\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"L", " ", "=", " ", 
     RowBox[{"Pegar", "[", 
      RowBox[{"tomada", ",", " ", "\"\<comprimento do fio\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"centro", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"base", " ", "=", " ", "0.04"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tempo", " ", "=", " ", "0.265"}], ";", "\[IndentingNewLine]", 
    RowBox[{"pontoContato", " ", "=", 
     RowBox[{"centro", " ", "-", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}], ",", " ", 
        RowBox[{"r", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"posicaoMassa", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"funcaoX", "[", "tempo", "]"}], ",", " ", 
       RowBox[{"funcaoY", "[", "tempo", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Point", "[", "centro", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{"centro", ",", " ", "r"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"pontoContato", ",", " ", "posicaoMassa"}], "}"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Disk", "[", 
          RowBox[{"posicaoMassa", ",", " ", "0.005"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Dashing", "[", "0.03", "]"}], ",", " ", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"pontoContato", ",", " ", 
              RowBox[{"pontoContato", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"-", "5"}], "base"}]}], "}"}]}]}], "}"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"RotCircle", "[", 
            RowBox[{
             RowBox[{"\[Theta]", "[", "tempo", "]"}], ",", " ", 
             "pontoContato", ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "base"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"base", ",", "0"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<\[Theta](t)\>\"", ",", 
             RowBox[{"pontoContato", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "base"}]}], "}"}], "-", 
              RowBox[{
               FractionBox["base", "2"], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<L(t)\>\"", ",", " ", 
             RowBox[{"pontoContato", "+", 
              RowBox[{
               FractionBox["L", "2"], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", "[", "tempo", "]"}], "]"}]}]}], 
                "}"}]}], "+", 
              RowBox[{"{", 
               RowBox[{"base", ",", "0"}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"centro", ",", " ", 
              RowBox[{"centro", "+", 
               RowBox[{"{", 
                RowBox[{"r", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<r\>\"", ",", " ", 
             RowBox[{"centro", "+", 
              RowBox[{
               FractionBox["r", "2"], 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}]}], "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                FractionBox["base", "2"]}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", "}"}], "]"}], ",", 
           RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
           RowBox[{"Arrowheads", "[", "Large", "]"}], ",", "Red", ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{"posicaoMassa", ",", 
              FractionBox[
               RowBox[{"pontoContato", "+", "posicaoMassa"}], "2"]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{"posicaoMassa", ",", " ", 
              RowBox[{"posicaoMassa", "-", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0.1"}], "}"}]}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<T(t)\>\"", ",", " ", 
             RowBox[{"posicaoMassa", "+", 
              RowBox[{"{", 
               RowBox[{"0", ",", "base"}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<mg\>\"", ",", " ", 
             RowBox[{"posicaoMassa", "-", 
              RowBox[{"{", 
               RowBox[{"base", ",", "base"}], "}"}]}]}], "]"}], ","}], " ", 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(L\), \(0\)]\)\>\"", ",", " ", 
           RowBox[{"pontoContato", "+", 
            RowBox[{"{", 
             RowBox[{"base", ",", 
              FractionBox[
               RowBox[{"-", "L"}], "2"]}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{"centro", ",", " ", 
            RowBox[{"centro", "+", 
             RowBox[{"{", 
              RowBox[{"base", ",", "0"}], "}"}]}]}], " ", "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{"centro", ",", 
            RowBox[{"centro", "+", 
             RowBox[{"{", 
              RowBox[{"0", ",", "base"}], "}"}]}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<x\>\"", ",", 
           RowBox[{"centro", "+", 
            RowBox[{
             FractionBox["base", "2"], 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<y\>\"", ",", 
           RowBox[{"centro", "+", 
            RowBox[{
             FractionBox["base", "2"], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.702040182146613*^9, 3.7020404138372784`*^9}, {
  3.702040483805346*^9, 3.7020406271521406`*^9}, {3.7020408442777205`*^9, 
  3.702041304839672*^9}, {3.702041348723468*^9, 3.702041373830429*^9}, {
  3.702041776716919*^9, 3.702041852241538*^9}, {3.702041981251319*^9, 
  3.70204210227923*^9}, {3.702043216798658*^9, 3.7020433453081446`*^9}, {
  3.7020434377290187`*^9, 3.7020434510698185`*^9}, {3.7020435245617256`*^9, 
  3.7020437775019894`*^9}, {3.7020438781948195`*^9, 
  3.7020440203740463`*^9}},ExpressionUUID->"998de96f-6002-4c0b-899a-\
d0adb78d3933"],

Cell[BoxData[
 GraphicsBox[{PointBox[{0, 0}], CircleBox[{0, 0}, 0.0755], 
   LineBox[{{-0.06975901083823191, -0.028877853224771457`}, {
    0.0827646988369267, -0.39732293927395895`}}], 
   DiskBox[{0.0827646988369267, -0.39732293927395895}, 0.005], 
   InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(L\\), \\(0\\)]\\)\"\>", \
{-0.02975901083823191, -0.24307785322477146}], ArrowBox[{{0, 0}, {0.04, 0}}], 
   ArrowBox[{{0, 0}, {0, 0.04}}], InsetBox["\<\"x\"\>", {0.02, -0.02}], 
   InsetBox["\<\"y\"\>", {-0.02, 0.02}]},
  ImageSize->Small]], "Output",ExpressionUUID->"adff18b9-76a3-4746-94b3-\
d41ec7bb0d4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["180", "\[Pi]"], "*", 
  RowBox[{
   RowBox[{"Listar", "[", 
    RowBox[{"tomada", ",", "\"\<\[Theta]\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7022201005994396`*^9, 
  3.7022201197410374`*^9}},ExpressionUUID->"7e43d076-f88f-4a58-ae32-\
c728c70cf95b"],

Cell[BoxData[
 RowBox[{"-", "20.2115360589387`"}]], "Output",ExpressionUUID->"bbaa99a1-e2f2-4e11-b59c-6fce0aa39986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7022231748982744`*^9, 
  3.702223213471677*^9}},ExpressionUUID->"ba77c08e-c7ca-4a78-8093-\
a48c32825405"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"d5770d1f-8e93-42d7-9377-fd0db107a626"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 725},
WindowMargins->{{0, Automatic}, {Automatic, 32}},
PrintingPageRange->{Automatic, Automatic},
Magnification->1.25,
FrontEndVersion->"11.1 for Linux x86 (32-bit) (March 13, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 524, 14, 193, "Input", "ExpressionUUID" -> \
"67fcddf1-8b08-4271-9901-f50c57e3b182",
 InitializationCell->True],
Cell[1085, 36, 167, 4, 52, "Input", "ExpressionUUID" -> \
"e9a14551-9629-4379-b3f2-b4970701a507",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1277, 44, 258, 4, 85, "Section", "ExpressionUUID" -> \
"6a22543b-03c3-4cef-a6b2-3b34f8d9bbc3"],
Cell[CellGroupData[{
Cell[1560, 52, 3707, 95, 607, "Input", "ExpressionUUID" -> \
"db1efe68-3300-4fc3-b16a-f13ff000b461"],
Cell[5270, 149, 2486, 49, 446, "Output", "ExpressionUUID" -> \
"29b63d20-8fa2-44c6-b875-a101bbb38f1a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7805, 204, 337, 5, 85, "Section", "ExpressionUUID" -> \
"3c0ff842-bd95-477d-ab2b-9e01c4467e5f"],
Cell[CellGroupData[{
Cell[8167, 213, 4041, 95, 761, "Input", "ExpressionUUID" -> \
"e6aeceb5-eea2-4978-817d-509164f0260a"],
Cell[12211, 310, 3212, 64, 588, "Output", "ExpressionUUID" -> \
"cd9803e5-35e0-498b-8a01-c0b68737b01e"],
Cell[15426, 376, 293, 6, 29, "Message", "ExpressionUUID" -> \
"4e6c9a5f-b0c5-42a8-bb2a-6f17f50b4872"],
Cell[15722, 384, 293, 6, 29, "Message", "ExpressionUUID" -> \
"99394ee9-e69f-4a6f-b6ad-cb3a9a8d4d28"],
Cell[16018, 392, 293, 6, 29, "Message", "ExpressionUUID" -> \
"dd29f151-78fc-4b51-aa34-9030b5478f8f"],
Cell[16314, 400, 353, 7, 27, "Message", "ExpressionUUID" -> \
"7cd8e719-1f58-4bfb-9c66-d384b52b7e64"],
Cell[16670, 409, 3861, 55, 134, "Message", "ExpressionUUID" -> \
"556e461e-a284-48b2-a83b-3af040d9f778"],
Cell[20534, 466, 3743, 54, 121, "Message", "ExpressionUUID" -> \
"c056e65f-519a-4991-b71b-4feb67372a1a"],
Cell[24280, 522, 4039, 58, 136, "Message", "ExpressionUUID" -> \
"fccd66d6-f9fa-4c69-82b7-c218f578ea5b"],
Cell[28322, 582, 355, 7, 27, "Message", "ExpressionUUID" -> \
"ab19b867-8f20-4610-9586-c309a0e64f79"],
Cell[28680, 591, 293, 6, 29, "Message", "ExpressionUUID" -> \
"3b1d2771-e06c-4ab9-b9f4-d10b644f9f35"],
Cell[28976, 599, 293, 6, 29, "Message", "ExpressionUUID" -> \
"89fb8545-fa4d-475a-b127-7fe4b0d3aa4e"],
Cell[29272, 607, 293, 6, 29, "Message", "ExpressionUUID" -> \
"b416c683-85e6-4aa1-aeed-bf4a85e62146"],
Cell[29568, 615, 353, 7, 27, "Message", "ExpressionUUID" -> \
"1e09c1e4-a64d-4f1b-95f3-9745cd633bd5"],
Cell[29924, 624, 3861, 55, 134, "Message", "ExpressionUUID" -> \
"b8aa62a9-a565-4a19-b5f5-f59d33d3c73d"],
Cell[33788, 681, 3743, 54, 121, "Message", "ExpressionUUID" -> \
"0ae871a9-e509-48bf-ae59-b8531ef23934"],
Cell[37534, 737, 4039, 58, 136, "Message", "ExpressionUUID" -> \
"4a741b38-c6c2-484c-88ab-12f0206970f2"],
Cell[41576, 797, 355, 7, 27, "Message", "ExpressionUUID" -> \
"b6b5da1a-fc38-45a6-98e8-1dfe814806bc"],
Cell[41934, 806, 293, 6, 29, "Message", "ExpressionUUID" -> \
"a524c74a-be83-4801-b893-72b9a4b7f828"],
Cell[42230, 814, 293, 6, 29, "Message", "ExpressionUUID" -> \
"acc21926-5daa-489b-a7db-2dbe4bfb2058"],
Cell[42526, 822, 293, 6, 29, "Message", "ExpressionUUID" -> \
"bd3b6184-e45a-4ebf-9c82-7a4a83bb4347"],
Cell[42822, 830, 353, 7, 27, "Message", "ExpressionUUID" -> \
"b063ec77-e983-4a91-9d6e-0f09b4e39a9b"],
Cell[43178, 839, 3861, 55, 134, "Message", "ExpressionUUID" -> \
"ad7b7275-0b70-42aa-971f-40454812329a"],
Cell[47042, 896, 3743, 54, 121, "Message", "ExpressionUUID" -> \
"17610a5d-3765-4eea-956d-c6b07ec83648"],
Cell[50788, 952, 4039, 58, 136, "Message", "ExpressionUUID" -> \
"a7159a7b-3060-435f-817d-a3a6192e906a"],
Cell[54830, 1012, 355, 7, 27, "Message", "ExpressionUUID" -> \
"4349427d-bd41-4476-b4a1-49310794c7c8"],
Cell[55188, 1021, 293, 6, 29, "Message", "ExpressionUUID" -> \
"c3026452-de0e-4294-8844-c945213bf145"],
Cell[55484, 1029, 293, 6, 29, "Message", "ExpressionUUID" -> \
"729bdddb-1eb2-4702-8b7b-0551cce7554e"],
Cell[55780, 1037, 293, 6, 29, "Message", "ExpressionUUID" -> \
"d7e0030d-c16d-4b6a-863f-f8c7eeeecb0e"],
Cell[56076, 1045, 353, 7, 27, "Message", "ExpressionUUID" -> \
"1b690d74-9e7a-4843-8d5a-6c0d71a6246e"],
Cell[56432, 1054, 3861, 55, 134, "Message", "ExpressionUUID" -> \
"1b2d78a3-051e-4f04-894c-56c78cc944d9"],
Cell[60296, 1111, 3743, 54, 121, "Message", "ExpressionUUID" -> \
"7d55ba2b-e991-4e5d-ae29-1cca5843b847"],
Cell[64042, 1167, 4039, 58, 136, "Message", "ExpressionUUID" -> \
"b1ba0a18-d72e-466a-872a-58795f9b6f2d"],
Cell[68084, 1227, 355, 7, 27, "Message", "ExpressionUUID" -> \
"db188ae9-4b17-4018-b315-93bf06ff6e61"],
Cell[68442, 1236, 314, 7, 29, "Message", "ExpressionUUID" -> \
"6b0de8f9-65dc-4f03-892c-1bffdad535bd"],
Cell[68759, 1245, 314, 7, 29, "Message", "ExpressionUUID" -> \
"3edf6f07-51ab-4e01-b643-3cfa5b19147b"],
Cell[69076, 1254, 314, 7, 29, "Message", "ExpressionUUID" -> \
"76488792-2a33-46d9-b9b3-103ff9873f46"],
Cell[69393, 1263, 354, 7, 27, "Message", "ExpressionUUID" -> \
"d144c364-2399-4c09-9ce9-ab4ed008d6e7"],
Cell[69750, 1272, 3919, 57, 134, "Message", "ExpressionUUID" -> \
"f4bb11a0-92ba-4344-84d0-8ea26d866ff1"],
Cell[73672, 1331, 3656, 54, 121, "Message", "ExpressionUUID" -> \
"35077e5d-dadf-44c6-a9f0-405cb29471a3"],
Cell[77331, 1387, 3876, 56, 134, "Message", "ExpressionUUID" -> \
"e159ec97-ba9b-430b-adb3-c651fd8a4deb"],
Cell[81210, 1445, 356, 7, 27, "Message", "ExpressionUUID" -> \
"e940d6e6-f0ec-485d-9703-5f4b27cf7de3"],
Cell[81569, 1454, 302, 6, 29, "Message", "ExpressionUUID" -> \
"d72ebdf7-eff8-4cb4-8d9b-3ea46b29e061"],
Cell[81874, 1462, 302, 6, 29, "Message", "ExpressionUUID" -> \
"53121bdd-6a88-48df-8d25-c1fc0a84a6dc"],
Cell[82179, 1470, 302, 6, 29, "Message", "ExpressionUUID" -> \
"127d5890-5a85-4681-a538-0fa33b3e1871"],
Cell[82484, 1478, 356, 7, 27, "Message", "ExpressionUUID" -> \
"7ed37ab4-3f76-46f3-a5f4-006c787f16e8"],
Cell[82843, 1487, 4162, 64, 142, "Message", "ExpressionUUID" -> \
"93abf763-3c28-4da9-90ec-957eb89bfb6d"],
Cell[87008, 1553, 294, 6, 29, "Message", "ExpressionUUID" -> \
"0cae0f86-d7a8-4be3-b38a-424dfbe97ef7"],
Cell[87305, 1561, 294, 6, 29, "Message", "ExpressionUUID" -> \
"9fe85414-fe65-41f9-b0c3-0331fdab48bd"],
Cell[87602, 1569, 294, 6, 29, "Message", "ExpressionUUID" -> \
"8b44e058-8037-4943-812c-367e3b75e857"],
Cell[87899, 1577, 354, 7, 27, "Message", "ExpressionUUID" -> \
"feddc32b-1eae-456d-977b-ca6c55be88ef"],
Cell[88256, 1586, 3862, 55, 134, "Message", "ExpressionUUID" -> \
"236eca6c-21e7-4fe2-ba86-7bd86e245dea"],
Cell[92121, 1643, 3748, 55, 121, "Message", "ExpressionUUID" -> \
"01ff2fa7-f41a-4afc-82b1-4b03a47706da"],
Cell[95872, 1700, 4040, 58, 136, "Message", "ExpressionUUID" -> \
"2243e863-eac9-4fba-88b8-55586b1b2f14"],
Cell[99915, 1760, 356, 7, 27, "Message", "ExpressionUUID" -> \
"66345a47-e62a-4255-b8b6-e8ff7647f84c"],
Cell[100274, 1769, 294, 6, 29, "Message", "ExpressionUUID" -> \
"7a6a4cfd-6279-4cce-8d9b-fd4fb1ba33ce"],
Cell[100571, 1777, 294, 6, 29, "Message", "ExpressionUUID" -> \
"9bd464d0-f605-4f6e-9f55-18f0b7f0e264"],
Cell[100868, 1785, 294, 6, 29, "Message", "ExpressionUUID" -> \
"00d38876-6ee4-44bb-91ee-7dbe2251b858"],
Cell[101165, 1793, 354, 7, 27, "Message", "ExpressionUUID" -> \
"4e1afd4f-5fbd-4aa9-b079-e9330c2ec8c4"],
Cell[101522, 1802, 3862, 55, 134, "Message", "ExpressionUUID" -> \
"55f47651-cd37-4185-a1de-4b3764b49c4d"],
Cell[105387, 1859, 3749, 55, 121, "Message", "ExpressionUUID" -> \
"c77ffa85-5c0c-41d3-8bae-2c22250f2ae3"],
Cell[109139, 1916, 4041, 58, 136, "Message", "ExpressionUUID" -> \
"0e7114f4-1b73-47ec-b7ba-3b6836cefffd"],
Cell[113183, 1976, 357, 7, 27, "Message", "ExpressionUUID" -> \
"cde097a7-1669-4a9f-a713-f95b4bed0914"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113589, 1989, 313, 5, 85, "Section", "ExpressionUUID" -> \
"60e5b18f-123c-4259-ac40-0670d47c472e"],
Cell[113905, 1996, 1862, 39, 221, "Input", "ExpressionUUID" -> \
"8420ad2f-1786-449e-9430-89dfe6eb3138"],
Cell[115770, 2037, 2389, 51, 269, "Input", "ExpressionUUID" -> \
"ce1c3599-822e-4680-b229-8b76881758f1"],
Cell[118162, 2090, 3232, 82, 341, "Input", "ExpressionUUID" -> \
"8a83c019-1227-443b-a586-529d021d6ef1"],
Cell[CellGroupData[{
Cell[121419, 2176, 1802, 48, 294, "Input", "ExpressionUUID" -> \
"b2d0df55-d8c7-496b-84e3-421e19062044"],
Cell[123224, 2226, 187085, 3088, 471, "Output", "ExpressionUUID" -> \
"ebd29520-f1ad-4911-a735-a8c8126234ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310358, 5320, 251, 4, 85, "Section", "ExpressionUUID" -> \
"770142eb-6f07-4813-bf5d-5c29205f9f46"],
Cell[CellGroupData[{
Cell[310634, 5328, 2492, 51, 233, "Input", "ExpressionUUID" -> \
"0ce2ad2b-5643-4f79-8bb0-eec0f418e298"],
Cell[313129, 5381, 14638, 298, 386, "Output", "ExpressionUUID" -> \
"03cb1bcf-a8c6-4254-bd44-6a2dc6f66907"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327804, 5684, 243, 5, 52, "Input", "ExpressionUUID" -> \
"263c4d80-a91d-4d5d-848c-5e052488e31d"],
Cell[328050, 5691, 102, 0, 52, "Output", "ExpressionUUID" -> \
"23caf3ae-0298-437a-a275-bfcb96ea1a0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328201, 5697, 255, 4, 85, "Section", "ExpressionUUID" -> \
"aa2383e8-15ad-4314-beb4-ef167dbb31a2"],
Cell[CellGroupData[{
Cell[328481, 5705, 9372, 225, 856, "Input", "ExpressionUUID" -> \
"fdadf6a9-278e-4dfd-8172-cb70adc2e96b"],
Cell[337856, 5932, 118365, 1999, 419, "Output", "ExpressionUUID" -> \
"386c4769-3d9f-4181-9997-1243f8c6d092"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[456270, 7937, 195, 3, 85, "Section", "ExpressionUUID" -> \
"7827c5f8-c311-450d-b365-eea6cf732259"],
Cell[CellGroupData[{
Cell[456490, 7944, 5181, 129, 685, "Input", "ExpressionUUID" -> \
"8e63f2d1-808f-4342-9048-6c4e7772604d"],
Cell[461674, 8075, 71968, 1229, 1282, "Output", "ExpressionUUID" -> \
"32ba3e77-89d8-4452-be5d-444f0a25086e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533691, 9310, 174, 3, 85, "Section", "ExpressionUUID" -> \
"27f92b22-ce34-443d-ba0e-fc6d987d4c19"],
Cell[CellGroupData[{
Cell[533890, 9317, 3371, 82, 585, "Input", "ExpressionUUID" -> \
"30ca754a-a0b0-4188-9c39-764e5c692ab6"],
Cell[537264, 9401, 2320, 47, 550, "Output", "ExpressionUUID" -> \
"dd5b9d07-6f2d-4f25-952f-c46d1cffa8a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[539633, 9454, 144, 2, 106, "Section", "ExpressionUUID" -> \
"cdc7946f-3c7c-4d4f-b872-f92b9d37e930"],
Cell[CellGroupData[{
Cell[539802, 9460, 8423, 202, 1458, "Input", "ExpressionUUID" -> \
"998de96f-6002-4c0b-899a-d0adb78d3933"],
Cell[548228, 9664, 601, 10, 375, "Output", "ExpressionUUID" -> \
"adff18b9-76a3-4746-94b3-d41ec7bb0d4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548866, 9679, 337, 9, 97, "Input", "ExpressionUUID" -> \
"7e43d076-f88f-4a58-ae32-c728c70cf95b"],
Cell[549206, 9690, 116, 1, 65, "Output", "ExpressionUUID" -> \
"bbaa99a1-e2f2-4e11-b59c-6fce0aa39986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549359, 9696, 392, 12, 65, "Input", "ExpressionUUID" -> \
"ba77c08e-c7ca-4a78-8093-a48c32825405"],
Cell[549754, 9710, 228, 7, 65, "Output", "ExpressionUUID" -> \
"d5770d1f-8e93-42d7-9377-fd0db107a626"]
}, Open  ]]
}, Open  ]]
}
]
*)

